<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>세지니의 소소한 개발 이야기</title>
    <link>http://hongsj36.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>초보 개발자의 일기장</description>
    <pubDate>Sat, 06 Jun 2020 20:21:01 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[programmers] 2019 KAKAO BLIND RECRUITMENT - 블록 게임</title>
      <link>http://hongsj36.github.io/2020/06/06/prog_KAKAO2019BLIND_%EB%B8%94%EB%A1%9D%20%EA%B2%8C%EC%9E%84/</link>
      <guid>http://hongsj36.github.io/2020/06/06/prog_KAKAO2019BLIND_%EB%B8%94%EB%A1%9D%20%EA%B2%8C%EC%9E%84/</guid>
      <pubDate>Sat, 06 Jun 2020 03:00:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;2019-kakao-blind-recruitment-블록-게임&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2019-kakao-blind-recruitment-블록-게임&quot;&gt;&lt;/a&gt; 2019 KAKAO BLIND RECRUITMENT - 블록 게임&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42894&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;문제링크&lt;/a&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="2019-kakao-blind-recruitment-블록-게임"><a class="markdownIt-Anchor" href="#2019-kakao-blind-recruitment-블록-게임"></a> 2019 KAKAO BLIND RECRUITMENT - 블록 게임</h3><ul><li><a href="https://programmers.co.kr/learn/courses/30/lessons/42894" target="_blank" rel="noopener">문제링크</a><a id="more"></a></li><li>내 코드</li></ul><div class="note warning">            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>블럭 제거할 수 있는 조건</p><ol><li>모양</li><li>블럭 위에 방해물 x</li></ol><p>제거할 수 있는 모양 5가지의 특성을 그림과 같이 정리하였다.</p><img src="/2020/06/06/prog_KAKAO2019BLIND_%EB%B8%94%EB%A1%9D%20%EA%B2%8C%EC%9E%84/img1.png" class="" title="This is a image"><p>다른 정답코드들에 비해 빠른 실행시간을 보여주어서 만족하였다.</p>          </div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(board)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_safe</span><span class="params">(r, c)</span>:</span>  <span class="comment"># 보드 범위 안</span></span><br><span class="line">        <span class="keyword">nonlocal</span> R, C</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> &lt;= r &lt; R <span class="keyword">and</span> <span class="number">0</span> &lt;= c &lt; C</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">del_block</span><span class="params">(r, c)</span>:</span></span><br><span class="line">        <span class="keyword">nonlocal</span> answer, drops_cnt</span><br><span class="line"></span><br><span class="line">        el = board[r][c]</span><br><span class="line">        <span class="comment"># ---- 블럭 모양으로 확인 ----#</span></span><br><span class="line">        <span class="comment"># 블럭 범위 내 아래로 내려가기</span></span><br><span class="line">        <span class="keyword">while</span> is_safe(r + <span class="number">1</span>, c) <span class="keyword">and</span> board[r + <span class="number">1</span>][c] == el:</span><br><span class="line">            r += <span class="number">1</span></span><br><span class="line">        <span class="comment"># 가로 블럭 범위 확인</span></span><br><span class="line">        c1 = c2 = c</span><br><span class="line">        <span class="keyword">while</span> is_safe(r, c1 - <span class="number">1</span>) <span class="keyword">and</span> board[r][c1 - <span class="number">1</span>] == el:</span><br><span class="line">            c1 -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> is_safe(r, c2 + <span class="number">1</span>) <span class="keyword">and</span> board[r][c2 + <span class="number">1</span>] == el:</span><br><span class="line">            c2 += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        need_drop = []  <span class="comment"># 채워야할 블럭 위치</span></span><br><span class="line">        <span class="comment"># 길이 2~3 이어야 함.</span></span><br><span class="line">        <span class="keyword">if</span> c1 == c2:  <span class="comment"># 길이 1</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">elif</span> c1 + <span class="number">1</span> == c2:  <span class="comment"># 길이 2</span></span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(c1, c2 + <span class="number">1</span>):</span><br><span class="line">                <span class="keyword">if</span> board[r - <span class="number">2</span>][c] != el:</span><br><span class="line">                    need_drop.append(c)</span><br><span class="line">            <span class="keyword">if</span> len(need_drop) == <span class="number">2</span>:  <span class="comment"># 모양x</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 길이 3</span></span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(c1, c2 + <span class="number">1</span>):</span><br><span class="line">                <span class="keyword">if</span> board[r - <span class="number">1</span>][c] != el:</span><br><span class="line">                    need_drop.append(c)</span><br><span class="line">            <span class="keyword">if</span> len(need_drop) == <span class="number">3</span>:  <span class="comment"># 모양x</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># ---- 제거 가능한 모양임 ----#</span></span><br><span class="line">        <span class="comment"># 위에서부터 1x1블럭 내릴 수 있나 확인</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> need_drop:</span><br><span class="line">            <span class="keyword">for</span> nr <span class="keyword">in</span> range(r):</span><br><span class="line">                <span class="keyword">if</span> board[nr][c]:  <span class="comment"># 막히면</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># ---- 블럭 삭제 가능 ----#</span></span><br><span class="line">        <span class="comment"># 블럭 삭제</span></span><br><span class="line">        <span class="keyword">for</span> dr <span class="keyword">in</span> range(<span class="number">-2</span>, <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(c1, c2 + <span class="number">1</span>):</span><br><span class="line">                <span class="keyword">if</span> board[r + dr][c] == el:</span><br><span class="line">                    board[r + dr][c] = <span class="number">0</span></span><br><span class="line">        <span class="comment"># drops True(블럭 삭제되면서 길 열림)</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(c1, c2 + <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> drops[c]:</span><br><span class="line">                drops[c] = <span class="literal">True</span></span><br><span class="line">                drops_cnt += <span class="number">1</span></span><br><span class="line">        answer += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ---- solution ----#</span></span><br><span class="line">    R = len(board)  <span class="comment"># rows</span></span><br><span class="line">    C = len(board[<span class="number">0</span>])  <span class="comment"># cols</span></span><br><span class="line"></span><br><span class="line">    drops = [<span class="literal">True</span>] * C  <span class="comment"># 1x1 블록 떨어뜨려볼 cols</span></span><br><span class="line">    drops_cnt = C</span><br><span class="line">    answer = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> drops_cnt:</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(C):</span><br><span class="line">            <span class="keyword">if</span> drops[c]:</span><br><span class="line">                drops[c] = <span class="literal">False</span></span><br><span class="line">                drops_cnt -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> r <span class="keyword">in</span> range(R):</span><br><span class="line">                    <span class="keyword">if</span> board[r][c]:</span><br><span class="line">                        del_block(r, c)</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://hongsj36.github.io/2020/06/06/prog_KAKAO2019BLIND_%EB%B8%94%EB%A1%9D%20%EA%B2%8C%EC%9E%84/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[programmers] 2019 KAKAO BLIND RECRUITMENT - 매칭 점수</title>
      <link>http://hongsj36.github.io/2020/06/05/prog_KAKAO2019BLIND_%EB%A7%A4%EC%B9%AD%20%EC%A0%90%EC%88%98/</link>
      <guid>http://hongsj36.github.io/2020/06/05/prog_KAKAO2019BLIND_%EB%A7%A4%EC%B9%AD%20%EC%A0%90%EC%88%98/</guid>
      <pubDate>Fri, 05 Jun 2020 04:00:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;2019-kakao-blind-recruitment-매칭-점수&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2019-kakao-blind-recruitment-매칭-점수&quot;&gt;&lt;/a&gt; 2019 KAKAO BLIND RECRUITMENT - 매칭 점수&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42893&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;문제링크&lt;/a&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="2019-kakao-blind-recruitment-매칭-점수"><a class="markdownIt-Anchor" href="#2019-kakao-blind-recruitment-매칭-점수"></a> 2019 KAKAO BLIND RECRUITMENT - 매칭 점수</h3><ul><li><a href="https://programmers.co.kr/learn/courses/30/lessons/42893" target="_blank" rel="noopener">문제링크</a><a id="more"></a></li><li>내 코드</li></ul><div class="note warning">            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>파이썬 정규 표현식 <a href="https://wikidocs.net/4308" target="_blank" rel="noopener">시작하기</a></p>          </div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 공부중</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://hongsj36.github.io/2020/06/05/prog_KAKAO2019BLIND_%EB%A7%A4%EC%B9%AD%20%EC%A0%90%EC%88%98/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[programmers] 2019 KAKAO BLIND RECRUITMENT - 길 찾기 게임</title>
      <link>http://hongsj36.github.io/2020/06/05/prog_KAKAO2019BLIND_%EA%B8%B8%20%EC%B0%BE%EA%B8%B0%20%EA%B2%8C%EC%9E%84/</link>
      <guid>http://hongsj36.github.io/2020/06/05/prog_KAKAO2019BLIND_%EA%B8%B8%20%EC%B0%BE%EA%B8%B0%20%EA%B2%8C%EC%9E%84/</guid>
      <pubDate>Fri, 05 Jun 2020 03:00:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;2019-kakao-blind-recruitment-길-찾기-게임&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2019-kakao-blind-recruitment-길-찾기-게임&quot;&gt;&lt;/a&gt; 2019 KAKAO BLIND RECRUITMENT - 길 찾기 게임&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42892&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;문제링크&lt;/a&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="2019-kakao-blind-recruitment-길-찾기-게임"><a class="markdownIt-Anchor" href="#2019-kakao-blind-recruitment-길-찾기-게임"></a> 2019 KAKAO BLIND RECRUITMENT - 길 찾기 게임</h3><ul><li><a href="https://programmers.co.kr/learn/courses/30/lessons/42892" target="_blank" rel="noopener">문제링크</a><a id="more"></a></li><li>내 코드</li></ul><div class="note warning">            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><ul><li>nodeinfo를 오름차순 정렬한다. (인덱스를 잃지 않기 위해 요소안에 넣음)</li><li>트리구성을 확인한다.<ul><li>y값이 가장 높은 요소가 루트이다. 루트의 x를 rx라고 해봄.</li><li>자식은 [ : rx]의 루트, [rx + 1 : ]의 루트가 된다.</li></ul></li><li>전위, 후위 순회</li></ul>          </div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#---- recursion limit 해제 ----#</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.setrecursionlimit(<span class="number">10</span>**<span class="number">6</span>)</span><br><span class="line"><span class="comment">#------------------------------#</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(nodeinfo)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_root</span><span class="params">(nodeInfo)</span>:</span></span><br><span class="line">        root_y = <span class="number">-1</span></span><br><span class="line">        max_i = <span class="number">-1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nodeInfo)):</span><br><span class="line">            <span class="keyword">if</span> root_y &lt; nodeInfo[i][<span class="number">1</span>]:</span><br><span class="line">                root_y = nodeInfo[i][<span class="number">1</span>]</span><br><span class="line">                max_i = i</span><br><span class="line">        <span class="keyword">return</span> nodeInfo[max_i][<span class="number">2</span>], max_i</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">orders</span><span class="params">(my_list)</span>:</span></span><br><span class="line">        <span class="keyword">nonlocal</span> preorder, postorder</span><br><span class="line">        <span class="keyword">if</span> my_list:</span><br><span class="line">            num, idx = find_root(my_list)</span><br><span class="line">            preorder.append(num)  <span class="comment"># 전위</span></span><br><span class="line">            orders(my_list[:idx])</span><br><span class="line">            orders(my_list[idx+<span class="number">1</span>:])</span><br><span class="line">            postorder.append(num)  <span class="comment"># 후위</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    my_list = [[nodeinfo[i][<span class="number">0</span>], nodeinfo[i][<span class="number">1</span>], i + <span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nodeinfo))]</span><br><span class="line">    my_list.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">0</span>])</span><br><span class="line">    preorder, postorder = [], []</span><br><span class="line">    orders(my_list)</span><br><span class="line">    <span class="keyword">return</span> [preorder, postorder]</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://hongsj36.github.io/2020/06/05/prog_KAKAO2019BLIND_%EA%B8%B8%20%EC%B0%BE%EA%B8%B0%20%EA%B2%8C%EC%9E%84/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[programmers] 2019 KAKAO BLIND RECRUITMENT - 무지의 먹방 라이브</title>
      <link>http://hongsj36.github.io/2020/06/04/prog_KAKAO2019BLIND_%EB%AC%B4%EC%A7%80%EC%9D%98%20%EB%A8%B9%EB%B0%A9%20%EB%9D%BC%EC%9D%B4%EB%B8%8C/</link>
      <guid>http://hongsj36.github.io/2020/06/04/prog_KAKAO2019BLIND_%EB%AC%B4%EC%A7%80%EC%9D%98%20%EB%A8%B9%EB%B0%A9%20%EB%9D%BC%EC%9D%B4%EB%B8%8C/</guid>
      <pubDate>Thu, 04 Jun 2020 04:00:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;2019-kakao-blind-recruitment-무지의-먹방-라이브&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2019-kakao-blind-recruitment-무지의-먹방-라이브&quot;&gt;&lt;/a&gt; 2019 KAKAO BLIND RECRUITMENT - 무지의 먹방 라이브&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42891&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;문제링크&lt;/a&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="2019-kakao-blind-recruitment-무지의-먹방-라이브"><a class="markdownIt-Anchor" href="#2019-kakao-blind-recruitment-무지의-먹방-라이브"></a> 2019 KAKAO BLIND RECRUITMENT - 무지의 먹방 라이브</h3><ul><li><a href="https://programmers.co.kr/learn/courses/30/lessons/42891" target="_blank" rel="noopener">문제링크</a><a id="more"></a></li><li>내 코드</li></ul><div class="note warning">            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>접근방법을 그림판으로 대충 그려보았다.</p><img src="/2020/06/04/prog_KAKAO2019BLIND_%EB%AC%B4%EC%A7%80%EC%9D%98%20%EB%A8%B9%EB%B0%A9%20%EB%9D%BC%EC%9D%B4%EB%B8%8C/img1.png" class="" title="This is a image">          </div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(food_times, k)</span>:</span></span><br><span class="line">    food_time_count = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> food_time <span class="keyword">in</span> food_times:</span><br><span class="line">        <span class="keyword">if</span> food_time <span class="keyword">in</span> food_time_count:</span><br><span class="line">            food_time_count[food_time] += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            food_time_count[food_time] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># food_time, count / ASC by food_time</span></span><br><span class="line">    ftl = sorted(list(food_time_count.items()), key=<span class="keyword">lambda</span> x: x[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    n = len(food_times)</span><br><span class="line">    h = <span class="number">0</span></span><br><span class="line">    cnt = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(ftl)):</span><br><span class="line">        cnt_after = cnt + n * (ftl[i][<span class="number">0</span>] - h)</span><br><span class="line">        <span class="keyword">if</span> k &lt; cnt_after:</span><br><span class="line">            target_x = (k - cnt) % n</span><br><span class="line">            x = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(len(food_times)):</span><br><span class="line">                <span class="keyword">if</span> food_times[j] &gt; h:</span><br><span class="line">                    <span class="keyword">if</span> x == target_x:</span><br><span class="line">                        <span class="keyword">return</span> j + <span class="number">1</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        x += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            cnt = cnt_after</span><br><span class="line">            h = ftl[i][<span class="number">0</span>]</span><br><span class="line">            n -= ftl[i][<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://hongsj36.github.io/2020/06/04/prog_KAKAO2019BLIND_%EB%AC%B4%EC%A7%80%EC%9D%98%20%EB%A8%B9%EB%B0%A9%20%EB%9D%BC%EC%9D%B4%EB%B8%8C/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[programmers] 2019 KAKAO BLIND RECRUITMENT - 후보키</title>
      <link>http://hongsj36.github.io/2020/06/04/prog_KAKAO2019BLIND_%ED%9B%84%EB%B3%B4%ED%82%A4/</link>
      <guid>http://hongsj36.github.io/2020/06/04/prog_KAKAO2019BLIND_%ED%9B%84%EB%B3%B4%ED%82%A4/</guid>
      <pubDate>Thu, 04 Jun 2020 03:00:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;2019-kakao-blind-recruitment-후보키&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2019-kakao-blind-recruitment-후보키&quot;&gt;&lt;/a&gt; 2019 KAKAO BLIND RECRUITMENT - 후보키&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42890&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;문제링크&lt;/a&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="2019-kakao-blind-recruitment-후보키"><a class="markdownIt-Anchor" href="#2019-kakao-blind-recruitment-후보키"></a> 2019 KAKAO BLIND RECRUITMENT - 후보키</h3><ul><li><a href="https://programmers.co.kr/learn/courses/30/lessons/42890" target="_blank" rel="noopener">문제링크</a><a id="more"></a></li><li>내 코드</li></ul><div class="note warning">            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>비트연산과 set을 이용하면 간단하게 구현할 수 있다.</p>          </div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(relation)</span>:</span></span><br><span class="line">    N = len(relation[<span class="number">0</span>])  <span class="comment"># cols</span></span><br><span class="line">    M = len(relation)  <span class="comment"># rows</span></span><br><span class="line">    answer = <span class="number">0</span></span><br><span class="line">    keys = []  <span class="comment"># 후보키</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span> &lt;&lt; N):</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> keys:</span><br><span class="line">            <span class="keyword">if</span> key &amp; i == key:  <span class="comment"># 최소성 불만족</span></span><br><span class="line">                <span class="keyword">break</span> </span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 최소성 만족</span></span><br><span class="line">            tuple_list = set()</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(M):  <span class="comment"># for rows</span></span><br><span class="line">                sub_list = []</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> range(N):  <span class="comment"># for cols</span></span><br><span class="line">                    <span class="keyword">if</span> i &amp; (<span class="number">1</span> &lt;&lt; k):</span><br><span class="line">                        sub_list.append(relation[j][k])</span><br><span class="line">                tuple_list.add(tuple(sub_list))</span><br><span class="line">            <span class="keyword">if</span> len(tuple_list) == M:  <span class="comment"># 유일성 만족</span></span><br><span class="line">                keys.append(i)  <span class="comment"># 후보키 등록</span></span><br><span class="line">    <span class="keyword">return</span> len(keys)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://hongsj36.github.io/2020/06/04/prog_KAKAO2019BLIND_%ED%9B%84%EB%B3%B4%ED%82%A4/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[programmers] 2019 KAKAO BLIND RECRUITMENT - 실패율</title>
      <link>http://hongsj36.github.io/2020/06/03/prog_KAKAO2019BLIND_%EC%8B%A4%ED%8C%A8%EC%9C%A8/</link>
      <guid>http://hongsj36.github.io/2020/06/03/prog_KAKAO2019BLIND_%EC%8B%A4%ED%8C%A8%EC%9C%A8/</guid>
      <pubDate>Wed, 03 Jun 2020 04:00:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;2019-kakao-blind-recruitment-실패율&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2019-kakao-blind-recruitment-실패율&quot;&gt;&lt;/a&gt; 2019 KAKAO BLIND RECRUITMENT - 실패율&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42889&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;문제링크&lt;/a&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="2019-kakao-blind-recruitment-실패율"><a class="markdownIt-Anchor" href="#2019-kakao-blind-recruitment-실패율"></a> 2019 KAKAO BLIND RECRUITMENT - 실패율</h3><ul><li><a href="https://programmers.co.kr/learn/courses/30/lessons/42889" target="_blank" rel="noopener">문제링크</a><a id="more"></a></li><li>내 코드</li></ul><div class="note warning">            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><ul><li>stages(데이터: 스테이지)를 stage_cnt(인덱스: 스테이지, 데이터: 인원)으로 변환한다.</li><li>스테이지별로 클리어 못한 유저 수, 도달한 유저 수를 담는 리스트를 만든다.</li><li>실패율을 계산하는 my_calc를 정의하고 이를 key로 두어 1~N을 정렬한다.</li></ul>          </div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(N, stages)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">my_calc</span><span class="params">(x)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> data[x<span class="number">-1</span>][<span class="number">0</span>] == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> -data[x<span class="number">-1</span>][<span class="number">0</span>]/data[x<span class="number">-1</span>][<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    stage_cnt = [<span class="number">0</span>] * (N + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> stage <span class="keyword">in</span> stages:</span><br><span class="line">        stage_cnt[stage<span class="number">-1</span>] += <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    data = [[<span class="number">0</span>, <span class="number">0</span>] <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]  <span class="comment"># not clear users, users</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N + <span class="number">1</span>):  <span class="comment"># stage 1 ~ N + 1 (stage_cnt)</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(N):  <span class="comment"># stage 1 ~ N (stages)</span></span><br><span class="line">            data[j][<span class="number">1</span>] += stage_cnt[i]  <span class="comment"># users</span></span><br><span class="line">            <span class="keyword">if</span> j == i:</span><br><span class="line">                <span class="comment"># not clear users</span></span><br><span class="line">                data[i][<span class="number">0</span>] += stage_cnt[i]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            </span><br><span class="line">    answer = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + N)]</span><br><span class="line">    answer.sort(key=<span class="keyword">lambda</span> x: my_calc(x))</span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://hongsj36.github.io/2020/06/03/prog_KAKAO2019BLIND_%EC%8B%A4%ED%8C%A8%EC%9C%A8/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[programmers] 2019 KAKAO BLIND RECRUITMENT - 오픈채팅방</title>
      <link>http://hongsj36.github.io/2020/06/03/prog_KAKAO2019BLIND_%EC%98%A4%ED%94%88%EC%B1%84%ED%8C%85%EB%B0%A9/</link>
      <guid>http://hongsj36.github.io/2020/06/03/prog_KAKAO2019BLIND_%EC%98%A4%ED%94%88%EC%B1%84%ED%8C%85%EB%B0%A9/</guid>
      <pubDate>Wed, 03 Jun 2020 03:00:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;2019-kakao-blind-recruitment-오픈채팅방&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2019-kakao-blind-recruitment-오픈채팅방&quot;&gt;&lt;/a&gt; 2019 KAKAO BLIND RECRUITMENT - 오픈채팅방&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42888&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;문제링크&lt;/a&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="2019-kakao-blind-recruitment-오픈채팅방"><a class="markdownIt-Anchor" href="#2019-kakao-blind-recruitment-오픈채팅방"></a> 2019 KAKAO BLIND RECRUITMENT - 오픈채팅방</h3><ul><li><a href="https://programmers.co.kr/learn/courses/30/lessons/42888" target="_blank" rel="noopener">문제링크</a><a id="more"></a></li><li>내 코드</li></ul><div class="note warning">            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>Enter / Change일 때 유저 아이디와 닉네임을 딕셔너리로 저장하고<br />Enter / Leave 의 유저 아이디를 딕셔너리에서 찾아 닉네임으로 변환하여 출력한다.</p>          </div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(record)</span>:</span></span><br><span class="line">    user_info = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> rec <span class="keyword">in</span> record:</span><br><span class="line">        data = rec.split()</span><br><span class="line">        <span class="keyword">if</span> data[<span class="number">0</span>][<span class="number">0</span>] <span class="keyword">in</span> <span class="string">'EC'</span>:</span><br><span class="line">            user_info[data[<span class="number">1</span>]] = data[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    answer = []</span><br><span class="line">    <span class="keyword">for</span> rec <span class="keyword">in</span> record:</span><br><span class="line">        data = rec.split()</span><br><span class="line">        <span class="keyword">if</span> data[<span class="number">0</span>][<span class="number">0</span>] == <span class="string">'E'</span>:</span><br><span class="line">            answer.append(user_info[data[<span class="number">1</span>]] + <span class="string">"님이 들어왔습니다."</span>)</span><br><span class="line">        <span class="keyword">elif</span> data[<span class="number">0</span>][<span class="number">0</span>] == <span class="string">'L'</span>:</span><br><span class="line">            answer.append(user_info[data[<span class="number">1</span>]] + <span class="string">"님이 나갔습니다."</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://hongsj36.github.io/2020/06/03/prog_KAKAO2019BLIND_%EC%98%A4%ED%94%88%EC%B1%84%ED%8C%85%EB%B0%A9/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[programmers] 2020 KAKAO BLIND RECRUITMENT - 블록 이동하기</title>
      <link>http://hongsj36.github.io/2020/05/20/prog_KAKAO2020BLIND_%EB%B8%94%EB%A1%9D%20%EC%9D%B4%EB%8F%99%ED%95%98%EA%B8%B0/</link>
      <guid>http://hongsj36.github.io/2020/05/20/prog_KAKAO2020BLIND_%EB%B8%94%EB%A1%9D%20%EC%9D%B4%EB%8F%99%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Wed, 20 May 2020 04:00:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;2020-kakao-blind-recruitment-블록-이동하기&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2020-kakao-blind-recruitment-블록-이동하기&quot;&gt;&lt;/a&gt; 2020 KAKAO BLIND RECRUITMENT - 블록 이동하기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/60063&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;문제링크&lt;/a&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="2020-kakao-blind-recruitment-블록-이동하기"><a class="markdownIt-Anchor" href="#2020-kakao-blind-recruitment-블록-이동하기"></a> 2020 KAKAO BLIND RECRUITMENT - 블록 이동하기</h3><ul><li><a href="https://programmers.co.kr/learn/courses/30/lessons/60063" target="_blank" rel="noopener">문제링크</a><a id="more"></a></li><li>내 코드</li></ul><div class="note warning">            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>visited를 3차원으로 만들어서 속도를 개선하였다. (xy좌표 2차원 + 모양)<br />수평/수직 모양별로 움직일 수 있는 모든 경우의 수를 고려한다.</p>          </div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(board)</span>:</span></span><br><span class="line">    <span class="comment">### 기준점은 왼쪽 상단</span></span><br><span class="line">    answer = <span class="number">0</span></span><br><span class="line">    N = len(board)</span><br><span class="line">    visited = [[[<span class="number">0</span>] * <span class="number">2</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)] <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    dx, dy = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>), (<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    q = [(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)]</span><br><span class="line">    <span class="keyword">while</span> q:</span><br><span class="line">        y, x, vert, s = q.pop(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span> (vert <span class="keyword">and</span> y == N - <span class="number">2</span> <span class="keyword">and</span> x == N - <span class="number">1</span>) <span class="keyword">or</span> (<span class="keyword">not</span> vert <span class="keyword">and</span> y == N - <span class="number">1</span> <span class="keyword">and</span> x == N - <span class="number">2</span>):</span><br><span class="line">            answer = s</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 수평 모양</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> vert:</span><br><span class="line">            <span class="comment"># 이동(4)</span></span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">                <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; N - <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> visited[ny][nx][vert]:</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> board[ny][nx] <span class="keyword">and</span> <span class="keyword">not</span> board[ny][nx + <span class="number">1</span>]:</span><br><span class="line">                        visited[ny][nx][vert] = s + <span class="number">1</span></span><br><span class="line">                        q.append((ny, nx, vert, s + <span class="number">1</span>))</span><br><span class="line">            <span class="comment"># 아래로 회전(2)</span></span><br><span class="line">            <span class="keyword">if</span> y &lt; N - <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> board[y + <span class="number">1</span>][x] <span class="keyword">and</span> <span class="keyword">not</span> board[y + <span class="number">1</span>][x + <span class="number">1</span>]:</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">                    ny, nx = y, x + i</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> visited[ny][nx][<span class="keyword">not</span> vert]:</span><br><span class="line">                        visited[ny][nx][<span class="keyword">not</span> vert] = s + <span class="number">1</span></span><br><span class="line">                        q.append((ny, nx, <span class="keyword">not</span> vert, s + <span class="number">1</span>))</span><br><span class="line">            <span class="comment"># 위로 회전(2)</span></span><br><span class="line">            <span class="keyword">if</span> <span class="number">0</span> &lt; y <span class="keyword">and</span> <span class="keyword">not</span> board[y - <span class="number">1</span>][x] <span class="keyword">and</span> <span class="keyword">not</span> board[y - <span class="number">1</span>][x + <span class="number">1</span>]:</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">                    ny, nx = y - <span class="number">1</span>, x + i</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> visited[ny][nx][<span class="keyword">not</span> vert]:</span><br><span class="line">                        visited[ny][nx][<span class="keyword">not</span> vert] = s + <span class="number">1</span></span><br><span class="line">                        q.append((ny, nx, <span class="keyword">not</span> vert, s + <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 수직 모양</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 이동(4)</span></span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">                <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N - <span class="number">1</span> <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; N <span class="keyword">and</span> <span class="keyword">not</span> visited[ny][nx][vert]:</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> board[ny][nx] <span class="keyword">and</span> <span class="keyword">not</span> board[ny + <span class="number">1</span>][nx]:</span><br><span class="line">                        visited[ny][nx][vert] = s + <span class="number">1</span></span><br><span class="line">                        q.append((ny, nx, vert, s + <span class="number">1</span>))</span><br><span class="line">            <span class="comment"># 오른쪽 범위로 회전(2)</span></span><br><span class="line">            <span class="keyword">if</span> x &lt; N - <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> board[y][x + <span class="number">1</span>] <span class="keyword">and</span> <span class="keyword">not</span> board[y + <span class="number">1</span>][x + <span class="number">1</span>]:</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">                    ny, nx = y + i, x</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> visited[ny][nx][<span class="keyword">not</span> vert]:</span><br><span class="line">                        visited[ny][nx][<span class="keyword">not</span> vert] = s + <span class="number">1</span></span><br><span class="line">                        q.append((ny, nx, <span class="keyword">not</span> vert, s + <span class="number">1</span>))</span><br><span class="line">            <span class="comment"># 왼쪽 범위로 회전(2)</span></span><br><span class="line">            <span class="keyword">if</span> <span class="number">0</span> &lt; x <span class="keyword">and</span> <span class="keyword">not</span> board[y][x - <span class="number">1</span>] <span class="keyword">and</span> <span class="keyword">not</span> board[y + <span class="number">1</span>][x - <span class="number">1</span>]:</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">                    ny, nx = y + i, x - <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> visited[ny][nx][<span class="keyword">not</span> vert]:</span><br><span class="line">                        visited[ny][nx][<span class="keyword">not</span> vert] = s + <span class="number">1</span></span><br><span class="line">                        q.append((ny, nx, <span class="keyword">not</span> vert, s + <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://hongsj36.github.io/2020/05/20/prog_KAKAO2020BLIND_%EB%B8%94%EB%A1%9D%20%EC%9D%B4%EB%8F%99%ED%95%98%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[programmers] 2020 KAKAO BLIND RECRUITMENT - 외벽 점검</title>
      <link>http://hongsj36.github.io/2020/05/20/prog_KAKAO2020BLIND_%EC%99%B8%EB%B2%BD%20%EC%A0%90%EA%B2%80/</link>
      <guid>http://hongsj36.github.io/2020/05/20/prog_KAKAO2020BLIND_%EC%99%B8%EB%B2%BD%20%EC%A0%90%EA%B2%80/</guid>
      <pubDate>Wed, 20 May 2020 03:00:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;2020-kakao-blind-recruitment-외벽-점검&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2020-kakao-blind-recruitment-외벽-점검&quot;&gt;&lt;/a&gt; 2020 KAKAO BLIND RECRUITMENT - 외벽 점검&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/60062&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;문제링크&lt;/a&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="2020-kakao-blind-recruitment-외벽-점검"><a class="markdownIt-Anchor" href="#2020-kakao-blind-recruitment-외벽-점검"></a> 2020 KAKAO BLIND RECRUITMENT - 외벽 점검</h3><ul><li><a href="https://programmers.co.kr/learn/courses/30/lessons/60062" target="_blank" rel="noopener">문제링크</a><a id="more"></a></li><li>내 코드</li></ul><div class="note warning">            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><ol><li>원에서의 순열은 하나를 고정시키고 나머지를 순열 돌리면 된다.</li><li>점검 방향을 한쪽으로 고정한다.(시계방향)</li><li>이동거리 = (도착지점 - 출발지점) % n  # 시침이 움직인 거리와 비슷하다.</li><li>점검 시작점을 약점에서 시작하면 유리하다.</li></ol>          </div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> permutations</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(n, weak, dist)</span>:</span></span><br><span class="line">    answer = float(<span class="string">'inf'</span>)</span><br><span class="line"></span><br><span class="line">    first_dist = dist.pop()</span><br><span class="line">    <span class="keyword">for</span> dists <span class="keyword">in</span> permutations(dist):</span><br><span class="line">        dists = [first_dist] + list(dists)</span><br><span class="line">        <span class="keyword">for</span> start_point <span class="keyword">in</span> weak:  <span class="comment"># 시작지점</span></span><br><span class="line">            sub_weak = weak[:]</span><br><span class="line">            sub_weak.sort(key=<span class="keyword">lambda</span> x: (x - start_point) % n)</span><br><span class="line">            cnt = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> dists:</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(len(sub_weak) - <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">                    <span class="keyword">if</span> (sub_weak[i] - start_point) % n &lt;= d:</span><br><span class="line">                        sub_weak = sub_weak[i+<span class="number">1</span>:]</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">if</span> sub_weak:</span><br><span class="line">                    start_point = sub_weak[<span class="number">0</span>]</span><br><span class="line">                cnt += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> sub_weak <span class="keyword">and</span> answer &gt; cnt:</span><br><span class="line">                    answer = cnt</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> answer == float(<span class="string">'inf'</span>):</span><br><span class="line">        answer = <span class="number">-1</span></span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://hongsj36.github.io/2020/05/20/prog_KAKAO2020BLIND_%EC%99%B8%EB%B2%BD%20%EC%A0%90%EA%B2%80/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[programmers] 2020 KAKAO BLIND RECRUITMENT - 기둥과 보 설치</title>
      <link>http://hongsj36.github.io/2020/05/19/prog_KAKAO2020BLIND_%EA%B8%B0%EB%91%A5%EA%B3%BC%20%EB%B3%B4%20%EC%84%A4%EC%B9%98/</link>
      <guid>http://hongsj36.github.io/2020/05/19/prog_KAKAO2020BLIND_%EA%B8%B0%EB%91%A5%EA%B3%BC%20%EB%B3%B4%20%EC%84%A4%EC%B9%98/</guid>
      <pubDate>Tue, 19 May 2020 04:00:00 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;2020-kakao-blind-recruitment-기둥과-보-설치&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2020-kakao-blind-recruitment-기둥과-보-설치&quot;&gt;&lt;/a&gt; 2020 KAKAO BLIND RECRUITMENT - 기둥과 보 설치&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/60061&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;문제링크&lt;/a&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="2020-kakao-blind-recruitment-기둥과-보-설치"><a class="markdownIt-Anchor" href="#2020-kakao-blind-recruitment-기둥과-보-설치"></a> 2020 KAKAO BLIND RECRUITMENT - 기둥과 보 설치</h3><ul><li><a href="https://programmers.co.kr/learn/courses/30/lessons/60061" target="_blank" rel="noopener">문제링크</a><a id="more"></a></li><li>내 코드</li></ul><div class="note warning">            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><ol><li>기둥 또는 보를 놓을 수 있는 조건이 나와있다. 이를 확인하는 함수를 만들어 놓으면 편하다. (기둥 또는 보를 해체할 수 있는 조건은 해체 후 연결된 모든 요소들이 다시 놓을 수 있는 조건이 충족되어야 한다.)</li><li>기둥과 보는 가로와 세로로 놓이기 때문에 2차원 배열의 범위가 조금씩 다르다. 경계면에 유의하며 코드를 작성하자.</li></ol>          </div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(n, build_frame)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gidoong_check</span><span class="params">(x, y)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> y == <span class="number">0</span> <span class="keyword">or</span> gidoong[x][y - <span class="number">1</span>] <span class="keyword">or</span> (x &gt; <span class="number">0</span> <span class="keyword">and</span> bo[x - <span class="number">1</span>][y]) <span class="keyword">or</span> bo[x][y]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">bo_check</span><span class="params">(x, y)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> y &gt; <span class="number">0</span> <span class="keyword">and</span> (</span><br><span class="line">                    gidoong[x][y - <span class="number">1</span>] <span class="keyword">or</span> gidoong[x + <span class="number">1</span>][y - <span class="number">1</span>] <span class="keyword">or</span> (<span class="number">0</span> &lt; x &lt; n - <span class="number">1</span> <span class="keyword">and</span> bo[x - <span class="number">1</span>][y] <span class="keyword">and</span> bo[x + <span class="number">1</span>][y]))</span><br><span class="line"></span><br><span class="line">    gidoong = [[<span class="literal">False</span>] * (n + <span class="number">1</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(n + <span class="number">1</span>)]</span><br><span class="line">    bo = [[<span class="literal">False</span>] * (n + <span class="number">1</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(n + <span class="number">1</span>)]</span><br><span class="line">    <span class="keyword">for</span> build <span class="keyword">in</span> build_frame:</span><br><span class="line">        x, y, a, b = build</span><br><span class="line">        <span class="keyword">if</span> a == <span class="number">0</span>:  <span class="comment"># gidoong</span></span><br><span class="line">            <span class="keyword">if</span> b == <span class="number">0</span>:  <span class="comment"># 삭제</span></span><br><span class="line">                gidoong[x][y] = <span class="literal">False</span></span><br><span class="line">                <span class="comment"># 윗 기둥 확인</span></span><br><span class="line">                <span class="keyword">if</span> y &lt; n - <span class="number">1</span> <span class="keyword">and</span> gidoong[x][y + <span class="number">1</span>] <span class="keyword">and</span> <span class="keyword">not</span> gidoong_check(x, y + <span class="number">1</span>):</span><br><span class="line">                    gidoong[x][y] = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="comment"># 왼쪽 보 확인</span></span><br><span class="line">                <span class="keyword">if</span> x &gt; <span class="number">0</span> <span class="keyword">and</span> bo[x - <span class="number">1</span>][y + <span class="number">1</span>] <span class="keyword">and</span> <span class="keyword">not</span> bo_check(x - <span class="number">1</span>, y + <span class="number">1</span>):</span><br><span class="line">                    gidoong[x][y] = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="comment"># 오른쪽 보 확인</span></span><br><span class="line">                <span class="keyword">if</span> x &lt; n <span class="keyword">and</span> bo[x][y + <span class="number">1</span>] <span class="keyword">and</span> <span class="keyword">not</span> bo_check(x, y + <span class="number">1</span>):</span><br><span class="line">                    gidoong[x][y] = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment"># 설치</span></span><br><span class="line">                <span class="keyword">if</span> gidoong_check(x, y):</span><br><span class="line">                    gidoong[x][y] = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># bo</span></span><br><span class="line">            <span class="keyword">if</span> b == <span class="number">0</span>:  <span class="comment"># 삭제</span></span><br><span class="line">                bo[x][y] = <span class="literal">False</span></span><br><span class="line">                <span class="comment"># 양쪽 보 확인</span></span><br><span class="line">                <span class="keyword">if</span> y &gt; <span class="number">0</span> <span class="keyword">and</span> bo[x - <span class="number">1</span>][y] <span class="keyword">and</span> <span class="keyword">not</span> bo_check(x - <span class="number">1</span>, y):</span><br><span class="line">                    bo[x][y] = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">if</span> y &lt; n - <span class="number">1</span> <span class="keyword">and</span> bo[x + <span class="number">1</span>][y] <span class="keyword">and</span> <span class="keyword">not</span> bo_check(x + <span class="number">1</span>, y):</span><br><span class="line">                    bo[x][y] = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="comment"># 위 양쪽 기둥 확인</span></span><br><span class="line">                <span class="keyword">if</span> x &lt; n <span class="keyword">and</span> (</span><br><span class="line">                        gidoong[x][y] <span class="keyword">and</span> <span class="keyword">not</span> gidoong_check(x, y) <span class="keyword">or</span> gidoong[x + <span class="number">1</span>][y] <span class="keyword">and</span> <span class="keyword">not</span> gidoong_check(x + <span class="number">1</span>, y)):</span><br><span class="line">                    bo[x][y] = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment"># 설치</span></span><br><span class="line">                <span class="keyword">if</span> bo_check(x, y):</span><br><span class="line">                    bo[x][y] = <span class="literal">True</span></span><br><span class="line">    <span class="comment"># answer 채우기</span></span><br><span class="line">    answer = []</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(n+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> range(n+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> gidoong[x][y]:</span><br><span class="line">                answer.append([x, y, <span class="number">0</span>])</span><br><span class="line">            <span class="keyword">if</span> bo[x][y]:</span><br><span class="line">                answer.append([x, y, <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://hongsj36.github.io/2020/05/19/prog_KAKAO2020BLIND_%EA%B8%B0%EB%91%A5%EA%B3%BC%20%EB%B3%B4%20%EC%84%A4%EC%B9%98/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
