<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>[programmers] 2020 KAKAO BLIND RECRUITMENT - 문자열 압축</title>
    <url>/2020/05/17/prog_KAKAO2020BLIND_%EA%B4%84%ED%98%B8%EB%B3%80%ED%99%98/</url>
    <content><![CDATA[<h3 id="2020-kakao-blind-recruitment-문자열-압축"><a class="markdownIt-Anchor" href="#2020-kakao-blind-recruitment-문자열-압축"></a> 2020 KAKAO BLIND RECRUITMENT - 문자열 압축</h3>
<ul>
<li><a href="https://programmers.co.kr/learn/courses/30/lessons/60058" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>split 함수와 correct 함수를 구현하고 명세 그대로 작성하였다.</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(p)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">split</span><span class="params">(w)</span>:</span></span><br><span class="line">        op = cl = p = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> w:</span><br><span class="line">            <span class="keyword">if</span> ch == <span class="string">'('</span>:</span><br><span class="line">                op += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> ch == <span class="string">')'</span>:</span><br><span class="line">                cl += <span class="number">1</span></span><br><span class="line">            p += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> op == cl:</span><br><span class="line">                <span class="keyword">return</span> w[:p], w[p:]                </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">correct</span><span class="params">(w)</span>:</span></span><br><span class="line">        op = cl = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> w:</span><br><span class="line">            <span class="keyword">if</span> ch == <span class="string">'('</span>:</span><br><span class="line">                op += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> ch == <span class="string">')'</span>:</span><br><span class="line">                cl += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> op &lt; cl:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 1. 입력이 빈 문자열인 경우, 빈 문자열을 반환합니다. </span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> p:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 2. 문자열 w를 두 "균형잡힌 괄호 문자열" u, v로 분리합니다. 단, u는 "균형잡힌 괄호 문자열"로 더 이상 분리할 수 없어야 하며, v는 빈 문자열이 될 수 있습니다.</span></span><br><span class="line">    u, v = split(p)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 3. 문자열 u가 "올바른 괄호 문자열" 이라면 문자열 v에 대해 1단계부터 다시 수행합니다. </span></span><br><span class="line">    <span class="keyword">if</span> correct(u):</span><br><span class="line">        <span class="comment"># 3-1. 수행한 결과 문자열을 u에 이어 붙인 후 반환합니다. </span></span><br><span class="line">        <span class="keyword">return</span> u + solution(v)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 4. 문자열 u가 "올바른 괄호 문자열"이 아니라면 아래 과정을 수행합니다.</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 4-1. 빈 문자열에 첫 번째 문자로 '('를 붙입니다.</span></span><br><span class="line">        <span class="comment"># 4-2. 문자열 v에 대해 1단계부터 재귀적으로 수행한 결과 문자열을 이어 붙입니다. </span></span><br><span class="line">        <span class="comment"># 4-3. ')'를 다시 붙입니다. </span></span><br><span class="line">        my_str = <span class="string">'('</span> + solution(v) + <span class="string">')'</span></span><br><span class="line">        <span class="comment"># 4-4. u의 첫 번째와 마지막 문자를 제거하고, 나머지 문자열의 괄호 방향을 뒤집어서 뒤에 붙입니다.</span></span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> u[<span class="number">1</span>:<span class="number">-1</span>]:</span><br><span class="line">            <span class="keyword">if</span> ch == <span class="string">'('</span>:</span><br><span class="line">                my_str += <span class="string">')'</span></span><br><span class="line">            <span class="keyword">elif</span> ch == <span class="string">')'</span>:</span><br><span class="line">                my_str += <span class="string">'('</span></span><br><span class="line">        <span class="comment"># 4-5. 생성된 문자열을 반환합니다.</span></span><br><span class="line">        <span class="keyword">return</span> my_str</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>programmers</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>programmers</tag>
        <tag>카카오 코딩 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[programmers] 2020 KAKAO BLIND RECRUITMENT - 문자열 압축</title>
    <url>/2020/05/17/prog_KAKAO2020BLIND_%EB%AC%B8%EC%9E%90%EC%97%B4%EC%95%95%EC%B6%95/</url>
    <content><![CDATA[<h3 id="2020-kakao-blind-recruitment-문자열-압축"><a class="markdownIt-Anchor" href="#2020-kakao-blind-recruitment-문자열-압축"></a> 2020 KAKAO BLIND RECRUITMENT - 문자열 압축</h3>
<ul>
<li><a href="https://programmers.co.kr/learn/courses/30/lessons/60057" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><ol><li>length(압축 단위 길이) : 1 ~ len(s) // 2</li><li>이전 단어와 같으면 반복횟수 증가, 다르면 단위 길이만큼 결과값 증가</li><li>반복횟수는 2 이상일 때 숫자 길이만큼 결과값 증가</li></ol>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(s)</span>:</span></span><br><span class="line">    </span><br><span class="line">    answer = len(s)</span><br><span class="line">    <span class="keyword">for</span> length <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + (len(s) // <span class="number">2</span>)):</span><br><span class="line">        sub_ans = <span class="number">0</span></span><br><span class="line">        before = <span class="string">''</span></span><br><span class="line">        rep = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> range(len(s) // length):</span><br><span class="line">            cur = s[length * n: length * (n + <span class="number">1</span>)]</span><br><span class="line">            <span class="keyword">if</span> cur == before:</span><br><span class="line">                rep += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> rep &gt; <span class="number">1</span>:</span><br><span class="line">                    sub_ans += len(str(rep))</span><br><span class="line">                before = cur</span><br><span class="line">                rep = <span class="number">1</span></span><br><span class="line">                sub_ans += length</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 남은 rep 처리</span></span><br><span class="line">            <span class="keyword">if</span> rep &gt; <span class="number">1</span>:</span><br><span class="line">                    sub_ans += len(str(rep))</span><br><span class="line">        sub_ans += len(s) % length  <span class="comment"># 남은 단어 처리</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> answer &gt; sub_ans:</span><br><span class="line">            answer = sub_ans</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>programmers</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>programmers</tag>
        <tag>카카오 코딩 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 11660. 구간 합 구하기 5</title>
    <url>/2020/03/14/BOJ_11660/</url>
    <content><![CDATA[<h3 id="11660-구간-합-구하기-5"><a class="markdownIt-Anchor" href="#11660-구간-합-구하기-5"></a> 11660. 구간 합 구하기 5</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/11660" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">input = sys.stdin.readline</span><br><span class="line"></span><br><span class="line">N, M = map(int, input().split())</span><br><span class="line">MAP = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">DP = [[<span class="number">0</span>] * (N + <span class="number">1</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N + <span class="number">1</span>)]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, N + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, N + <span class="number">1</span>):</span><br><span class="line">        DP[i][j] = MAP[i<span class="number">-1</span>][j<span class="number">-1</span>] + DP[i][j<span class="number">-1</span>] + DP[i<span class="number">-1</span>][j] - DP[i<span class="number">-1</span>][j<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(M):</span><br><span class="line">    x1, y1, x2, y2 = map(int, input().split())</span><br><span class="line">    print(DP[x2][y2] - DP[x1<span class="number">-1</span>][y2] - DP[x2][y1<span class="number">-1</span>] + DP[x1<span class="number">-1</span>][y1<span class="number">-1</span>])</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 1991. 트리 순회</title>
    <url>/2020/03/13/BOJ_1991/</url>
    <content><![CDATA[<h3 id="1991-트리-순회"><a class="markdownIt-Anchor" href="#1991-트리-순회"></a> 1991. 트리 순회</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/1991" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DFS1</span><span class="params">(node)</span>:</span>  <span class="comment"># (루트) (왼쪽 자식) (오른쪽 자식)</span></span><br><span class="line">    <span class="keyword">if</span> node == <span class="string">'.'</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    print(node,end=<span class="string">''</span>)</span><br><span class="line">    DFS1(my_dict[node][<span class="number">0</span>])</span><br><span class="line">    DFS1(my_dict[node][<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DFS2</span><span class="params">(node)</span>:</span>  <span class="comment"># (왼쪽 자식) (루트) (오른쪽 자식)</span></span><br><span class="line">    <span class="keyword">if</span> node == <span class="string">'.'</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    DFS2(my_dict[node][<span class="number">0</span>])</span><br><span class="line">    print(node, end=<span class="string">''</span>)</span><br><span class="line">    DFS2(my_dict[node][<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DFS3</span><span class="params">(node)</span>:</span>  <span class="comment"># (왼쪽 자식) (오른쪽 자식) (루트)</span></span><br><span class="line">    <span class="keyword">if</span> node == <span class="string">'.'</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    DFS3(my_dict[node][<span class="number">0</span>])</span><br><span class="line">    DFS3(my_dict[node][<span class="number">1</span>])</span><br><span class="line">    print(node, end=<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">N = int(input())</span><br><span class="line">my_dict = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(N):</span><br><span class="line">    root, left, right = input().split()</span><br><span class="line">    my_dict[root] = [left, right]</span><br><span class="line"></span><br><span class="line">DFS1(<span class="string">'A'</span>)</span><br><span class="line">print()</span><br><span class="line">DFS2(<span class="string">'A'</span>)</span><br><span class="line">print()</span><br><span class="line">DFS3(<span class="string">'A'</span>)</span><br><span class="line">print()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 1932. 정수 삼각형</title>
    <url>/2020/03/12/BOJ_1932/</url>
    <content><![CDATA[<h3 id="1932-정수-삼각형"><a class="markdownIt-Anchor" href="#1932-정수-삼각형"></a> 1932. 정수 삼각형</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/1932" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">N = int(input())</span><br><span class="line">DATA = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, N):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>):</span><br><span class="line">        temp = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> j != <span class="number">0</span>:</span><br><span class="line">            temp = DATA[i<span class="number">-1</span>][j<span class="number">-1</span>]</span><br><span class="line">        <span class="keyword">if</span> j != i:</span><br><span class="line">            temp = max(temp, DATA[i<span class="number">-1</span>][j])</span><br><span class="line">        DATA[i][j] += temp</span><br><span class="line">print(max(DATA[<span class="number">-1</span>]))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 1629. 곱셈</title>
    <url>/2020/03/11/BOJ_1629/</url>
    <content><![CDATA[<h3 id="1629-곱셈"><a class="markdownIt-Anchor" href="#1629-곱셈"></a> 1629. 곱셈</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/1629" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_calc</span><span class="params">(A, B, C)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> B == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> B % <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> (my_calc(A, B<span class="number">-1</span>, C) * A) % C</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> (my_calc(A, B//<span class="number">2</span>, C) ** <span class="number">2</span>) % C</span><br><span class="line"></span><br><span class="line">print(my_calc(*map(int, input().split())))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 1149. RGB거리</title>
    <url>/2020/03/10/BOJ_1149/</url>
    <content><![CDATA[<h3 id="1149-rgb거리"><a class="markdownIt-Anchor" href="#1149-rgb거리"></a> 1149. RGB거리</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/1149" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">N = int(input())</span><br><span class="line">MAP = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">DP = [[<span class="number">0</span>] * <span class="number">3</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">DP[<span class="number">0</span>] = MAP[<span class="number">0</span>][:]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, N):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        temp = []</span><br><span class="line">        <span class="keyword">for</span> t <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">            <span class="keyword">if</span> t != j:</span><br><span class="line">                temp.append(DP[i<span class="number">-1</span>][t])</span><br><span class="line">        DP[i][j] = MAP[i][j] + min(temp)</span><br><span class="line">print(min(DP[<span class="number">-1</span>]))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 11725. 트리의 부모 찾기</title>
    <url>/2020/03/09/BOJ_11725/</url>
    <content><![CDATA[<h3 id="11725-트리의-부모-찾기"><a class="markdownIt-Anchor" href="#11725-트리의-부모-찾기"></a> 11725. 트리의 부모 찾기</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/11725" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">N = int(input())</span><br><span class="line">my_dict = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(N - <span class="number">1</span>):</span><br><span class="line">    n1, n2 = map(int, input().split())</span><br><span class="line">    <span class="keyword">if</span> n1 <span class="keyword">not</span> <span class="keyword">in</span> my_dict:</span><br><span class="line">        my_dict[n1] = [n2]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        my_dict[n1].append(n2)</span><br><span class="line">    <span class="keyword">if</span> n2 <span class="keyword">not</span> <span class="keyword">in</span> my_dict:</span><br><span class="line">        my_dict[n2] = [n1]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        my_dict[n2].append(n1)</span><br><span class="line">p = [<span class="number">0</span>] * (N + <span class="number">1</span>)</span><br><span class="line">p[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">stack = [<span class="number">1</span>]</span><br><span class="line"><span class="keyword">while</span> stack:</span><br><span class="line">    n = stack.pop()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> my_dict[n]:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> p[i]:</span><br><span class="line">            p[i] = n</span><br><span class="line">            stack.append(i)</span><br><span class="line">print(*p[<span class="number">2</span>:], sep=<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 11053. 가장 긴 증가하는 부분 수열</title>
    <url>/2020/03/08/BOJ_11053/</url>
    <content><![CDATA[<h3 id="11053-가장-긴-증가하는-부분-수열"><a class="markdownIt-Anchor" href="#11053-가장-긴-증가하는-부분-수열"></a> 11053. 가장 긴 증가하는 부분 수열</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/11053" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>구글에 <strong>Longest Increasing Subsequence</strong> 검색해서 공부하고 풀어보자. DP문제 중 하나이다.</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">A = int(input())</span><br><span class="line">LIST = list(map(int, input().split()))</span><br><span class="line"></span><br><span class="line">my_list = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> LIST:</span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> my_list:</span><br><span class="line">        <span class="keyword">if</span> i &lt;= l[<span class="number">-1</span>]:</span><br><span class="line">            l[<span class="number">-1</span>] = i</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> my_list:</span><br><span class="line">            my_list.append([i])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            my_list.append(my_list[<span class="number">-1</span>] + [i])</span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> sub_list <span class="keyword">in</span> my_list:</span><br><span class="line">    sub_res = len(sub_list)</span><br><span class="line">    <span class="keyword">if</span> sub_res &gt; result:</span><br><span class="line">        result = sub_res</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 3752. 가능한 시험 점수</title>
    <url>/2020/03/07/SWEA_3752/</url>
    <content><![CDATA[<h3 id="3752-가능한-시험-점수-d4"><a class="markdownIt-Anchor" href="#3752-가능한-시험-점수-d4"></a> 3752. 가능한 시험 점수 <code>D4</code></h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWHPkqBqAEsDFAUn" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dx = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line">dy = (<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DFS</span><span class="params">(depth, sum)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> result</span><br><span class="line">    <span class="keyword">if</span> depth == N:</span><br><span class="line">        result.add(sum)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> visited[i]:</span><br><span class="line">            visited[i] = <span class="literal">True</span></span><br><span class="line">            DFS(depth + <span class="number">1</span>, sum + DATA[i])</span><br><span class="line">            DFS(depth + <span class="number">1</span>, sum)</span><br><span class="line">            visited[i] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input())</span><br><span class="line">    DATA = list(map(int, input().split()))</span><br><span class="line">    result = set()</span><br><span class="line">    result.add(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        temp = []</span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> result:</span><br><span class="line">            temp.append(DATA[i] + num)</span><br><span class="line">        <span class="keyword">for</span> t <span class="keyword">in</span> temp:</span><br><span class="line">            result.add(t)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, len(result)))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 2819. 격자판의 숫자 이어 붙이기</title>
    <url>/2020/03/06/SWEA_2819/</url>
    <content><![CDATA[<h3 id="2819-격자판의-숫자-이어-붙이기-d4"><a class="markdownIt-Anchor" href="#2819-격자판의-숫자-이어-붙이기-d4"></a> 2819. 격자판의 숫자 이어 붙이기 <code>D4</code></h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV7I5fgqEogDFAXB" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dx = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line">dy = (<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DFS</span><span class="params">(y, x, s)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> result</span><br><span class="line">    <span class="keyword">if</span> len(s) == <span class="number">7</span>:</span><br><span class="line">        result.add(s)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; <span class="number">4</span> <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; <span class="number">4</span>:</span><br><span class="line">            DFS(ny, nx, s + MAP[ny][nx])</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    MAP = [list(input().split()) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">4</span>)]</span><br><span class="line">    result = set()</span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">            DFS(r, c, MAP[r][c])</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, len(result)))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 1865. 동철이의 일 분배</title>
    <url>/2020/03/05/SWEA_1865/</url>
    <content><![CDATA[<h3 id="1865-동철이의-일-분배-d4"><a class="markdownIt-Anchor" href="#1865-동철이의-일-분배-d4"></a> 1865. 동철이의 일 분배 <code>D4</code></h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5LuHfqDz8DFAXc" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DFS</span><span class="params">(n, s)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> result</span><br><span class="line">    <span class="keyword">if</span> n == N <span class="keyword">and</span> s &gt; result:</span><br><span class="line">        result = s</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">if</span> s &lt;= result:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> visited[i]:</span><br><span class="line">                visited[i] = <span class="literal">True</span></span><br><span class="line">                DFS(n + <span class="number">1</span>, s * MAP[i][n] / <span class="number">100</span>)</span><br><span class="line">                visited[i] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input())</span><br><span class="line">    MAP = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    visited = [<span class="literal">False</span>] * N</span><br><span class="line">    DFS(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;:.6f&#125;'</span>.format(test_case, result * <span class="number">100</span>))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 1861. 정사각형 방</title>
    <url>/2020/03/04/SWEA_1861/</url>
    <content><![CDATA[<h3 id="1861-정사각형-방-d4"><a class="markdownIt-Anchor" href="#1861-정사각형-방-d4"></a> 1861. 정사각형 방 <code>D4</code></h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5LtJYKDzsDFAXc" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dx = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line">dy = (<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input())</span><br><span class="line">    MAP = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    visited = [[<span class="literal">False</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    n = <span class="number">-1</span></span><br><span class="line">    cnt = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> visited[r][c]:</span><br><span class="line">                visited[r][c] = <span class="literal">True</span></span><br><span class="line">                sub_cnt = <span class="number">1</span></span><br><span class="line">                sub_n = MAP[r][c]</span><br><span class="line">                <span class="comment"># 작은 숫자 찾기</span></span><br><span class="line">                y, x = r, c</span><br><span class="line">                <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                    <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                        ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">                        <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; N <span class="keyword">and</span> MAP[ny][nx] == MAP[y][x] - <span class="number">1</span>:</span><br><span class="line">                            y, x = ny, nx</span><br><span class="line">                            visited[y][x] = <span class="literal">True</span></span><br><span class="line">                            sub_n = MAP[y][x]</span><br><span class="line">                            sub_cnt += <span class="number">1</span></span><br><span class="line">                            <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">else</span>:  <span class="comment"># 다음 작은 숫자 없으면 종료</span></span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                <span class="comment"># 큰 숫자 찾기</span></span><br><span class="line">                y, x = r, c</span><br><span class="line">                <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                    <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                        ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">                        <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; N <span class="keyword">and</span> MAP[ny][nx] == MAP[y][x] + <span class="number">1</span>:</span><br><span class="line">                            y, x = ny, nx</span><br><span class="line">                            visited[y][x] = <span class="literal">True</span></span><br><span class="line">                            sub_cnt += <span class="number">1</span></span><br><span class="line">                            <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">else</span>:  <span class="comment"># 다음 작은 숫자 없으면 종료</span></span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">if</span> sub_cnt &gt; cnt:</span><br><span class="line">                    cnt = sub_cnt</span><br><span class="line">                    n = sub_n</span><br><span class="line">                <span class="keyword">elif</span> sub_cnt == cnt <span class="keyword">and</span> sub_n &lt; n:</span><br><span class="line">                    n = sub_n</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125; &#123;&#125;'</span>.format(test_case, n, cnt))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 11723. 집합</title>
    <url>/2020/03/03/BOJ_11723/</url>
    <content><![CDATA[<h3 id="11723-집합"><a class="markdownIt-Anchor" href="#11723-집합"></a> 11723. 집합</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/11723" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>input()은 느리기 때문에 sys.stdin.readline()을 써야 시간초과를 피할 수 있다.<br />pypy3는 메모리초과 때문에 실패하였고, python 3로 통과하였다.<br />비트연산으로 풀어도 된다. (실행속도, 메모리 사용량에서 차이는 없다.)</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">M = int(sys.stdin.readline())</span><br><span class="line">my_list = [<span class="literal">False</span>] * <span class="number">20</span>  <span class="comment"># 0 ~ 19</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(M):</span><br><span class="line">    c = sys.stdin.readline().split()</span><br><span class="line">    <span class="keyword">if</span> len(c) &gt; <span class="number">1</span>:</span><br><span class="line">        n = int(c[<span class="number">1</span>]) - <span class="number">1</span>  <span class="comment"># 1 ~ 20 -&gt; 0 ~ 19</span></span><br><span class="line">    <span class="keyword">if</span> c[<span class="number">0</span>] == <span class="string">'add'</span>:</span><br><span class="line">        my_list[n] = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">elif</span> c[<span class="number">0</span>] == <span class="string">'remove'</span>:</span><br><span class="line">        my_list[n] = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> c[<span class="number">0</span>] == <span class="string">'check'</span>:</span><br><span class="line">        print(<span class="number">1</span> <span class="keyword">if</span> my_list[n] <span class="keyword">else</span> <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">elif</span> c[<span class="number">0</span>] == <span class="string">'toggle'</span>:</span><br><span class="line">        my_list[n] = <span class="keyword">not</span> my_list[n]</span><br><span class="line">    <span class="keyword">elif</span> c[<span class="number">0</span>] == <span class="string">'all'</span>:</span><br><span class="line">        my_list = [<span class="literal">True</span>] * <span class="number">20</span></span><br><span class="line">    <span class="keyword">elif</span> c[<span class="number">0</span>] == <span class="string">'empty'</span>:</span><br><span class="line">        my_list = [<span class="literal">False</span>] * <span class="number">20</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 16954. 움직이는 미로 탈출</title>
    <url>/2020/03/03/BOJ_16954/</url>
    <content><![CDATA[<h3 id="16954-움직이는-미로-탈출"><a class="markdownIt-Anchor" href="#16954-움직이는-미로-탈출"></a> 16954. 움직이는 미로 탈출</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/16954" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find</span><span class="params">()</span>:</span></span><br><span class="line">    stack = [(<span class="number">7</span>, <span class="number">0</span>, <span class="number">8</span>)]  <span class="comment"># 7, 0에서 시작. 땅높이 y==8</span></span><br><span class="line">    <span class="keyword">while</span> stack:</span><br><span class="line">        y, x, ground = stack.pop()</span><br><span class="line">        <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">9</span>): <span class="comment"># 9방향</span></span><br><span class="line">            ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">            <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; ground <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; <span class="number">8</span> <span class="keyword">and</span> MAP[ny][nx] == <span class="string">'.'</span>:  <span class="comment"># 안전지대</span></span><br><span class="line">                <span class="comment"># 꼭대기층이면 성공</span></span><br><span class="line">                <span class="keyword">if</span> ny == <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 미로를 내리는 대신 사람과 땅을 올림</span></span><br><span class="line">                ny -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> MAP[ny][nx] == <span class="string">'.'</span>:  <span class="comment"># 올린 칸도 안전지대</span></span><br><span class="line">                    <span class="comment"># 꼭대기층이면 성공</span></span><br><span class="line">                    <span class="keyword">if</span> ny == <span class="number">0</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">                    stack.append((ny, nx, ground - <span class="number">1</span>))  <span class="comment"># 다음 탐색</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dx = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>)</span><br><span class="line">dy = (<span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">MAP = [input() <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">8</span>)]</span><br><span class="line">print(find())</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 17244. 아맞다우산</title>
    <url>/2020/03/02/BOJ_17244/</url>
    <content><![CDATA[<h3 id="17244-아맞다우산"><a class="markdownIt-Anchor" href="#17244-아맞다우산"></a> 17244. 아맞다우산</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/17244" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> permutations</span><br><span class="line"></span><br><span class="line">dx = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line">dy = (<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">N, M = map(int, input().split())</span><br><span class="line">MAP = [list(input()) <span class="keyword">for</span> _ <span class="keyword">in</span> range(M)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># S와 E 모두 X로 바꿔주고 첫항과 끝항으로 배치</span></span><br><span class="line">X = []</span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(M):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">if</span> MAP[r][c] == <span class="string">'S'</span>:</span><br><span class="line">            temp1 = (r, c)</span><br><span class="line">            MAP[r][c] = <span class="string">'X'</span></span><br><span class="line">        <span class="keyword">elif</span> MAP[r][c] == <span class="string">'E'</span>:</span><br><span class="line">            temp2 = (r, c)</span><br><span class="line">            MAP[r][c] = <span class="string">'X'</span></span><br><span class="line">        <span class="keyword">elif</span> MAP[r][c] == <span class="string">'X'</span>:</span><br><span class="line">            X.append((r, c))</span><br><span class="line">X = [temp1] + X + [temp2]</span><br><span class="line"></span><br><span class="line"><span class="comment"># X 의 간격(link) BFS로 탐색</span></span><br><span class="line">link = [[float(<span class="string">'inf'</span>)] * len(X) <span class="keyword">for</span> _ <span class="keyword">in</span> range(len(X))]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(X)):</span><br><span class="line">    r, c = X[i]</span><br><span class="line">    visited = [[<span class="literal">False</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(M)]</span><br><span class="line">    visited[r][c] = <span class="literal">True</span></span><br><span class="line">    Q = [(r, c, <span class="number">0</span>)]</span><br><span class="line">    <span class="keyword">while</span> Q:</span><br><span class="line">        y, x, cnt = Q.pop(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span> MAP[y][x] == <span class="string">'X'</span>:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(len(X)):</span><br><span class="line">                <span class="keyword">if</span> X[j] == (y, x):</span><br><span class="line">                    link[i][j] = cnt</span><br><span class="line">        <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">            ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">            <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; M <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; N <span class="keyword">and</span> <span class="keyword">not</span> visited[ny][nx] <span class="keyword">and</span> MAP[ny][nx] != <span class="string">'#'</span>:</span><br><span class="line">                visited[ny][nx] = <span class="literal">True</span></span><br><span class="line">                Q.append((ny, nx, cnt + <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 모든 경로를 계산하여 최소값 출력</span></span><br><span class="line">result = float(<span class="string">'inf'</span>)</span><br><span class="line"><span class="keyword">for</span> root <span class="keyword">in</span> permutations(range(<span class="number">1</span>, len(X) - <span class="number">1</span>)):</span><br><span class="line">    root = [<span class="number">0</span>] + list(root) + [<span class="number">-1</span>]  <span class="comment"># S ~ X순열 ~ E</span></span><br><span class="line">    sub_res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(X) - <span class="number">1</span>):</span><br><span class="line">        sub_res += link[root[i]][root[i + <span class="number">1</span>]]</span><br><span class="line">    <span class="keyword">if</span> sub_res &lt; result:</span><br><span class="line">        result = sub_res</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 1987. 알파벳</title>
    <url>/2020/03/01/BOJ_1987/</url>
    <content><![CDATA[<h3 id="1987-알파벳"><a class="markdownIt-Anchor" href="#1987-알파벳"></a> 1987. 알파벳</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/1987" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>내 코드는 중복이 다음과 같을 때 일어난다.</p><blockquote><p>ABC…<br />BCD…<br />CDE…<br />…</p></blockquote><p>A에서 E로가면 결과는 ABCDE 하나뿐이지만 9개의 다른 경로로 계산이 중복되어 일어난다. 이것을 해결해주려면 이차원 visited 배열을 만들어서 해당 칸에 오기까지의 경로를 저장하고, 중복될 때 계산을 건너뛰어주면 된다.</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> ord(data) - <span class="number">65</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DFS</span><span class="params">(y, x, cnt)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> result</span><br><span class="line">    <span class="keyword">if</span> cnt &gt; result:</span><br><span class="line">        result = cnt</span><br><span class="line">    <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; R <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; C <span class="keyword">and</span> <span class="keyword">not</span> visited[ny][nx] <span class="keyword">and</span> <span class="keyword">not</span> visited_alp[MAP[ny][nx]]:</span><br><span class="line">            visited[ny][nx] = <span class="literal">True</span></span><br><span class="line">            visited_alp[MAP[ny][nx]] = <span class="literal">True</span></span><br><span class="line">            DFS(ny, nx, cnt + <span class="number">1</span>)</span><br><span class="line">            visited_alp[MAP[ny][nx]] = <span class="literal">False</span></span><br><span class="line">            visited[ny][nx] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">R, C = map(int, input().split())</span><br><span class="line">MAP = [list(map(my_func, input())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(R)]</span><br><span class="line"></span><br><span class="line">visited_alp = [<span class="literal">False</span>] * <span class="number">26</span></span><br><span class="line">visited = [[<span class="literal">False</span>] * C <span class="keyword">for</span> _ <span class="keyword">in</span> range(R)]</span><br><span class="line"></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line">visited[<span class="number">0</span>][<span class="number">0</span>] = <span class="literal">True</span></span><br><span class="line">visited_alp[MAP[<span class="number">0</span>][<span class="number">0</span>]] = <span class="literal">True</span></span><br><span class="line">DFS(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 1949. [모의 SW 역량테스트] 등산로 조성</title>
    <url>/2020/03/01/SWEA_1949/</url>
    <content><![CDATA[<h3 id="1949-모의-sw-역량테스트-등산로-조성"><a class="markdownIt-Anchor" href="#1949-모의-sw-역량테스트-등산로-조성"></a> 1949. [모의 SW 역량테스트] 등산로 조성</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PoOKKAPIDFAUq" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dx = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line">dy = (<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DFS</span><span class="params">(y, x)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> cut, cnt, result</span><br><span class="line">    <span class="keyword">if</span> cnt &gt; result:</span><br><span class="line">        result = cnt</span><br><span class="line">    <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">4</span>):  <span class="comment"># 상하좌우</span></span><br><span class="line">        ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; N <span class="keyword">and</span> <span class="keyword">not</span> visited[ny][nx]:</span><br><span class="line">            <span class="comment"># 산 깎고 내리막</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> cut <span class="keyword">and</span> MAP[ny][nx] - K &lt; MAP[y][x] &lt;= MAP[ny][nx]:</span><br><span class="line">                temp = MAP[ny][nx]</span><br><span class="line">                MAP[ny][nx] = MAP[y][x] - <span class="number">1</span></span><br><span class="line">                cut = <span class="literal">True</span></span><br><span class="line">                cnt += <span class="number">1</span></span><br><span class="line">                visited[ny][nx] = <span class="literal">True</span></span><br><span class="line">                DFS(ny, nx)</span><br><span class="line">                visited[ny][nx] = <span class="literal">False</span></span><br><span class="line">                cnt -= <span class="number">1</span></span><br><span class="line">                cut = <span class="literal">False</span></span><br><span class="line">                MAP[ny][nx] = temp</span><br><span class="line">            <span class="comment"># 내리막</span></span><br><span class="line">            <span class="keyword">if</span> MAP[ny][nx] &lt; MAP[y][x]:</span><br><span class="line">                cnt += <span class="number">1</span></span><br><span class="line">                visited[ny][nx] = <span class="literal">True</span></span><br><span class="line">                DFS(ny, nx)</span><br><span class="line">                visited[ny][nx] = <span class="literal">False</span></span><br><span class="line">                cnt -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N, K = map(int, input().split())</span><br><span class="line">    MAP = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 봉우리 찾기</span></span><br><span class="line">    max_list = []</span><br><span class="line">    max_cnt = <span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">if</span> MAP[r][c] &gt; max_cnt:</span><br><span class="line">                max_cnt = MAP[r][c]</span><br><span class="line">                max_list = [(r, c)]</span><br><span class="line">            <span class="keyword">elif</span> MAP[r][c] == max_cnt:</span><br><span class="line">                max_list.append((r, c))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># DFS</span></span><br><span class="line">    cut = <span class="literal">False</span></span><br><span class="line">    cnt = <span class="number">1</span></span><br><span class="line">    result = <span class="number">-1</span></span><br><span class="line">    visited = [[<span class="literal">False</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    <span class="keyword">for</span> r, c <span class="keyword">in</span> max_list:</span><br><span class="line">        visited[r][c] = <span class="literal">True</span></span><br><span class="line">        DFS(r, c)</span><br><span class="line">        visited[r][c] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 1952. [모의 SW 역량테스트] 수영장</title>
    <url>/2020/02/29/SWEA_1952/</url>
    <content><![CDATA[<h3 id="1952-모의-sw-역량테스트-수영장"><a class="markdownIt-Anchor" href="#1952-모의-sw-역량테스트-수영장"></a> 1952. [모의 SW 역량테스트] 수영장</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PpFQaAQMDFAUq" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    cost = list(map(int, input().split()))</span><br><span class="line">    plan = list(map(int, input().split()))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1년 이용권 이용시</span></span><br><span class="line">    result = cost[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1일or 1달 이용권 중 싼 가격</span></span><br><span class="line">    monthly = []</span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> range(len(plan)):</span><br><span class="line">        monthly.append(cost[<span class="number">1</span>] <span class="keyword">if</span> cost[<span class="number">1</span>] &lt; plan[m] * cost[<span class="number">0</span>] <span class="keyword">else</span> plan[m] * cost[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1 ~ 3달 이용권 이용시</span></span><br><span class="line">    stack = [(<span class="number">0</span>, <span class="number">0</span>)]</span><br><span class="line">    <span class="keyword">while</span> stack:</span><br><span class="line">        idx, money = stack.pop()</span><br><span class="line">        <span class="keyword">if</span> idx &gt;= <span class="number">12</span>:</span><br><span class="line">            <span class="keyword">if</span> money &lt; result <span class="keyword">and</span> money:</span><br><span class="line">                result = money</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> plan[idx]:</span><br><span class="line">                stack.append((idx + <span class="number">1</span>, money + monthly[idx]))</span><br><span class="line">                stack.append((idx + <span class="number">3</span>, money + cost[<span class="number">2</span>]))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                stack.append((idx + <span class="number">1</span>, money))</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 1953. [모의 SW 역량테스트] 탈주범 검거</title>
    <url>/2020/02/29/SWEA_1953/</url>
    <content><![CDATA[<h3 id="1953-모의-sw-역량테스트-탈주범-검거"><a class="markdownIt-Anchor" href="#1953-모의-sw-역량테스트-탈주범-검거"></a> 1953. [모의 SW 역량테스트] 탈주범 검거</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PpLlKAQ4DFAUq" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>현재 칸과 다음 칸이 <strong>양방향</strong>으로 연결되어있어야 움직일 수 있다.</p>
          </div>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dx = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line">dy = (<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">rev = (<span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">2</span>)  <span class="comment"># 반대 방향</span></span><br><span class="line">my_dict = &#123;  <span class="comment"># 구조물 번호에 따른 연결 방향</span></span><br><span class="line">    <span class="number">1</span>: (<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>),</span><br><span class="line">    <span class="number">2</span>: (<span class="number">0</span>, <span class="number">1</span>),</span><br><span class="line">    <span class="number">3</span>: (<span class="number">2</span>, <span class="number">3</span>),</span><br><span class="line">    <span class="number">4</span>: (<span class="number">0</span>, <span class="number">3</span>),</span><br><span class="line">    <span class="number">5</span>: (<span class="number">1</span>, <span class="number">3</span>),</span><br><span class="line">    <span class="number">6</span>: (<span class="number">1</span>, <span class="number">2</span>),</span><br><span class="line">    <span class="number">7</span>: (<span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N, M, R, C, L = map(int, input().split())</span><br><span class="line">    MAP = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># BFS</span></span><br><span class="line">    visited = [[<span class="number">0</span>] * M <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    visited[R][C] = <span class="number">1</span></span><br><span class="line">    stack = [(R, C)]</span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> stack:</span><br><span class="line">        y, x = stack.pop(<span class="number">0</span>)</span><br><span class="line">        cnt = visited[y][x]</span><br><span class="line">        <span class="keyword">if</span> cnt &lt; L:</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> my_dict[MAP[y][x]]:  <span class="comment"># 현재 칸이 갈 수 있는 방향</span></span><br><span class="line">                ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">                <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; M <span class="keyword">and</span> <span class="keyword">not</span> visited[ny][nx] <span class="keyword">and</span> MAP[ny][nx]:</span><br><span class="line">                    <span class="keyword">if</span> rev[d] <span class="keyword">in</span> my_dict[MAP[ny][nx]]:  <span class="comment"># 다음 칸이 현재 칸과 연결</span></span><br><span class="line">                        visited[ny][nx] = cnt + <span class="number">1</span></span><br><span class="line">                        result += <span class="number">1</span></span><br><span class="line">                        stack.append((ny, nx))</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 2382. [모의 SW 역량테스트] 미생물 격리</title>
    <url>/2020/02/28/SWEA_2382/</url>
    <content><![CDATA[<h3 id="2382-모의-sw-역량테스트-미생물-격리"><a class="markdownIt-Anchor" href="#2382-모의-sw-역량테스트-미생물-격리"></a> 2382. [모의 SW 역량테스트] 미생물 격리</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV597vbqAH0DFAVl" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><ul><li>실행시간 비교<br />2차원 배열로 풀었을 때 - 약 6,000ms<br />리스트로 풀었을 때 - 약 660ms</li></ul>
          </div>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 무 상 하 좌 우</span></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line">dy = [<span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">rev = [<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>]  <span class="comment"># 방향 전환</span></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N, M, K = map(int, input().split())</span><br><span class="line">    my_map = [[<span class="literal">None</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    m_list = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(K)]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(M):</span><br><span class="line">        check = &#123;&#125;</span><br><span class="line">        idx = <span class="number">-1</span></span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> m_list:</span><br><span class="line">            y, x, cnt, d = m</span><br><span class="line">            idx += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> cnt:</span><br><span class="line">                <span class="keyword">continue</span>  <span class="comment"># 다음 미생물</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 이동</span></span><br><span class="line">            ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">            m[<span class="number">0</span>], m[<span class="number">1</span>] = ny, nx</span><br><span class="line">            <span class="comment"># 약품으로 이동 시 반감 후 방향 전환</span></span><br><span class="line">            <span class="keyword">if</span> ny == <span class="number">0</span> <span class="keyword">or</span> ny == N - <span class="number">1</span> <span class="keyword">or</span> nx == <span class="number">0</span> <span class="keyword">or</span> nx == N - <span class="number">1</span>:</span><br><span class="line">                m[<span class="number">2</span>] //= <span class="number">2</span></span><br><span class="line">                m[<span class="number">3</span>] = rev[m[<span class="number">3</span>]]</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 중복 체크</span></span><br><span class="line">            <span class="keyword">if</span> (ny, nx) <span class="keyword">not</span> <span class="keyword">in</span> check:  <span class="comment"># 좌표에 아무도 없으면</span></span><br><span class="line">                check[(ny, nx)] = (idx, cnt)  <span class="comment"># 최대 미생물 등록</span></span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment"># 좌표에 있으면(겹침)</span></span><br><span class="line">                max_idx, max_cnt = check[(ny, nx)]  <span class="comment"># 최대 미생물</span></span><br><span class="line">                <span class="keyword">if</span> max_cnt &lt; cnt:  <span class="comment"># 보다 크면</span></span><br><span class="line">                    check[(ny, nx)] = (idx, cnt)  <span class="comment"># 등록</span></span><br><span class="line">                    m[<span class="number">2</span>] += m_list[max_idx][<span class="number">2</span>]  <span class="comment"># 흡수</span></span><br><span class="line">                    m_list[max_idx][<span class="number">2</span>] = <span class="number">0</span></span><br><span class="line">                <span class="keyword">else</span>:  <span class="comment"># 작으면</span></span><br><span class="line">                    m_list[max_idx][<span class="number">2</span>] += m[<span class="number">2</span>]  <span class="comment"># 흡수 당함</span></span><br><span class="line">                    m[<span class="number">2</span>] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 결과</span></span><br><span class="line">    result = sum(map(<span class="keyword">lambda</span> x: x[<span class="number">2</span>], m_list))</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 2383. [모의 SW 역량테스트] 점심 식사시간</title>
    <url>/2020/02/28/SWEA_2383/</url>
    <content><![CDATA[<h3 id="2383-모의-sw-역량테스트-점심-식사시간"><a class="markdownIt-Anchor" href="#2383-모의-sw-역량테스트-점심-식사시간"></a> 2383. [모의 SW 역량테스트] 점심 식사시간</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5-BEE6AK0DFAVl" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>제네레이터와 메모이제이션으로 시간 살짝 줄여봄.<br />계단1 코드와 계단2 코드가 중복되므로 함수로 만들거나 반복문으로 줄일 수 있음.</p><p><em>참고) SWEA 정답 코드 중에 틀린 답 많음.</em></p>
          </div>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 사람이 계단을 선택하는 경우의 수만큼</span></span><br><span class="line"><span class="comment"># 계단까지의 거리를 반환하는 제네레이터</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_gen</span><span class="params">(people, stair)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span> &lt;&lt; len(people)):</span><br><span class="line">        g1 = []</span><br><span class="line">        g2 = []</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(people)):</span><br><span class="line">            <span class="keyword">if</span> i &amp; (<span class="number">1</span> &lt;&lt; j):</span><br><span class="line">                dist = abs(people[j][<span class="number">0</span>] - stair[<span class="number">0</span>][<span class="number">0</span>]) + abs(people[j][<span class="number">1</span>] - stair[<span class="number">0</span>][<span class="number">1</span>])</span><br><span class="line">                g1.append(dist)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dist = abs(people[j][<span class="number">0</span>] - stair[<span class="number">1</span>][<span class="number">0</span>]) + abs(people[j][<span class="number">1</span>] - stair[<span class="number">1</span>][<span class="number">1</span>])</span><br><span class="line">                g2.append(dist)</span><br><span class="line">        <span class="keyword">yield</span> sorted(g1), sorted(g2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 메모이제이션</span></span><br><span class="line">memo = &#123;&#125;</span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input())</span><br><span class="line">    MAP = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">	</span><br><span class="line">    <span class="comment"># 사람과 계단 찾기</span></span><br><span class="line">    people = []</span><br><span class="line">    stair = []</span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">if</span> MAP[r][c]:</span><br><span class="line">                <span class="keyword">if</span> MAP[r][c] == <span class="number">1</span>:</span><br><span class="line">                    people.append((r, c))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    stair.append((r, c, MAP[r][c]))</span><br><span class="line"></span><br><span class="line">    result = float(<span class="string">'inf'</span>)</span><br><span class="line">    <span class="keyword">for</span> g1, g2 <span class="keyword">in</span> my_gen(people, stair):</span><br><span class="line">        t1 = t2 = <span class="number">0</span></span><br><span class="line">        s1 = []</span><br><span class="line">        s2 = []</span><br><span class="line">        <span class="comment"># 메모이제이션</span></span><br><span class="line">        m1, m2 = (tuple(g1), stair[<span class="number">0</span>][<span class="number">2</span>]), (tuple(g2), stair[<span class="number">1</span>][<span class="number">2</span>])</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 1번 계단</span></span><br><span class="line">        <span class="keyword">if</span> m1 <span class="keyword">in</span> memo:</span><br><span class="line">            t1 = memo[m1]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">while</span> g1 <span class="keyword">or</span> s1:</span><br><span class="line">                <span class="comment"># 시간 흐름</span></span><br><span class="line">                t1 += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> g1 <span class="keyword">or</span> s1:</span><br><span class="line">                    <span class="comment"># 계단 이동 완료 (3명 까지)</span></span><br><span class="line">                    i = <span class="number">0</span></span><br><span class="line">                    <span class="keyword">for</span> _ <span class="keyword">in</span> range(min(len(s1), <span class="number">3</span>)):</span><br><span class="line">                        <span class="keyword">if</span> s1[i]:</span><br><span class="line">                            i += <span class="number">1</span></span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            s1.pop(i)</span><br><span class="line">                    <span class="comment"># 계단 내려가기 (3명 까지)</span></span><br><span class="line">                    i = <span class="number">0</span></span><br><span class="line">                    <span class="keyword">for</span> _ <span class="keyword">in</span> range(min(len(s1), <span class="number">3</span>)):</span><br><span class="line">                        s1[i] -= <span class="number">1</span></span><br><span class="line">                        i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 입구에 도착한 사람 계단으로</span></span><br><span class="line">                    <span class="keyword">while</span> g1 <span class="keyword">and</span> t1 == g1[<span class="number">0</span>]:</span><br><span class="line">                        g1.pop(<span class="number">0</span>)</span><br><span class="line">                        s1.append(stair[<span class="number">0</span>][<span class="number">2</span>])</span><br><span class="line">            <span class="comment"># 결과 메모</span></span><br><span class="line">            memo[m1] = t1</span><br><span class="line">		</span><br><span class="line">        <span class="comment"># 2번 계단</span></span><br><span class="line">        <span class="keyword">if</span> m2 <span class="keyword">in</span> memo:</span><br><span class="line">            t2 = memo[m2]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">while</span> g2 <span class="keyword">or</span> s2:</span><br><span class="line">                <span class="comment"># 시간 흐름</span></span><br><span class="line">                t2 += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> g2 <span class="keyword">or</span> s2:</span><br><span class="line">                    <span class="comment"># 계단 이동 완료 (3명 까지)</span></span><br><span class="line">                    i = <span class="number">0</span></span><br><span class="line">                    <span class="keyword">for</span> _ <span class="keyword">in</span> range(min(len(s2), <span class="number">3</span>)):</span><br><span class="line">                        <span class="keyword">if</span> s2[i]:</span><br><span class="line">                            i += <span class="number">1</span></span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            s2.pop(i)</span><br><span class="line">                    <span class="comment"># 계단 내려가기 (3명 까지)</span></span><br><span class="line">                    i = <span class="number">0</span></span><br><span class="line">                    <span class="keyword">for</span> _ <span class="keyword">in</span> range(min(len(s2), <span class="number">3</span>)):</span><br><span class="line">                        s2[i] -= <span class="number">1</span></span><br><span class="line">                        i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 입구에 도착한 사람 계단으로</span></span><br><span class="line">                    <span class="keyword">while</span> g2 <span class="keyword">and</span> t2 == g2[<span class="number">0</span>]:</span><br><span class="line">                        g2.pop(<span class="number">0</span>)</span><br><span class="line">                        s2.append(stair[<span class="number">1</span>][<span class="number">2</span>])</span><br><span class="line">            <span class="comment"># 결과 메모</span></span><br><span class="line">            memo[m2] = t2</span><br><span class="line"></span><br><span class="line">        sub_res = max(t1, t2)  <span class="comment"># 늦게 끝난 계단</span></span><br><span class="line">        <span class="keyword">if</span> sub_res &lt; result:  <span class="comment"># 최소값</span></span><br><span class="line">            result = sub_res</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 2477. [모의 SW 역량테스트] 차량 정비소</title>
    <url>/2020/02/27/SWEA_2477/</url>
    <content><![CDATA[<h3 id="2477-모의-sw-역량테스트-차량-정비소"><a class="markdownIt-Anchor" href="#2477-모의-sw-역량테스트-차량-정비소"></a> 2477. [모의 SW 역량테스트] 차량 정비소</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV6c6bgaIuoDFAXy" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N, M, K, A, B = map(int, input().split())</span><br><span class="line">    a = list(map(int, input().split()))</span><br><span class="line">    b = list(map(int, input().split()))</span><br><span class="line">    t = list(map(int, input().split()))</span><br><span class="line"></span><br><span class="line">    A, B = A - <span class="number">1</span>, B - <span class="number">1</span></span><br><span class="line">    waiting1 = []  <span class="comment"># A 대기열</span></span><br><span class="line">    AA = [<span class="literal">None</span>] * N  <span class="comment"># A 창구</span></span><br><span class="line">    AA_num = <span class="number">0</span>  <span class="comment"># A 창구 인원</span></span><br><span class="line">    waiting2 = []  <span class="comment"># B 대기열</span></span><br><span class="line">    BB = [<span class="literal">None</span>] * M  <span class="comment"># B 창구</span></span><br><span class="line">    sub_res = [<span class="literal">False</span>] * (K + <span class="number">1</span>)  <span class="comment"># 지갑 떨어뜨린 A 창구에 방문한 손님</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    time = <span class="number">0</span></span><br><span class="line">    idx = <span class="number">1</span>  <span class="comment"># 손님 번호</span></span><br><span class="line">    <span class="keyword">while</span> t <span class="keyword">or</span> AA_num <span class="keyword">or</span> waiting2:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 입장 손님 A 대기열로</span></span><br><span class="line">        <span class="keyword">while</span> t <span class="keyword">and</span> t[<span class="number">0</span>] == time:</span><br><span class="line">            t.pop(<span class="number">0</span>)</span><br><span class="line">            waiting1.append(idx)</span><br><span class="line">            idx += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># A 대기열 -&gt; A창구 -&gt; B 대기열</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="comment"># 창구에 손님 있으면</span></span><br><span class="line">            <span class="keyword">if</span> AA[i]:</span><br><span class="line">                AA[i][<span class="number">1</span>] -= <span class="number">1</span>  <span class="comment"># 시간 줄임</span></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> AA[i][<span class="number">1</span>]:  <span class="comment"># 시간 다 되면</span></span><br><span class="line">                    waiting2.append(AA[i][<span class="number">0</span>])  <span class="comment"># B 대기열로 보내고</span></span><br><span class="line">                    AA[i] = <span class="literal">None</span>  <span class="comment"># 창구 비움</span></span><br><span class="line">                    AA_num -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 창구 비면</span></span><br><span class="line">            <span class="keyword">if</span> AA[i] <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">if</span> waiting1:  <span class="comment"># A 대기열있으면 채움</span></span><br><span class="line">                    num = waiting1.pop(<span class="number">0</span>)</span><br><span class="line">                    AA[i] = [num, a[i]]</span><br><span class="line">                    AA_num += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> i == A:  <span class="comment"># 지갑 떨어뜨린 A 창구이면</span></span><br><span class="line">                        sub_res[num] = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># B 대기열 -&gt; B 창구 -&gt; 귀가</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(M):</span><br><span class="line">            <span class="comment"># 창구에 손님 있으면</span></span><br><span class="line">            <span class="keyword">if</span> BB[i]:</span><br><span class="line">                BB[i][<span class="number">1</span>] -= <span class="number">1</span>  <span class="comment"># 시간 줄임</span></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> BB[i][<span class="number">1</span>]:  <span class="comment"># 시간 다 되면 창구 비움</span></span><br><span class="line">                    BB[i] = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 창구 비면</span></span><br><span class="line">            <span class="keyword">if</span> BB[i] <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">if</span> waiting2:  <span class="comment"># B 대기열있으면 채움</span></span><br><span class="line">                    num = waiting2.pop(<span class="number">0</span>)</span><br><span class="line">                    BB[i] = [num, b[i]]</span><br><span class="line">                    <span class="comment"># 지갑 떨어뜨린 B 창구이면서 A 창구이면 결과 반영</span></span><br><span class="line">                    <span class="keyword">if</span> i == B <span class="keyword">and</span> sub_res[num]:</span><br><span class="line">                        result += num</span><br><span class="line">        <span class="comment"># 시간 지남</span></span><br><span class="line">        time += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 손님 없으면</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">        result = <span class="number">-1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 2105. [모의 SW 역량테스트] 디저트 카페</title>
    <url>/2020/02/27/SWEA_2105/</url>
    <content><![CDATA[<h3 id="2105-모의-sw-역량테스트-디저트-카페"><a class="markdownIt-Anchor" href="#2105-모의-sw-역량테스트-디저트-카페"></a> 2105. [모의 SW 역량테스트] 디저트 카페</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5VwAr6APYDFAWu" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_calc</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> length <span class="keyword">in</span> range(N - <span class="number">1</span>, <span class="number">1</span>, <span class="number">-1</span>):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, length):</span><br><span class="line">            j = length - i</span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> range(i, N - j):</span><br><span class="line">                <span class="keyword">for</span> c <span class="keyword">in</span> range(N - i - j):</span><br><span class="line">                    <span class="comment"># 출발</span></span><br><span class="line">                    visited = [<span class="literal">False</span>] * <span class="number">101</span></span><br><span class="line">                    y, x = r, c</span><br><span class="line">                    <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">4</span>):  <span class="comment"># 방향 전환</span></span><br><span class="line">                        n = j <span class="keyword">if</span> d % <span class="number">2</span> <span class="keyword">else</span> i</span><br><span class="line">                        <span class="keyword">for</span> _ <span class="keyword">in</span> range(n):  <span class="comment"># 직진</span></span><br><span class="line">                            y, x = y + dy[d], x + dx[d]</span><br><span class="line">                            <span class="keyword">if</span> <span class="keyword">not</span> visited[MAP[y][x]]:</span><br><span class="line">                                visited[MAP[y][x]] = <span class="literal">True</span></span><br><span class="line">                            <span class="keyword">else</span>:  <span class="comment"># 중복이면 다음 출발로</span></span><br><span class="line">                                <span class="keyword">break</span></span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            <span class="keyword">continue</span></span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">else</span>:  <span class="comment"># 한바퀴 완주하면</span></span><br><span class="line">                        <span class="keyword">return</span> length * <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dx = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-1</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input())</span><br><span class="line">    MAP = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, my_calc()))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 2115. [모의 SW 역량테스트] 벌꿀채취</title>
    <url>/2020/02/26/SWEA_2115/</url>
    <content><![CDATA[<h3 id="2115-모의-sw-역량테스트-벌꿀채취"><a class="markdownIt-Anchor" href="#2115-모의-sw-역량테스트-벌꿀채취"></a> 2115. [모의 SW 역량테스트] 벌꿀채취</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5V4A46AdIDFAWu" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> combinations</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N, M, C = map(int, input().split())</span><br><span class="line">    MAP = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 일꾼의 위치에 따른 최대 수익량</span></span><br><span class="line">    my_map = [[<span class="literal">None</span>] * (N - M + <span class="number">1</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N - M + <span class="number">1</span>):</span><br><span class="line">            temp = MAP[r][c: c + M]  <span class="comment"># 채취 범위</span></span><br><span class="line">            sub_res = <span class="number">0</span></span><br><span class="line">            <span class="comment"># 채취 범위 내 경우의 수</span></span><br><span class="line">            <span class="keyword">for</span> temp_len <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + M):</span><br><span class="line">                <span class="keyword">for</span> select <span class="keyword">in</span> combinations(temp, temp_len):</span><br><span class="line">                    <span class="comment"># 경우의 수 별 수익 계산</span></span><br><span class="line">                    <span class="keyword">if</span> sum(select) &lt;= C:</span><br><span class="line">                        t = <span class="number">0</span></span><br><span class="line">                        <span class="keyword">for</span> cell <span class="keyword">in</span> select:</span><br><span class="line">                            t += cell ** <span class="number">2</span></span><br><span class="line">                        <span class="keyword">if</span> t &gt; sub_res:</span><br><span class="line">                            sub_res = t</span><br><span class="line">            my_map[r][c] = sub_res</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 겹치지 않으며 두 수를 더했을 때 가장 큰 값 찾기</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N - M + <span class="number">1</span>):</span><br><span class="line">            sub_list = []</span><br><span class="line">            sub_list += my_map[r][c + M: N - M + <span class="number">1</span>]</span><br><span class="line">            <span class="keyword">for</span> y <span class="keyword">in</span> range(r + <span class="number">1</span>, N):</span><br><span class="line">                sub_list += my_map[y]</span><br><span class="line">            <span class="keyword">if</span> sub_list:</span><br><span class="line">                sub_res = my_map[r][c] + max(sub_list)</span><br><span class="line">                <span class="keyword">if</span> sub_res &gt; result:</span><br><span class="line">                    result = sub_res</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 2112. [모의 SW 역량테스트] 보호 필름</title>
    <url>/2020/02/26/SWEA_2112/</url>
    <content><![CDATA[<h3 id="2112-모의-sw-역량테스트-보호-필름"><a class="markdownIt-Anchor" href="#2112-모의-sw-역량테스트-보호-필름"></a> 2112. [모의 SW 역량테스트] 보호 필름</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5V1SYKAaUDFAWu" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>경우의 수를 찾을 때 다음 4가지를 활용하면 쉽게 구현할 수 있다. (이번 코드에선 1, 4번을 사용했다.)</p><ol><li>복원 순열 - product</li><li>(비복원) 순열 - permutation</li><li>복원 조합 - combinations_with_replacement</li><li>(비복원) 조합 - combinations</li></ol><p>시간제한이 넉넉하지 못하므로 최적화를 해주어야 통과할 수 있는 문제이다.</p><ol><li>필름 전체를 복사하는 것 대신 세로줄 한 줄씩 복사하는 것이 유리하다. (첫 줄에서 부적합하면 다음 경우의 수로 넘어가므로 뒷 줄은 복사 할 필요가 없다.) [속도 약 4배 상승]</li><li>다중 반복문에서 특정 위치로 이동하는 것이 필요하다. (while~else, for~else, break, continue 사용법을 익혀보자.)</li></ol><p><em>참고) SWEA 정답 코드 중에 틀린 답 많음.</em></p>
          </div>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> product, combinations</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> cnt <span class="keyword">in</span> range(K):  <span class="comment"># 0 ~ K - 1</span></span><br><span class="line">        <span class="keyword">for</span> AB <span class="keyword">in</span> product((<span class="number">0</span>, <span class="number">1</span>), repeat=cnt):</span><br><span class="line">            <span class="keyword">for</span> idx <span class="keyword">in</span> combinations(range(D), cnt):</span><br><span class="line">                <span class="keyword">for</span> line <span class="keyword">in</span> zip(*DATA):</span><br><span class="line">                    line = list(line)</span><br><span class="line">                    <span class="comment"># 약물 주입</span></span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> range(cnt):</span><br><span class="line">                        line[idx[i]] = AB[i]</span><br><span class="line">                    <span class="comment"># 결과 확인</span></span><br><span class="line">                    <span class="keyword">for</span> y <span class="keyword">in</span> range(D - K + <span class="number">1</span>):</span><br><span class="line">                        temp = line[y]</span><br><span class="line">                        <span class="keyword">for</span> dy <span class="keyword">in</span> range(<span class="number">1</span>, K):</span><br><span class="line">                            <span class="keyword">if</span> temp != line[y + dy]:</span><br><span class="line">                                <span class="keyword">break</span>  <span class="comment"># 조건 미충족, 다음 y 확인</span></span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            <span class="comment"># 조건 충족, 다음 x 확인</span></span><br><span class="line">                            <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="comment"># 한 줄 전체가 조건 미충족. 다른 경우의 수 확인</span></span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># 모두 조건 충족. 결과 출력</span></span><br><span class="line">                    <span class="keyword">return</span> cnt</span><br><span class="line">    <span class="comment"># 최악의 경우</span></span><br><span class="line">    <span class="keyword">return</span> K</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    D, W, K = map(int, input().split())</span><br><span class="line">    DATA = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(D)]</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, my_func()))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 2117. [모의 SW 역량테스트] 홈 방범 서비스</title>
    <url>/2020/02/26/SWEA_2117/</url>
    <content><![CDATA[<h3 id="2117-모의-sw-역량테스트-홈-방범-서비스"><a class="markdownIt-Anchor" href="#2117-모의-sw-역량테스트-홈-방범-서비스"></a> 2117. [모의 SW 역량테스트] 홈 방범 서비스</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5V61LqAf8DFAWu" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line">    MAP = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    houses = []  <span class="comment"># 집 리스트</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">if</span> MAP[r][c]:</span><br><span class="line">                houses.append((r, c))</span><br><span class="line">    result = <span class="number">1</span>  <span class="comment"># K가 1일때 결과</span></span><br><span class="line">    <span class="keyword">for</span> K <span class="keyword">in</span> range(<span class="number">2</span>, N + <span class="number">2</span>):</span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">                <span class="comment"># 범위 안의 집 세기</span></span><br><span class="line">                cnt = <span class="number">0</span></span><br><span class="line">                <span class="keyword">for</span> y, x <span class="keyword">in</span> houses:</span><br><span class="line">                    <span class="keyword">if</span> abs(r - y) + abs(c - x) &lt; K:</span><br><span class="line">                        cnt += <span class="number">1</span></span><br><span class="line">                <span class="comment"># 손해 안나면서 많은 집이 가능할 경우 갱신</span></span><br><span class="line">                <span class="keyword">if</span> cnt &gt; result <span class="keyword">and</span> cnt * M &gt;= K**<span class="number">2</span> + (K<span class="number">-1</span>)**<span class="number">2</span>:</span><br><span class="line">                    result = cnt</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 4014. [모의 SW 역량테스트] 활주로 건설</title>
    <url>/2020/02/25/SWEA_4014/</url>
    <content><![CDATA[<h3 id="4014-모의-sw-역량테스트-활주로-건설"><a class="markdownIt-Anchor" href="#4014-모의-sw-역량테스트-활주로-건설"></a> 4014. [모의 SW 역량테스트] 활주로 건설</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWIeW7FakkUDFAVH" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">(line, X)</span>:</span></span><br><span class="line">    idx = <span class="number">0</span></span><br><span class="line">    h = line[idx]</span><br><span class="line">    straight_before_up = <span class="number">1</span></span><br><span class="line">    straight_after_down = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> idx <span class="keyword">in</span> range(<span class="number">1</span>, len(line)):</span><br><span class="line">        <span class="comment"># 직진</span></span><br><span class="line">        <span class="keyword">if</span> line[idx] == h:</span><br><span class="line">            <span class="keyword">if</span> straight_after_down:</span><br><span class="line">                straight_after_down -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                straight_before_up += <span class="number">1</span></span><br><span class="line">        <span class="comment"># 오름</span></span><br><span class="line">        <span class="keyword">elif</span> line[idx] == h + <span class="number">1</span> <span class="keyword">and</span> straight_before_up &gt;= X:</span><br><span class="line">            h += <span class="number">1</span></span><br><span class="line">            straight_before_up = <span class="number">1</span></span><br><span class="line">        <span class="comment"># 내림</span></span><br><span class="line">        <span class="keyword">elif</span> line[idx] == h - <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> straight_after_down:</span><br><span class="line">            h -= <span class="number">1</span></span><br><span class="line">            straight_after_down = X - <span class="number">1</span></span><br><span class="line">            straight_before_up = <span class="number">0</span></span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 불가능</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">	</span><br><span class="line">    <span class="comment"># Fig.7처럼 맵 밖으로 삐져나옴</span></span><br><span class="line">    <span class="keyword">if</span> straight_after_down:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>  <span class="comment"># 불가능</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>  <span class="comment"># 가능</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N, X = map(int, input().split())</span><br><span class="line">    MAP = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 가로</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> MAP:</span><br><span class="line">        result += my_func(line, X)</span><br><span class="line">    <span class="comment"># 세로</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> zip(*MAP):</span><br><span class="line">        result += my_func(line, X)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 4013. [모의 SW 역량테스트] 특이한 자석</title>
    <url>/2020/02/25/SWEA_4013/</url>
    <content><![CDATA[<h3 id="4013-모의-sw-역량테스트-특이한-자석"><a class="markdownIt-Anchor" href="#4013-모의-sw-역량테스트-특이한-자석"></a> 4013. [모의 SW 역량테스트] 특이한 자석</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWIeV9sKkcoDFAVH" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    K = int(input())</span><br><span class="line">    mag = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">4</span>)]</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(K):</span><br><span class="line">        idx, rot = map(int, input().split())</span><br><span class="line">        idx -= <span class="number">1</span>  <span class="comment"># 0 ~ 3번 톱니</span></span><br><span class="line">        move = [(idx, rot)]  <span class="comment"># 돌릴 톱니</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 왼쪽 톱니 확인</span></span><br><span class="line">        temp = rot</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(idx - <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">if</span> mag[i][<span class="number">2</span>] != mag[i + <span class="number">1</span>][<span class="number">6</span>]:</span><br><span class="line">                temp *= <span class="number">-1</span></span><br><span class="line">                move.append((i, temp))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 오른쪽 톱니 확인</span></span><br><span class="line">        temp = rot</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(idx + <span class="number">1</span>, <span class="number">4</span>):</span><br><span class="line">            <span class="keyword">if</span> mag[i][<span class="number">6</span>] != mag[i - <span class="number">1</span>][<span class="number">2</span>]:</span><br><span class="line">                temp *= <span class="number">-1</span></span><br><span class="line">                move.append((i, temp))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 톱니 돌림</span></span><br><span class="line">        <span class="keyword">for</span> idx, rot <span class="keyword">in</span> move:</span><br><span class="line">            <span class="keyword">if</span> rot == <span class="number">1</span>:</span><br><span class="line">                mag[idx] = [mag[idx].pop()] + mag[idx]</span><br><span class="line">            <span class="keyword">elif</span> rot == <span class="number">-1</span>:</span><br><span class="line">                mag[idx].append(mag[idx].pop(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 결과 계산</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        result += mag[i][<span class="number">0</span>] * <span class="number">2</span>**i</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 4012. [모의 SW 역량테스트] 요리사</title>
    <url>/2020/02/25/SWEA_4012/</url>
    <content><![CDATA[<h3 id="4012-모의-sw-역량테스트-요리사"><a class="markdownIt-Anchor" href="#4012-모의-sw-역량테스트-요리사"></a> 4012. [모의 SW 역량테스트] 요리사</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWIeUtVakTMDFAVH" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> combinations</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input())</span><br><span class="line">    DATA = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">    result = float(<span class="string">'inf'</span>)</span><br><span class="line">    <span class="keyword">for</span> g1 <span class="keyword">in</span> combinations(range(N), N//<span class="number">2</span>):</span><br><span class="line">        g2 = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(N) <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> g1]</span><br><span class="line">        sum1 = sum2 = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(N//<span class="number">2</span> - <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>, N//<span class="number">2</span>):</span><br><span class="line">                sum1 += DATA[g1[i]][g1[j]] + DATA[g1[j]][g1[i]]</span><br><span class="line">                sum2 += DATA[g2[i]][g2[j]] + DATA[g2[j]][g2[i]]</span><br><span class="line"></span><br><span class="line">        sub_res = abs(sum1 - sum2)</span><br><span class="line">        <span class="keyword">if</span> sub_res &lt; result:</span><br><span class="line">            result = sub_res</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 4008. [모의 SW 역량테스트] 숫자 만들기</title>
    <url>/2020/02/24/SWEA_4008/</url>
    <content><![CDATA[<h3 id="4008-모의-sw-역량테스트-숫자-만들기"><a class="markdownIt-Anchor" href="#4008-모의-sw-역량테스트-숫자-만들기"></a> 4008. [모의 SW 역량테스트] 숫자 만들기</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWIeRZV6kBUDFAVH" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_perm</span><span class="params">(calcs)</span>:</span></span><br><span class="line">    stack = [(calcs[:], [])]  <span class="comment"># 남은 연산자, 리턴할 결과</span></span><br><span class="line">    <span class="keyword">while</span> stack:</span><br><span class="line">        my_calc, temp = stack.pop()</span><br><span class="line">        <span class="keyword">if</span> sum(my_calc) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">yield</span> temp</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">            <span class="keyword">if</span> my_calc[i]:</span><br><span class="line">                my_calc[i] -= <span class="number">1</span></span><br><span class="line">                temp.append(i)</span><br><span class="line">                stack.append((my_calc[:], temp[:]))</span><br><span class="line">                temp.pop()</span><br><span class="line">                my_calc[i] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input())</span><br><span class="line">    calc = list(map(int, input().split()))</span><br><span class="line">    nums = list(map(int, input().split()))</span><br><span class="line">    my_min = float(<span class="string">'inf'</span>)</span><br><span class="line">    my_max = -float(<span class="string">'inf'</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 연산자로 만들 수 있는 경우의 수</span></span><br><span class="line">    <span class="keyword">for</span> perm <span class="keyword">in</span> my_perm(calc):</span><br><span class="line">        idx = <span class="number">0</span></span><br><span class="line">        sub_res = nums[idx]</span><br><span class="line">        <span class="comment"># 계산</span></span><br><span class="line">        <span class="keyword">for</span> cal <span class="keyword">in</span> perm:</span><br><span class="line">            idx += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> cal == <span class="number">0</span>:</span><br><span class="line">                sub_res += nums[idx]</span><br><span class="line">            <span class="keyword">elif</span> cal == <span class="number">1</span>:</span><br><span class="line">                sub_res -= nums[idx]</span><br><span class="line">            <span class="keyword">elif</span> cal == <span class="number">2</span>:</span><br><span class="line">                sub_res *= nums[idx]</span><br><span class="line">            <span class="keyword">elif</span> cal == <span class="number">3</span>:  <span class="comment"># 음수에서 소수점 버릴 때 주의</span></span><br><span class="line">                upper = <span class="number">1</span> <span class="keyword">if</span> sub_res &lt; <span class="number">0</span> <span class="keyword">and</span> sub_res % nums[idx] <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">                sub_res //= nums[idx]</span><br><span class="line">                sub_res += upper</span><br><span class="line">        <span class="comment"># 결과 갱신</span></span><br><span class="line">        <span class="keyword">if</span> sub_res &lt; my_min:</span><br><span class="line">            my_min = sub_res</span><br><span class="line">        <span class="keyword">if</span> sub_res &gt; my_max:</span><br><span class="line">            my_max = sub_res</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, my_max - my_min))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 5653. [모의 SW 역량테스트] 줄기세포배양</title>
    <url>/2020/02/24/SWEA_5653/</url>
    <content><![CDATA[<h3 id="5653-모의-sw-역량테스트-줄기세포배양"><a class="markdownIt-Anchor" href="#5653-모의-sw-역량테스트-줄기세포배양"></a> 5653. [모의 SW 역량테스트] 줄기세포배양</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRJ8EKe48DFAUo" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N, M, K = map(int, input().split())</span><br><span class="line">    my_map = [list(map(int, input().split())) + [<span class="number">0</span>] * K <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)] + [[<span class="number">0</span>] * (M + K) <span class="keyword">for</span> _ <span class="keyword">in</span> range(K)]</span><br><span class="line">    active = [<span class="string">'dummy'</span>] + [[] <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">10</span>)]  <span class="comment"># 생명력 1 ~ 10</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="comment"># active 채워 넣기</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(M):</span><br><span class="line">            <span class="keyword">if</span> my_map[i][j]:</span><br><span class="line">                active[my_map[i][j]].append([i, j, my_map[i][j]])</span><br><span class="line">    <span class="comment"># K만큼 시간 지남</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(K):</span><br><span class="line">        <span class="keyword">for</span> power <span class="keyword">in</span> range(<span class="number">10</span>, <span class="number">0</span>, <span class="number">-1</span>):  <span class="comment"># 생명력이 높은 순으로 번식</span></span><br><span class="line">            cells = active[power]</span><br><span class="line">            new = []</span><br><span class="line">            old = []</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(cells)<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">                cells[i][<span class="number">2</span>] -= <span class="number">1</span>  <span class="comment"># HP 감소</span></span><br><span class="line">                y, x, HP = cells[i]</span><br><span class="line">                <span class="keyword">if</span> HP == <span class="number">-1</span>:  <span class="comment"># 활성 시작, 번식</span></span><br><span class="line">                    <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                        ny, nx = (y + dy[d]) % (N + K), (x + dx[d]) % (M + K)</span><br><span class="line">                        <span class="keyword">if</span> <span class="keyword">not</span> my_map[ny][nx]:</span><br><span class="line">                            my_map[ny][nx] = power</span><br><span class="line">                            new.append([ny, nx, power])</span><br><span class="line">                <span class="keyword">if</span> HP == - power:  <span class="comment"># 비활성</span></span><br><span class="line">                    old.append(i)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> idx <span class="keyword">in</span> old:  <span class="comment"># 비활성 셀 삭제</span></span><br><span class="line">                cells.pop(idx)</span><br><span class="line">            cells += new  <span class="comment"># 번식 셀 추가</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 활성 셀 개수 세기</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">        result += len(active[i])</span><br><span class="line">        </span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case,result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 5658. [모의 SW 역량테스트] 보물상자 비밀번호</title>
    <url>/2020/02/24/SWEA_5658/</url>
    <content><![CDATA[<h3 id="5658-모의-sw-역량테스트-보물상자-비밀번호"><a class="markdownIt-Anchor" href="#5658-모의-sw-역량테스트-보물상자-비밀번호"></a> 5658. [모의 SW 역량테스트] 보물상자 비밀번호</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRUN9KfZ8DFAUo" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N, K = map(int, input().split())</span><br><span class="line">    DATA = list(input())</span><br><span class="line">    my_set = set()  <span class="comment"># 중복 제거</span></span><br><span class="line">    leng = N // <span class="number">4</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(leng):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):  <span class="comment"># 4면</span></span><br><span class="line">            <span class="comment"># 16진수 문자열 my_set에 저장</span></span><br><span class="line">            my_set.add(<span class="string">''</span>.join(DATA[i * leng : (i + <span class="number">1</span>) * leng]))</span><br><span class="line">        DATA.append(DATA.pop(<span class="number">0</span>))  <span class="comment"># 회전</span></span><br><span class="line">    my_list = []</span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> my_set:</span><br><span class="line">        my_list.append(int(num, <span class="number">16</span>))  <span class="comment"># 16진수 -&gt; 10진수</span></span><br><span class="line">    my_list.sort(reverse=<span class="literal">True</span>)  <span class="comment"># 내림차순 정렬</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, my_list[K - <span class="number">1</span>]))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 5644. [모의 SW 역량테스트] 무선 충전</title>
    <url>/2020/02/23/SWEA_5644/</url>
    <content><![CDATA[<h3 id="5644-모의-sw-역량테스트-무선-충전"><a class="markdownIt-Anchor" href="#5644-모의-sw-역량테스트-무선-충전"></a> 5644. [모의 SW 역량테스트] 무선 충전</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRDL1aeugDFAUo" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">charge</span><span class="params">(ax, ay, bx, by)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> result</span><br><span class="line">    a_charge = []</span><br><span class="line">    b_charge = []</span><br><span class="line">    <span class="comment"># 사용할 수 있는 충전기 찾기</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(A):</span><br><span class="line">        x, y, C, P = AP[i]</span><br><span class="line">        <span class="keyword">if</span> abs(ax - x) + abs(ay - y) &lt;= C:</span><br><span class="line">            a_charge.append((i, P))</span><br><span class="line">        <span class="keyword">if</span> abs(bx - x) + abs(by - y) &lt;= C:</span><br><span class="line">            b_charge.append((i, P))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 성능이 높은 순으로 정렬</span></span><br><span class="line">    a_charge.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line">    b_charge.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 같이쓰면 균등하게 분배 대신 -&gt; 한사람이 몰아서 충전해도 결과는 같음</span></span><br><span class="line">    <span class="comment"># A가 먼저 고름</span></span><br><span class="line">    temp1 = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> idx, P <span class="keyword">in</span> a_charge:</span><br><span class="line">        used = idx</span><br><span class="line">        temp1 += P</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> idx, P <span class="keyword">in</span> b_charge:</span><br><span class="line">        <span class="keyword">if</span> idx != used:</span><br><span class="line">            temp1 += P</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># B가 먼저 고름</span></span><br><span class="line">    temp2 = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> idx, P <span class="keyword">in</span> b_charge:</span><br><span class="line">        used = idx</span><br><span class="line">        temp2 += P</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> idx, P <span class="keyword">in</span> a_charge:</span><br><span class="line">        <span class="keyword">if</span> idx != used:</span><br><span class="line">            temp2 += P</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">            </span><br><span class="line">    result += max(temp1, temp2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 무 상 우 하 좌</span></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>]</span><br><span class="line">dy = [<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    <span class="comment"># 입력 받음</span></span><br><span class="line">    M, A = map(int, input().split())</span><br><span class="line">    route = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">2</span>)]</span><br><span class="line">    AP = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(A)]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 초기값</span></span><br><span class="line">    Ax, Ay = <span class="number">1</span>, <span class="number">1</span></span><br><span class="line">    Bx, By = <span class="number">10</span>, <span class="number">10</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    charge(Ax, Ay, Bx, By)  <span class="comment"># 충전</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(M):</span><br><span class="line">        <span class="comment"># 이동</span></span><br><span class="line">        Ad, Bd = route[<span class="number">0</span>][i], route[<span class="number">1</span>][i]</span><br><span class="line">        Ax, Ay = Ax + dx[Ad], Ay + dy[Ad]</span><br><span class="line">        Bx, By = Bx + dx[Bd], By + dy[Bd]</span><br><span class="line">        charge(Ax, Ay, Bx, By)  <span class="comment"># 충전</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 5648. [모의 SW 역량테스트] 원자 소멸 시뮬레이션</title>
    <url>/2020/02/22/SWEA_5648/</url>
    <content><![CDATA[<h3 id="5648-모의-sw-역량테스트-원자-소멸-시뮬레이션"><a class="markdownIt-Anchor" href="#5648-모의-sw-역량테스트-원자-소멸-시뮬레이션"></a> 5648. [모의 SW 역량테스트] 원자 소멸 시뮬레이션</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRFInKex8DFAUo" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input())</span><br><span class="line">    DATA = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    dist_list = []  <span class="comment"># 충돌 가능성 있는 원자 리스트</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N - <span class="number">1</span>):</span><br><span class="line">        x1, y1, d1, k1 = DATA[i]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>, N):</span><br><span class="line">            x2, y2, d2, k2 = DATA[j]</span><br><span class="line">            <span class="comment"># 충돌 가능성 확인</span></span><br><span class="line">            <span class="keyword">if</span> d1 == <span class="number">0</span>:  <span class="comment"># 상</span></span><br><span class="line">                <span class="comment"># 하</span></span><br><span class="line">                <span class="keyword">if</span> x1 == x2 <span class="keyword">and</span> y2 &gt; y1 <span class="keyword">and</span> d2 == <span class="number">1</span>:</span><br><span class="line">                    dist_list.append((i, j, y2 - y1))</span><br><span class="line">                <span class="comment"># 대각선</span></span><br><span class="line">                <span class="keyword">elif</span> (<span class="number">0</span> &lt; y2 - y1 == x1 - x2 <span class="keyword">and</span> d2 == <span class="number">3</span>) <span class="keyword">or</span> \</span><br><span class="line">                         (<span class="number">0</span> &lt; y2 - y1 == x2 - x1 <span class="keyword">and</span> d2 == <span class="number">2</span>):</span><br><span class="line">                    dist_list.append((i, j, (y2 - y1) * <span class="number">2</span>))</span><br><span class="line">            <span class="keyword">elif</span> d1 == <span class="number">1</span>:  <span class="comment"># 하</span></span><br><span class="line">                <span class="comment"># 상</span></span><br><span class="line">                <span class="keyword">if</span> x1 == x2 <span class="keyword">and</span> y1 &gt; y2 <span class="keyword">and</span> d2 == <span class="number">0</span>:</span><br><span class="line">                    dist_list.append((i, j, y1 - y2))</span><br><span class="line">                <span class="comment"># 대각선</span></span><br><span class="line">                <span class="keyword">elif</span> (<span class="number">0</span> &lt; y1 - y2 == x1 - x2 <span class="keyword">and</span> d2 == <span class="number">3</span>) <span class="keyword">or</span> \</span><br><span class="line">                         (<span class="number">0</span> &lt; y1 - y2 == x2 - x1 <span class="keyword">and</span> d2 == <span class="number">2</span>):</span><br><span class="line">                    dist_list.append((i, j, (y1 - y2) * <span class="number">2</span>))</span><br><span class="line">            <span class="keyword">elif</span> d1 == <span class="number">2</span>:  <span class="comment"># 좌</span></span><br><span class="line">                <span class="comment"># 우</span></span><br><span class="line">                <span class="keyword">if</span> y1 == y2 <span class="keyword">and</span> x1 &gt; x2 <span class="keyword">and</span> d2 == <span class="number">3</span>:</span><br><span class="line">                    dist_list.append((i, j, x1 - x2))</span><br><span class="line">                <span class="comment"># 대각선</span></span><br><span class="line">                <span class="keyword">elif</span> (<span class="number">0</span> &lt; x1 - x2 == y1 - y2 <span class="keyword">and</span> d2 == <span class="number">0</span>) <span class="keyword">or</span> \</span><br><span class="line">                        (<span class="number">0</span> &lt; x1 - x2 == y2 - y1 <span class="keyword">and</span> d2 == <span class="number">1</span>):</span><br><span class="line">                    dist_list.append((i, j, (x1 - x2) * <span class="number">2</span>))</span><br><span class="line">            <span class="keyword">elif</span> d1 == <span class="number">3</span>:  <span class="comment"># 우</span></span><br><span class="line">                <span class="comment"># 좌</span></span><br><span class="line">                <span class="keyword">if</span> y1 == y2 <span class="keyword">and</span> x2 &gt; x1 <span class="keyword">and</span> d2 == <span class="number">2</span>:</span><br><span class="line">                    dist_list.append((i, j, x2 - x1))</span><br><span class="line">                <span class="comment"># 대각선</span></span><br><span class="line">                <span class="keyword">elif</span> (<span class="number">0</span> &lt; x2 - x1 == y1 - y2 <span class="keyword">and</span> d2 == <span class="number">0</span>) <span class="keyword">or</span> \</span><br><span class="line">                        (<span class="number">0</span> &lt; x2 - x1 == y2 - y1 <span class="keyword">and</span> d2 == <span class="number">1</span>):</span><br><span class="line">                    dist_list.append((i, j, (x2 - x1) * <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">    dist_list.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">2</span>])  <span class="comment"># 충돌 시간순으로 정렬</span></span><br><span class="line">    dist = <span class="number">0</span></span><br><span class="line">    crash = set()  <span class="comment"># 특정시간에 충돌한 원자</span></span><br><span class="line">    crashed = []  <span class="comment"># 전체 충돌한 원자</span></span><br><span class="line">    <span class="keyword">for</span> i, j, d <span class="keyword">in</span> dist_list:</span><br><span class="line">        <span class="comment"># 충돌시간이 바뀌면 crash 초기화</span></span><br><span class="line">        <span class="keyword">if</span> d &gt; dist:</span><br><span class="line">            dist = d</span><br><span class="line">            crashed.extend(crash)</span><br><span class="line">            crash = set()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 충돌하지 않은 원자들만 충돌</span></span><br><span class="line">        <span class="keyword">for</span> cr <span class="keyword">in</span> crashed:</span><br><span class="line">            <span class="keyword">if</span> cr == i <span class="keyword">or</span> cr == j:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 충돌</span></span><br><span class="line">            crash.add(i)</span><br><span class="line">            crash.add(j)</span><br><span class="line"></span><br><span class="line">    crashed.extend(crash)</span><br><span class="line"></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> idx <span class="keyword">in</span> crashed:</span><br><span class="line">        result += DATA[idx][<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 5650. [모의 SW 역량테스트] 핀볼 게임</title>
    <url>/2020/02/21/SWEA_6959/</url>
    <content><![CDATA[<h3 id="5650-모의-sw-역량테스트-핀볼-게임"><a class="markdownIt-Anchor" href="#5650-모의-sw-역량테스트-핀볼-게임"></a> 5650. [모의 SW 역량테스트] 핀볼 게임</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRF8s6ezEDFAUo" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 상 하 좌 우</span></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1~5 블럭 방향전환</span></span><br><span class="line">change = (</span><br><span class="line">    <span class="string">'dummy'</span>,</span><br><span class="line">    (<span class="number">1</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">2</span>),</span><br><span class="line">    (<span class="number">3</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>),</span><br><span class="line">    (<span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>),</span><br><span class="line">    (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>),</span><br><span class="line">    (<span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">2</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input()) + <span class="number">2</span></span><br><span class="line">    <span class="comment"># 가장자리에 5번 블럭 더함</span></span><br><span class="line">    MAP = [[<span class="number">5</span>] * N] + [[<span class="number">5</span>] + list(map(int, input().split())) + [<span class="number">5</span>] <span class="keyword">for</span> _ <span class="keyword">in</span> range(N - <span class="number">2</span>)] + [[<span class="number">5</span>] * N]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 웜홀</span></span><br><span class="line">    worm_stack = [<span class="string">'dummy'</span>] * <span class="number">6</span> + [<span class="literal">None</span>] * <span class="number">5</span></span><br><span class="line">    wormhole = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">1</span>, N - <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">1</span>, N - <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> MAP[r][c] <span class="keyword">in</span> range(<span class="number">6</span>, <span class="number">11</span>):</span><br><span class="line">                worm_start = worm_stack[MAP[r][c]]</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> worm_start:</span><br><span class="line">                    worm_stack[MAP[r][c]] = (r, c)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    wormhole[worm_start] = (r, c)</span><br><span class="line">                    wormhole[(r, c)] = worm_start</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 탐색</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">1</span>, N - <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">1</span>, N - <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> MAP[r][c] == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">4</span>):  <span class="comment"># 상하좌우</span></span><br><span class="line">                    cnt = <span class="number">0</span></span><br><span class="line">                    y, x = r + dy[d], c + dx[d]</span><br><span class="line">                    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                        <span class="comment"># 시작지점이거나 블랙홀이면 종료</span></span><br><span class="line">                        <span class="keyword">if</span> (y, x) == (r, c) <span class="keyword">or</span> MAP[y][x] == <span class="number">-1</span>:</span><br><span class="line">                            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">                        <span class="comment"># 1 ~ 5 블럭에 와있으면 방향 전환, 득점</span></span><br><span class="line">                        <span class="keyword">elif</span> MAP[y][x] <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">6</span>):</span><br><span class="line">                            d = change[MAP[y][x]][d]</span><br><span class="line">                            cnt += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                        <span class="comment"># 6 ~ 10 블럭에 와있으면 워프</span></span><br><span class="line">                        <span class="keyword">elif</span> MAP[y][x] <span class="keyword">in</span> range(<span class="number">6</span>, <span class="number">11</span>):</span><br><span class="line">                            y, x = wormhole[(y, x)]</span><br><span class="line"></span><br><span class="line">                        <span class="comment"># 한 칸 전진</span></span><br><span class="line">                        y, x = y + dy[d], x + dx[d]</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 탐색 종료되면 결과 갱신</span></span><br><span class="line">                    <span class="keyword">if</span> cnt &gt; result:</span><br><span class="line">                        result = cnt</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 2234. 성곽</title>
    <url>/2020/02/20/BOJ_2234/</url>
    <content><![CDATA[<h3 id="2234-성곽"><a class="markdownIt-Anchor" href="#2234-성곽"></a> 2234. 성곽</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/2234" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 좌 상 우 하</span></span><br><span class="line">dx = [<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line">dy = [<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">N, M = map(int, input().split())</span><br><span class="line">MAP = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(M)]</span><br><span class="line">visited = [[<span class="literal">False</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]  <span class="comment"># 방문 여부 &amp; 구역 번호</span></span><br><span class="line">zone_num = <span class="number">1</span>  <span class="comment"># 구역 번호</span></span><br><span class="line">space = [<span class="number">0</span>]  <span class="comment"># 구역 크기</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(M):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> visited[r][c]:</span><br><span class="line">            <span class="comment">#DFS</span></span><br><span class="line">            visited[r][c] = zone_num</span><br><span class="line">            stack = [(r, c)]</span><br><span class="line">            cnt = <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> stack:</span><br><span class="line">                y, x = stack.pop()</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                    ny, nx = y + dy[i], x + dx[i]</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> MAP[y][x] &amp; (<span class="number">1</span> &lt;&lt; i) <span class="keyword">and</span> <span class="keyword">not</span> visited[ny][nx]:</span><br><span class="line">                        visited[ny][nx] = zone_num</span><br><span class="line">                        stack.append((ny, nx))</span><br><span class="line">                        cnt += <span class="number">1</span></span><br><span class="line">            space.append(cnt)</span><br><span class="line">            zone_num += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1번 답</span></span><br><span class="line">print(zone_num<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2번 답</span></span><br><span class="line">print(max(space))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3번 계산</span></span><br><span class="line"><span class="comment"># 오른쪽이나 아래쪽에 구역번호가 다르면 두 구역 크기의 합으로 결과값 갱신</span></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(M):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> (<span class="number">2</span>, <span class="number">3</span>):  <span class="comment"># 우 하</span></span><br><span class="line">            ny, nx = r + dy[i], c + dx[i]</span><br><span class="line">            <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; M <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; N <span class="keyword">and</span> visited[r][c] - visited[ny][nx]:</span><br><span class="line">                temp = space[visited[r][c]] + space[visited[ny][nx]]</span><br><span class="line">                <span class="keyword">if</span> temp &gt; result:</span><br><span class="line">                    result = temp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3번 답</span></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 17472. 다리 만들기 2</title>
    <url>/2020/02/19/BOJ_17472/</url>
    <content><![CDATA[<h3 id="17472-다리-만들기-2"><a class="markdownIt-Anchor" href="#17472-다리-만들기-2"></a> 17472. 다리 만들기 2</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/17472" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">N, M = map(int, input().split())</span><br><span class="line">MAP = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 구역 설정(DFS, while)</span></span><br><span class="line">visited = [[<span class="literal">False</span>] * M <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">beach = [[<span class="literal">False</span>] * M <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">zone_num = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(M):</span><br><span class="line">        <span class="keyword">if</span> MAP[r][c] <span class="keyword">and</span> <span class="keyword">not</span> visited[r][c]:</span><br><span class="line">            visited[r][c] = <span class="literal">True</span></span><br><span class="line">            MAP[r][c] = zone_num</span><br><span class="line">            stack = [(r, c)]</span><br><span class="line">            <span class="keyword">while</span> stack:</span><br><span class="line">                y, x = stack.pop()</span><br><span class="line">                <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                    ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">                    <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; M <span class="keyword">and</span> <span class="keyword">not</span> visited[ny][nx]:</span><br><span class="line">                        <span class="keyword">if</span> MAP[ny][nx]:</span><br><span class="line">                            visited[ny][nx] = <span class="literal">True</span></span><br><span class="line">                            MAP[ny][nx] = zone_num</span><br><span class="line">                            stack.append((ny, nx))</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            beach[y][x] = <span class="literal">True</span></span><br><span class="line">            zone_num += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 중간 확인</span></span><br><span class="line"><span class="comment"># for i in range(N):</span></span><br><span class="line"><span class="comment">#     print(*MAP[i])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 다리 놓는 비용 확인, inf : 연결안됨.</span></span><br><span class="line">cost = [[float(<span class="string">'inf'</span>)] * zone_num <span class="keyword">for</span> _ <span class="keyword">in</span> range(zone_num)]  <span class="comment"># 0번 인덱스 안씀.</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(M):</span><br><span class="line">        <span class="keyword">if</span> beach[r][c]:</span><br><span class="line">            zone = MAP[r][c]</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                cnt = <span class="number">0</span></span><br><span class="line">                y, x = r, c</span><br><span class="line">                <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                    y, x = y + dy[d], x + dx[d]</span><br><span class="line">                    <span class="keyword">if</span> <span class="number">0</span> &lt;= y &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= x &lt; M <span class="keyword">and</span> MAP[y][x] == <span class="number">0</span>:</span><br><span class="line">                        cnt += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">if</span> <span class="number">0</span> &lt;= y &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= x &lt; M <span class="keyword">and</span> MAP[y][x] != zone <span class="keyword">and</span> cnt &gt;= <span class="number">2</span>:</span><br><span class="line">                    next_zone = MAP[y][x]</span><br><span class="line">                    cost[zone][next_zone] = cost[next_zone][zone] = min(cnt, cost[zone][next_zone])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 중간 확인</span></span><br><span class="line"><span class="comment"># for i in range(zone_num):</span></span><br><span class="line"><span class="comment">#     print(*cost[i])</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, zone_num):  <span class="comment"># 연결 안 된 섬이 있으면</span></span><br><span class="line">    <span class="keyword">if</span> cost[i] == [float(<span class="string">'inf'</span>)] * zone_num:</span><br><span class="line">        result = <span class="number">-1</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 최소 신장 트리 - PRIM 알고리즘</span></span><br><span class="line">    visited = [<span class="literal">False</span>] * zone_num</span><br><span class="line">    key = [float(<span class="string">'inf'</span>)] * zone_num</span><br><span class="line">    key[<span class="number">1</span>] = <span class="number">0</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">1</span>, zone_num):</span><br><span class="line">        min_key = float(<span class="string">'inf'</span>)</span><br><span class="line">        min_idx = <span class="number">-1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 최소 key 찾기</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">1</span>, zone_num):</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> visited[n] <span class="keyword">and</span> key[n] &lt; min_key:</span><br><span class="line">                min_key = key[n]</span><br><span class="line">                min_idx = n</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 확정</span></span><br><span class="line">        visited[min_idx] = <span class="literal">True</span></span><br><span class="line">        result += min_key</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 확정된 노드로부터 key 갱신</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, zone_num):</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> visited[i] <span class="keyword">and</span> cost[min_idx][i] &lt; key[i]:</span><br><span class="line">                key[i] = cost[min_idx][i]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> result == float(<span class="string">'inf'</span>):</span><br><span class="line">    result = <span class="number">-1</span></span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SSAFY] 20200219</title>
    <url>/2020/02/19/Algorithm_0219/</url>
    <content><![CDATA[<h3 id="1224-계산기3-d4"><a class="markdownIt-Anchor" href="#1224-계산기3-d4"></a> 1224. 계산기3 <code>D4</code></h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV14tDX6AFgCFAYD" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">isp = &#123;<span class="string">'*'</span>: <span class="number">2</span>, <span class="string">'/'</span>: <span class="number">2</span>, <span class="string">'+'</span>: <span class="number">1</span>, <span class="string">'-'</span>: <span class="number">1</span>, <span class="string">'('</span>: <span class="number">0</span>&#125;</span><br><span class="line">icp = &#123;<span class="string">'*'</span>: <span class="number">2</span>, <span class="string">'/'</span>: <span class="number">2</span>, <span class="string">'+'</span>: <span class="number">1</span>, <span class="string">'-'</span>: <span class="number">1</span>, <span class="string">'('</span>: <span class="number">3</span>&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">    N = int(input())</span><br><span class="line">    data = []  <span class="comment"># 후위 표기법</span></span><br><span class="line">    calc = []  <span class="comment"># 연산자</span></span><br><span class="line">    <span class="comment"># 중위 연산 -&gt; 후위 연산</span></span><br><span class="line">    <span class="keyword">for</span> d <span class="keyword">in</span> input():</span><br><span class="line">        <span class="keyword">if</span> d.isdigit():  <span class="comment"># 숫자는 data로</span></span><br><span class="line">            data.append(d)</span><br><span class="line">        <span class="keyword">elif</span> d == <span class="string">')'</span>:</span><br><span class="line">            <span class="comment"># '(' 만날때 까지 data로 보내고 '(' 버림</span></span><br><span class="line">            <span class="keyword">while</span> data[<span class="number">-1</span>] != <span class="string">'('</span>:</span><br><span class="line">                data.append(calc.pop())</span><br><span class="line">            data.pop()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 스택안 연산자의 우선순위가 낮거나 같으면 pop해서 data로 보냄</span></span><br><span class="line">            <span class="keyword">while</span> calc <span class="keyword">and</span> <span class="keyword">not</span> icp[d] &gt; isp[calc[<span class="number">-1</span>]]:</span><br><span class="line">                data.append(calc.pop())</span><br><span class="line">            calc.append(d)</span><br><span class="line">    <span class="keyword">while</span> calc:  <span class="comment"># 남은 연산자 data로</span></span><br><span class="line">        data.append(calc.pop())</span><br><span class="line"> 	</span><br><span class="line">    <span class="comment"># 후위 연산 계산</span></span><br><span class="line">    stack = []</span><br><span class="line">    <span class="keyword">for</span> d <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">if</span> d.isdigit():</span><br><span class="line">            stack.append(int(d))</span><br><span class="line">        <span class="keyword">elif</span> d == <span class="string">'+'</span>:</span><br><span class="line">            stack.append(stack.pop() + stack.pop())</span><br><span class="line">        <span class="keyword">elif</span> d == <span class="string">'*'</span>:</span><br><span class="line">            stack.append(stack.pop() * stack.pop())</span><br><span class="line"> 	</span><br><span class="line">    <span class="comment"># 결과</span></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, stack[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>SSAFY</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 17471. 게리맨더링</title>
    <url>/2020/02/19/BOJ_17471/</url>
    <content><![CDATA[<h3 id="17471-게리맨더링"><a class="markdownIt-Anchor" href="#17471-게리맨더링"></a> 17471. 게리맨더링</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/17471" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> combinations</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_connected</span><span class="params">(g)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> len(g) == <span class="number">1</span>:  <span class="comment"># 하나는 무조건 연결됨</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># DFS 완전 탐색</span></span><br><span class="line">        visited = [<span class="literal">False</span>] * N</span><br><span class="line">        visited[g[<span class="number">0</span>]] = <span class="literal">True</span></span><br><span class="line">        stack = [g[<span class="number">0</span>]]</span><br><span class="line">        <span class="keyword">while</span> stack:</span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> link[stack.pop()]:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> visited[n] <span class="keyword">and</span> n <span class="keyword">in</span> g:</span><br><span class="line">                    visited[n] = <span class="literal">True</span></span><br><span class="line">                    stack.append(n)</span><br><span class="line">        <span class="comment"># 결과 확인</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">in</span> g <span class="keyword">and</span> <span class="keyword">not</span> visited[i]:  <span class="comment"># 그룹원인데 방문한적 없으면</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span>  <span class="comment"># 끊김</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span>  <span class="comment"># 모두 연결됨</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Gerry</span><span class="params">(g1, g2)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> result</span><br><span class="line">    <span class="keyword">if</span> is_connected(g1) <span class="keyword">and</span> is_connected(g2):  <span class="comment"># 양 그룹끼리 연결됨</span></span><br><span class="line">        diff = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> g1:  <span class="comment"># 그룹1의 인구를 더함</span></span><br><span class="line">            diff += population[i]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> g2:  <span class="comment"># 그룹2의 인구를 뺌</span></span><br><span class="line">            diff -= population[i]</span><br><span class="line">        <span class="keyword">if</span> result &gt; abs(diff):  <span class="comment"># 결과 갱신</span></span><br><span class="line">            result = abs(diff)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 입력 문자를 하나 적은 숫자로 반환</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_int</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> int(data) - <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 입력 받기</span></span><br><span class="line">N = int(input())</span><br><span class="line">population = list(map(int, input().split()))</span><br><span class="line">link = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">    dummy, *args = map(my_int, input().split())</span><br><span class="line">    link.append(args)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 모든 조합에서 게리맨더링</span></span><br><span class="line">result = float(<span class="string">'inf'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + N//<span class="number">2</span>):  <span class="comment"># 1~N//2</span></span><br><span class="line">    <span class="keyword">if</span> i * <span class="number">2</span> == N:  <span class="comment"># 양쪽그룹의 수가 같을 때 0번이 속한 그룹을 group1로 고정(중복 방지)</span></span><br><span class="line">        <span class="keyword">for</span> group1 <span class="keyword">in</span> combinations(range(<span class="number">1</span>, N), i<span class="number">-1</span>):</span><br><span class="line">            group1 = [<span class="number">0</span>] + list(group1)</span><br><span class="line">            group2 = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(N) <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> group1]</span><br><span class="line">            Gerry(group1, group2)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> group1 <span class="keyword">in</span> combinations(range(N), i):  <span class="comment"># 0~N-1개 중 i개 뽑음.</span></span><br><span class="line">            group2 = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(N) <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> group1]</span><br><span class="line">            Gerry(group1, group2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> result == float(<span class="string">'inf'</span>):  <span class="comment"># 경우 없음</span></span><br><span class="line">    result = <span class="number">-1</span></span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 2146. 다리 만들기</title>
    <url>/2020/02/18/BOJ_2146/</url>
    <content><![CDATA[<h3 id="2146-다리-만들기"><a class="markdownIt-Anchor" href="#2146-다리-만들기"></a> 2146. 다리 만들기</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/2146" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>이번 문제에서 런타임 에러나는 사람은 재귀함수를 while문으로 짜보도록 하자.<br />재귀깊이제한에 걸렸을 확률이 높다.<br />재귀깊이제한은 대략 이러하다. (python3: 1000, pypy3: 10000)<br />python3는 sys.setrecursionlimit() 메소드로 깊이제한을 변경할 수 있지만 pypy에서는 동작하지 않는다.</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">N = int(input())</span><br><span class="line">MAP = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">beach = [[<span class="literal">False</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">visited = [[<span class="literal">False</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">zone_num = <span class="number">1</span></span><br><span class="line"><span class="comment"># 구역 이름 설정(DFS)</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">if</span> MAP[r][c] <span class="keyword">and</span> <span class="keyword">not</span> visited[r][c]:</span><br><span class="line">            visited[r][c] = <span class="literal">True</span></span><br><span class="line">            MAP[r][c] = zone_num</span><br><span class="line">            stack = [(r, c)]</span><br><span class="line">            <span class="keyword">while</span> stack:</span><br><span class="line">                y, x = stack.pop()</span><br><span class="line">                <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                    ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">                    <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; N <span class="keyword">and</span> <span class="keyword">not</span> visited[ny][nx]:</span><br><span class="line">                        <span class="keyword">if</span> MAP[ny][nx]:</span><br><span class="line">                            visited[ny][nx] = <span class="literal">True</span></span><br><span class="line">                            MAP[ny][nx] = zone_num</span><br><span class="line">                            stack.append((ny, nx))</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            beach[y][x] = <span class="literal">True</span></span><br><span class="line">            zone_num += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 구역 사이의 최단 거리(BFS)</span></span><br><span class="line">result = float(<span class="string">'inf'</span>)</span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">if</span> beach[r][c]:</span><br><span class="line">            visited = [[<span class="literal">False</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">            zone_num = MAP[r][c]</span><br><span class="line">            visited[r][c] = <span class="literal">True</span></span><br><span class="line">            Q = [(r, c, <span class="number">0</span>)]</span><br><span class="line">            sub_res = float(<span class="string">'inf'</span>)</span><br><span class="line">            <span class="keyword">while</span> Q:</span><br><span class="line">                y, x, dist = Q.pop(<span class="number">0</span>)</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> dist &gt; result:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> MAP[y][x] <span class="keyword">and</span> MAP[y][x] != zone_num:</span><br><span class="line">                    sub_res = dist <span class="number">-1</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                    ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">                    <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; N <span class="keyword">and</span> <span class="keyword">not</span> visited[ny][nx] <span class="keyword">and</span> MAP[ny][nx] != zone_num:</span><br><span class="line">                        visited[ny][nx] = <span class="literal">True</span></span><br><span class="line">                        Q.append((ny, nx, dist + <span class="number">1</span>))</span><br><span class="line">			<span class="comment"># 결과 갱신</span></span><br><span class="line">            <span class="keyword">if</span> sub_res &lt; result:</span><br><span class="line">                result = sub_res</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 14395. 4연산</title>
    <url>/2020/02/18/BOJ_14395/</url>
    <content><![CDATA[<h3 id="14395-4연산"><a class="markdownIt-Anchor" href="#14395-4연산"></a> 14395. 4연산</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/14395" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p><code>-</code>는 나올 수 없으며, <code>/</code>는 처음 순서에만 들어갈 수 있다.<br />현재 값이 1일땐 <code>*</code>연산이 무의미 하며, 2일 땐 <code>+</code>보다 <code>*</code>의 우선순위가 높아 <code>+</code>를 사용하지 않는다.</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s, t = map(int, input().split())</span><br><span class="line"><span class="keyword">if</span> s == t:</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    result = <span class="number">-1</span></span><br><span class="line">    Q = []</span><br><span class="line">    <span class="keyword">if</span> t % s == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="number">1</span> &lt; s ** <span class="number">2</span> &lt;= t:</span><br><span class="line">            Q.append((s**<span class="number">2</span>, <span class="string">'*'</span>))</span><br><span class="line">        <span class="keyword">if</span> s != <span class="number">2</span> <span class="keyword">and</span> s * <span class="number">2</span> &lt;= t:</span><br><span class="line">            Q.append((s*<span class="number">2</span>, <span class="string">'+'</span>))</span><br><span class="line">    <span class="keyword">if</span> t % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">or</span> t == <span class="number">1</span>:</span><br><span class="line">        Q.append((<span class="number">1</span>, <span class="string">'/'</span>))</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">while</span> Q:</span><br><span class="line">        st, sub_res = Q.pop(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> st == t:</span><br><span class="line">            result = sub_res</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        Next = st ** <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> <span class="number">1</span> &lt; Next &lt;= t:</span><br><span class="line">            Q.append((Next, sub_res + <span class="string">'*'</span>))</span><br><span class="line">        Next = st * <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> st != <span class="number">2</span> <span class="keyword">and</span> Next &lt;= t:</span><br><span class="line">            Q.append((Next, sub_res + <span class="string">'+'</span>))</span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 17406. 배열 돌리기 4</title>
    <url>/2020/02/17/BOJ_17406/</url>
    <content><![CDATA[<h3 id="17406-배열-돌리기-4"><a class="markdownIt-Anchor" href="#17406-배열-돌리기-4"></a> 17406. 배열 돌리기 4</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/17406" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> permutations</span><br><span class="line"><span class="keyword">from</span> copy <span class="keyword">import</span> deepcopy</span><br><span class="line"></span><br><span class="line">N, M, K = map(int, input().split())</span><br><span class="line">A = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">K_list = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(K)]</span><br><span class="line"></span><br><span class="line">result = float(<span class="string">'inf'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> perm <span class="keyword">in</span> permutations(K_list):</span><br><span class="line">    my_map = deepcopy(A)</span><br><span class="line">    <span class="keyword">for</span> r, c, s <span class="keyword">in</span> perm:</span><br><span class="line">        <span class="keyword">for</span> rad <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + s):</span><br><span class="line">            <span class="comment"># 시작점</span></span><br><span class="line">            y, x = r - <span class="number">1</span> - rad, c - <span class="number">1</span> - rad</span><br><span class="line">            temp = my_map[y][x]</span><br><span class="line">            <span class="comment"># 돌리기</span></span><br><span class="line">            <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">2</span>*rad):  <span class="comment"># 우</span></span><br><span class="line">                x += <span class="number">1</span></span><br><span class="line">                my_map[y][x], temp = temp, my_map[y][x]</span><br><span class="line">            <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">2</span>*rad):  <span class="comment"># 하</span></span><br><span class="line">                y += <span class="number">1</span></span><br><span class="line">                my_map[y][x], temp = temp, my_map[y][x]</span><br><span class="line">            <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">2</span>*rad):  <span class="comment"># 좌</span></span><br><span class="line">                x -= <span class="number">1</span></span><br><span class="line">                my_map[y][x], temp = temp, my_map[y][x]</span><br><span class="line">            <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">2</span>*rad):  <span class="comment"># 상</span></span><br><span class="line">                y -= <span class="number">1</span></span><br><span class="line">                my_map[y][x], temp = temp, my_map[y][x]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 결과 갱신</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        sub_res = sum(my_map[i])</span><br><span class="line">        <span class="keyword">if</span> sub_res &lt; result:</span><br><span class="line">            result = sub_res</span><br><span class="line">            </span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 3954. Brainf**k 인터프리터</title>
    <url>/2020/02/17/BOJ_3954/</url>
    <content><![CDATA[<h3 id="3954-brainfk-인터프리터"><a class="markdownIt-Anchor" href="#3954-brainfk-인터프리터"></a> 3954. Brainf**k 인터프리터</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/3954" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>처음 코드는 루프로 되돌아가는 시점이 중복되면 무한루프로 판단하고 종료하는 코드를 짰는데,<br />평균 속도는 빠르지만 최악의 경우엔 더 느리기에 시간초과가 나왔다.<br />그래서 그냥 5천만번 돌리고 안나오면 무한루프라고 했더니 통과했다. (최악의 경우를 우선으로 생각하자!)</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(int(input())):</span><br><span class="line">    sm, sc, si = map(int, input().split())</span><br><span class="line">    code = list(input())</span><br><span class="line">    input_str = list(map(ord, input())) + [<span class="number">255</span>]</span><br><span class="line">	</span><br><span class="line">    <span class="comment"># 대괄호 점프할 곳 찾기</span></span><br><span class="line">    jump = &#123;&#125;</span><br><span class="line">    temp = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(sc):</span><br><span class="line">        <span class="keyword">if</span> code[i] == <span class="string">'['</span>:</span><br><span class="line">            temp.append(i)</span><br><span class="line">        <span class="keyword">elif</span> code[i] == <span class="string">']'</span>:</span><br><span class="line">            start = temp.pop()</span><br><span class="line">            jump[start] = i</span><br><span class="line">            jump[i] = start</span><br><span class="line"></span><br><span class="line">    memory = [<span class="number">0</span>] * sm</span><br><span class="line">    pm = <span class="number">0</span></span><br><span class="line">    pc = <span class="number">0</span></span><br><span class="line">    pi = <span class="number">0</span></span><br><span class="line">    cnt = <span class="number">0</span></span><br><span class="line">    stack = []  <span class="comment"># 루프 깊이 저장</span></span><br><span class="line">    <span class="keyword">while</span> cnt &lt; <span class="number">50000000</span>:</span><br><span class="line">        cnt += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> pc &gt;= sc:  <span class="comment"># 프로그램 끝</span></span><br><span class="line">            <span class="keyword">break</span>  <span class="comment"># Terminates</span></span><br><span class="line">        <span class="keyword">if</span> code[pc] == <span class="string">'-'</span>:</span><br><span class="line">            memory[pm] = (memory[pm] - <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">            pc += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> code[pc] == <span class="string">'+'</span>:</span><br><span class="line">            memory[pm] = (memory[pm] + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">            pc += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> code[pc] == <span class="string">'&lt;'</span>:</span><br><span class="line">            pm = (pm - <span class="number">1</span>) % sm</span><br><span class="line">            pc += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> code[pc] == <span class="string">'&gt;'</span>:</span><br><span class="line">            pm = (pm + <span class="number">1</span>) % sm</span><br><span class="line">            pc += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> code[pc] == <span class="string">'['</span>:</span><br><span class="line">            <span class="keyword">if</span> memory[pm] == <span class="number">0</span>:</span><br><span class="line">                pc = jump[pc] + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                stack.append(pc)</span><br><span class="line">                pc += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> code[pc] == <span class="string">']'</span>:</span><br><span class="line">            <span class="keyword">if</span> memory[pm] != <span class="number">0</span>:</span><br><span class="line">                pc = jump[pc] + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                stack.pop()</span><br><span class="line">                pc += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> code[pc] == <span class="string">'.'</span>:</span><br><span class="line">            pc += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> code[pc] == <span class="string">','</span>:</span><br><span class="line">            memory[pm] = input_str[pi]</span><br><span class="line">            <span class="keyword">if</span> pi &lt; si:</span><br><span class="line">                pi += <span class="number">1</span></span><br><span class="line">            pc += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:  <span class="comment"># 5천만번동안 종료x</span></span><br><span class="line">        print(<span class="string">'Loops &#123;&#125; &#123;&#125;'</span>.format(stack[<span class="number">0</span>], jump[stack[<span class="number">0</span>]]))  <span class="comment"># loop</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(<span class="string">'Terminates'</span>)  <span class="comment"># Terminates</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 17281. ⚾</title>
    <url>/2020/02/17/BOJ_17281/</url>
    <content><![CDATA[<h3 id="17281"><a class="markdownIt-Anchor" href="#17281"></a> 17281. ⚾</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/17281" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>완전탐색문제로 파이썬으로 통과하기엔 시간제한이 엄청나게 빡빡하다.<br />주자 리스트 -&gt; 변수 3개로 따로 사용하여 시간을 줄였다.</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> permutations</span><br><span class="line"></span><br><span class="line">N = int(input())</span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> perm <span class="keyword">in</span> permutations(range(<span class="number">1</span>, <span class="number">9</span>)):</span><br><span class="line">    tasoon = list(perm)[:<span class="number">3</span>] + [<span class="number">0</span>] + list(perm)[<span class="number">3</span>:]</span><br><span class="line">    taza = <span class="number">0</span></span><br><span class="line">    score = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> inning <span class="keyword">in</span> my_map:  <span class="comment"># 0 ~ N-1 이닝</span></span><br><span class="line">        b1, b2, b3 = <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        out = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            hit = inning[tasoon[taza]]</span><br><span class="line">            <span class="keyword">if</span> hit == <span class="number">0</span>:</span><br><span class="line">                out += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> hit == <span class="number">1</span>:</span><br><span class="line">                score += b3</span><br><span class="line">                b1, b2, b3 = <span class="number">1</span>, b1, b2</span><br><span class="line">            <span class="keyword">elif</span> hit == <span class="number">2</span>:</span><br><span class="line">                score += b2 + b3</span><br><span class="line">                b1, b2, b3 = <span class="number">0</span>, <span class="number">1</span>, b1</span><br><span class="line">            <span class="keyword">elif</span> hit == <span class="number">3</span>:</span><br><span class="line">                score += b1 + b2 + b3</span><br><span class="line">                b1, b2, b3 = <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> hit == <span class="number">4</span>:</span><br><span class="line">                score += b1 + b2 + b3 + <span class="number">1</span></span><br><span class="line">                b1, b2, b3 = <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">			<span class="comment"># 다음 타자</span></span><br><span class="line">            taza = (taza + <span class="number">1</span>) % <span class="number">9</span></span><br><span class="line">            <span class="comment"># 3 아웃</span></span><br><span class="line">            <span class="keyword">if</span> out &gt;= <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">	<span class="comment"># 결과 갱신</span></span><br><span class="line">    <span class="keyword">if</span> score &gt; result:</span><br><span class="line">        result = score</span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 17136. 색종이 붙이기</title>
    <url>/2020/02/16/BOJ_17136/</url>
    <content><![CDATA[<h3 id="17136-색종이-붙이기"><a class="markdownIt-Anchor" href="#17136-색종이-붙이기"></a> 17136. 색종이 붙이기</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/17136" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>break, else, continue를 적절하게 사용하면 2중 이상의 반복문을 탈출할 수 있다.<br />직접 만들어 본 반례 생성 코드도 첨부해놓겠다.</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DFS</span><span class="params">(depth)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> my_min</span><br><span class="line">    <span class="keyword">if</span> depth &gt;= my_min:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1 찾기</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">            <span class="keyword">if</span> my_map[r][c]:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:  <span class="comment"># 모두 0</span></span><br><span class="line">        <span class="comment"># 결과 갱신</span></span><br><span class="line">        <span class="keyword">if</span> depth &lt; my_min:</span><br><span class="line">            my_min = depth</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 붙여야 할 좌표 찾음(r, c)</span></span><br><span class="line">    <span class="keyword">for</span> size <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">6</span>):</span><br><span class="line">        <span class="keyword">if</span> papers[size]:  <span class="comment"># 사이즈의 종이가 있으면</span></span><br><span class="line">            <span class="keyword">for</span> y <span class="keyword">in</span> range(size):</span><br><span class="line">                <span class="keyword">for</span> x <span class="keyword">in</span> range(size):</span><br><span class="line">                    <span class="comment"># 붙이지 못할 때 탈출</span></span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span>(r + y &lt; <span class="number">10</span> <span class="keyword">and</span> c + x &lt; <span class="number">10</span> <span class="keyword">and</span> my_map[r + y][c + x]):</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:  <span class="comment"># 한줄 탐색 성공</span></span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment"># 붙이기 성공</span></span><br><span class="line">                <span class="comment"># 붙이기</span></span><br><span class="line">                papers[size] -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">for</span> y <span class="keyword">in</span> range(size):</span><br><span class="line">                    <span class="keyword">for</span> x <span class="keyword">in</span> range(size):</span><br><span class="line">                        my_map[r + y][c + x] = <span class="number">0</span></span><br><span class="line">                DFS(depth + <span class="number">1</span>)</span><br><span class="line">                <span class="comment"># 떼기</span></span><br><span class="line">                <span class="keyword">for</span> y <span class="keyword">in</span> range(size):</span><br><span class="line">                    <span class="keyword">for</span> x <span class="keyword">in</span> range(size):</span><br><span class="line">                        my_map[r + y][c + x] = <span class="number">1</span>  <span class="comment"># 원상 복구</span></span><br><span class="line">                papers[size] += <span class="number">1</span>  <span class="comment"># 원상 복구</span></span><br><span class="line">        <span class="comment"># 다음 사이즈도 확인</span></span><br><span class="line"></span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line">papers = [<span class="number">0</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>]</span><br><span class="line">my_min = float(<span class="string">'inf'</span>)</span><br><span class="line">DFS(<span class="number">0</span>)</span><br><span class="line">print(<span class="number">-1</span> <span class="keyword">if</span> my_min == float(<span class="string">'inf'</span>) <span class="keyword">else</span> my_min)</span><br></pre></td></tr></table></figure>
<h4 id="반례-생성-코드"><a class="markdownIt-Anchor" href="#반례-생성-코드"></a> 반례 생성 코드</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 메인함수를 def main():의 안쪽에 넣고 변수들을 global 선언해주고, 결과값을 리턴해준다.</span></span><br><span class="line"><span class="comment"># (예시)</span></span><br><span class="line"><span class="comment">#def main(MAP):</span></span><br><span class="line"><span class="comment">#    global my_map, papers, my_min</span></span><br><span class="line"><span class="comment">#    my_map = deepcopy(MAP)</span></span><br><span class="line"><span class="comment">#    papers = [0, 5, 5, 5, 5, 5]</span></span><br><span class="line"><span class="comment">#    my_min = float('inf')</span></span><br><span class="line"><span class="comment">#    DFS(0)</span></span><br><span class="line"><span class="comment">#    # print(-1 if my_min == float('inf') else my_min)</span></span><br><span class="line"><span class="comment">#    return -1 if my_min == float('inf') else my_min</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> correct_code  <span class="comment"># 정답코드파일 (correct_code.py)</span></span><br><span class="line"><span class="keyword">import</span> my_code  <span class="comment"># 내코드파일 (my_code.py)</span></span><br><span class="line"></span><br><span class="line">MAP = [[<span class="number">0</span>] * <span class="number">10</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line"><span class="keyword">for</span> cnt <span class="keyword">in</span> range(<span class="number">10000000</span>):</span><br><span class="line">    c = cnt</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        data = format(c, <span class="string">'b'</span>)[<span class="number">-10</span>:]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> int(data):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(data)):</span><br><span class="line">            MAP[i][<span class="number">-1</span> - j] = int(data[<span class="number">-1</span> - j])</span><br><span class="line">        c //= <span class="number">2</span> ** <span class="number">10</span></span><br><span class="line"></span><br><span class="line">    num1 = correct_code.main(MAP)</span><br><span class="line">    num2 = my_code.main(MAP)</span><br><span class="line">    <span class="keyword">if</span> num1 != num2:</span><br><span class="line">        print(cnt, <span class="string">'불일치'</span>, num1, num2)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">            print(*my_map[i])</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(cnt, num1, num2)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 17135. 캐슬 디펜스</title>
    <url>/2020/02/16/BOJ_17135/</url>
    <content><![CDATA[<h3 id="17135-캐슬-디펜스"><a class="markdownIt-Anchor" href="#17135-캐슬-디펜스"></a> 17135. 캐슬 디펜스</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/17135" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>가까운 적을 찾는 것을 (좌, 상, 우) 순서를 가지는 BFS 탐색으로 해결함.</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> combinations</span><br><span class="line"><span class="keyword">from</span> copy <span class="keyword">import</span> deepcopy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 좌 상 우</span></span><br><span class="line">dx = [<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line">dy = [<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">N, M, D = map(int, input().split())</span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> archers <span class="keyword">in</span> combinations(range(M), <span class="number">3</span>):  <span class="comment"># 궁수 위치 조합</span></span><br><span class="line">    enemy = deepcopy(my_map)</span><br><span class="line">    sub_res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> round <span class="keyword">in</span> range(N):  <span class="comment"># N번의 라운드</span></span><br><span class="line">        dead = set()</span><br><span class="line">        <span class="keyword">for</span> archer <span class="keyword">in</span> archers:  <span class="comment"># 궁수마다 한발씩 쏘기</span></span><br><span class="line">            <span class="comment">### BFS 시작 ###</span></span><br><span class="line">            visited = [[<span class="literal">False</span>] * M <span class="keyword">for</span> _ <span class="keyword">in</span> range(N-round)]</span><br><span class="line">            Q = [(N<span class="number">-1</span>-round, archer, <span class="number">1</span>)]</span><br><span class="line">            <span class="keyword">while</span> Q:</span><br><span class="line">                y, x, cnt = Q.pop(<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">if</span> enemy[y][x]:</span><br><span class="line">                    dead.add((y, x))</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">                    ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">                    <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N-round <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; M <span class="keyword">and</span> <span class="keyword">not</span> visited[ny][nx]:</span><br><span class="line">                        <span class="keyword">if</span> cnt &lt; D:</span><br><span class="line">                            visited[ny][nx] = <span class="literal">True</span></span><br><span class="line">                            Q.append((ny, nx, cnt + <span class="number">1</span>))</span><br><span class="line">            <span class="comment">#### BFS 끝 ###</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 죽은 적 갱신 및 결과 반영</span></span><br><span class="line">        sub_res += len(dead)</span><br><span class="line">        <span class="keyword">for</span> y, x <span class="keyword">in</span> dead:</span><br><span class="line">            enemy[y][x] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 마지막줄 성 진입</span></span><br><span class="line">        enemy.pop()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 라운드 종료일 때</span></span><br><span class="line">    <span class="keyword">if</span> sub_res &gt; result:</span><br><span class="line">        result = sub_res</span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 17070. 파이프 옮기기 1</title>
    <url>/2020/02/16/BOJ_17070/</url>
    <content><![CDATA[<h3 id="17070-파이프-옮기기-1"><a class="markdownIt-Anchor" href="#17070-파이프-옮기기-1"></a> 17070. 파이프 옮기기 1</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/17070" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>DFS로 풀면 <strong>시간초과</strong> 남.</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">N = int(input())</span><br><span class="line">my_map = [[<span class="number">0</span>]* (N + <span class="number">1</span>)]  + [[<span class="number">0</span>] + list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">cnts = [[[<span class="number">0</span>] * <span class="number">3</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(N + <span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> range(N + <span class="number">1</span>)]</span><br><span class="line">cnts[<span class="number">1</span>][<span class="number">2</span>][<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + N):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + N):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> my_map[r][c]:</span><br><span class="line">            cnts[r][c][<span class="number">0</span>] += cnts[r][c<span class="number">-1</span>][<span class="number">0</span>] + cnts[r][c<span class="number">-1</span>][<span class="number">1</span>]  <span class="comment"># 가로</span></span><br><span class="line">            cnts[r][c][<span class="number">2</span>] += cnts[r<span class="number">-1</span>][c][<span class="number">2</span>] + cnts[r<span class="number">-1</span>][c][<span class="number">1</span>]  <span class="comment"># 세로</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> my_map[r<span class="number">-1</span>][c] <span class="keyword">and</span> <span class="keyword">not</span> my_map[r][c<span class="number">-1</span>]:</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">                    cnts[r][c][<span class="number">1</span>] += cnts[r<span class="number">-1</span>][c<span class="number">-1</span>][i]  <span class="comment"># 대각선</span></span><br><span class="line"></span><br><span class="line">print(sum(cnts[r][c]))</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>DP</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 16637. 괄호 추가하기</title>
    <url>/2020/02/16/BOJ_16637/</url>
    <content><![CDATA[<h3 id="16637-괄호-추가하기"><a class="markdownIt-Anchor" href="#16637-괄호-추가하기"></a> 16637. 괄호 추가하기</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/16637" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 부분 계산</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_calc</span><span class="params">(n, c, i)</span>:</span></span><br><span class="line">    calc = c.pop(i)</span><br><span class="line">    <span class="keyword">if</span> calc == <span class="string">'+'</span>:</span><br><span class="line">        n[i] += n.pop(i + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">elif</span> calc == <span class="string">'-'</span>:</span><br><span class="line">        n[i] -= n.pop(i + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">elif</span> calc == <span class="string">'*'</span>:</span><br><span class="line">        n[i] *= n.pop(i + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">N = int(input())</span><br><span class="line">nums = []  <span class="comment"># 숫자 리스트</span></span><br><span class="line">calcs = []  <span class="comment"># 기호 리스트</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 입력 받기</span></span><br><span class="line">cnt = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> input():</span><br><span class="line">    <span class="keyword">if</span> cnt % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        nums.append(int(i))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        calcs.append(i)</span><br><span class="line">    cnt += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DFS</span></span><br><span class="line">stack = [(nums, calcs, <span class="number">0</span>)]</span><br><span class="line">result = -float(<span class="string">'inf'</span>)</span><br><span class="line"><span class="keyword">while</span> stack:</span><br><span class="line">    n, c, cnt = stack.pop()</span><br><span class="line">    <span class="keyword">if</span> cnt &gt;= len(c):  <span class="comment"># 괄호 다 쳤을 때</span></span><br><span class="line">        <span class="keyword">while</span> c:  <span class="comment"># 남은 기호로 다 계산 후</span></span><br><span class="line">            my_calc(n, c, <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span> result &lt; n[<span class="number">0</span>]:  <span class="comment"># 결과 갱신</span></span><br><span class="line">            result = n[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 괄호 안침</span></span><br><span class="line">        stack.append((n, c, cnt + <span class="number">1</span>))</span><br><span class="line">        <span class="comment"># 괄호 침 (부분 계산 후 다음 기호로)</span></span><br><span class="line">        nn = n[:]</span><br><span class="line">        nc = c[:]</span><br><span class="line">        my_calc(nn, nc, cnt)</span><br><span class="line">        stack.append((nn, nc, cnt + <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 17837. 새로운 게임 2</title>
    <url>/2020/02/14/BOJ_17837/</url>
    <content><![CDATA[<h3 id="17837-새로운-게임-2"><a class="markdownIt-Anchor" href="#17837-새로운-게임-2"></a> 17837. 새로운 게임 2</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/17837" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>2시간동안 디버깅을해서 잡은게, 10001 -&gt; 1001 ( <strong>문제를 잘 읽자!</strong> )<br />디버그 코드랑 테스트 케이스 생성 코드까지 첨부해놓겠다.</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># import sys</span></span><br><span class="line"><span class="comment"># sys.stdin = open('새로운게임2.txt')</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.pos = <span class="literal">None</span></span><br><span class="line">        self.dir = <span class="literal">None</span></span><br><span class="line">        self.up = <span class="literal">None</span></span><br><span class="line">        self.down = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chess</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.top = [[<span class="literal">None</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]  <span class="comment"># 탑 뷰</span></span><br><span class="line">        self.pieces = [Node() <span class="keyword">for</span> _ <span class="keyword">in</span> range(K)]  <span class="comment"># 말 리스트</span></span><br><span class="line">        <span class="comment"># 말 놓기</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(K):</span><br><span class="line">            y, x, d = map(int, input().split())</span><br><span class="line">            self.pieces[i].pos = (y<span class="number">-1</span>, x<span class="number">-1</span>)</span><br><span class="line">            self.pieces[i].dir = d</span><br><span class="line">            self.top[y<span class="number">-1</span>][x<span class="number">-1</span>] = self.pieces[i]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> self.pieces:  <span class="comment"># 1번 말부터</span></span><br><span class="line">            <span class="comment"># 해당 말 옮김</span></span><br><span class="line">            y, x = p.pos</span><br><span class="line">            d = p.dir</span><br><span class="line">            ny, nx, nd = next_pos(y, x, d)</span><br><span class="line">            p.pos = (ny, nx)</span><br><span class="line">            p.dir = nd</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 말 아래쪽 연결 끊기</span></span><br><span class="line">            self.top[y][x] = p.down  <span class="comment"># 탑 뷰 갱신</span></span><br><span class="line">            <span class="keyword">if</span> p.down:</span><br><span class="line">                p.down.up = <span class="literal">None</span></span><br><span class="line">                p.down = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 옮긴 곳이 빨강이면 뒤집기</span></span><br><span class="line">            <span class="keyword">if</span> my_map[ny][nx] == <span class="number">1</span> <span class="keyword">and</span> (ny != y <span class="keyword">or</span> nx != x):  <span class="comment"># 빨강 &amp; 옮김</span></span><br><span class="line">                <span class="keyword">while</span> p.up:</span><br><span class="line">                    p.up, p.down = p.down, p.up</span><br><span class="line">                    p = p.down</span><br><span class="line">                p.up, p.down = p.down, p.up</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 옮긴곳에 연결</span></span><br><span class="line">            <span class="keyword">if</span> self.top[ny][nx]:</span><br><span class="line">                p.down = self.top[ny][nx]</span><br><span class="line">                p.down.up = p</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 나머지도 옮기기</span></span><br><span class="line">            <span class="keyword">while</span> p.up:</span><br><span class="line">                p.pos = (ny, nx)</span><br><span class="line">                p = p.up</span><br><span class="line">            p.pos = (ny, nx)</span><br><span class="line">            self.top[ny][nx] = p  <span class="comment"># 탑 갱신</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 옮긴 곳 몇층인지 확인</span></span><br><span class="line">            cnt = <span class="number">1</span></span><br><span class="line">            p = self.top[ny][nx]</span><br><span class="line">            <span class="keyword">while</span> p.down:</span><br><span class="line">                cnt += <span class="number">1</span></span><br><span class="line">                p = p.down</span><br><span class="line">            </span><br><span class="line">            <span class="comment">### 디버깅1 ###</span></span><br><span class="line">            <span class="comment"># self.debug1()</span></span><br><span class="line">            <span class="comment"># print()</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> cnt &gt;= <span class="number">4</span>:  <span class="comment"># 4층 이상이면 False</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="comment">### 디버깅2 ###</span></span><br><span class="line">        <span class="comment"># self.debug2()</span></span><br><span class="line">        <span class="comment"># print()</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">### 디버깅1 ###</span></span><br><span class="line">    <span class="comment"># def debug1(self):</span></span><br><span class="line">    <span class="comment">#     for y in range(N):</span></span><br><span class="line">    <span class="comment">#         for x in range(N):</span></span><br><span class="line">    <span class="comment">#             if self.top[y][x]:</span></span><br><span class="line">    <span class="comment">#                 print(self.top[y][x].dir, end='')</span></span><br><span class="line">    <span class="comment">#             else:</span></span><br><span class="line">    <span class="comment">#                 print(0, end='')</span></span><br><span class="line">    <span class="comment">#         print()</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#     for p in self.pieces:</span></span><br><span class="line">    <span class="comment">#         print(p.pos, p.dir)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">### 디버깅2 ###</span></span><br><span class="line">    <span class="comment"># def debug2(self):</span></span><br><span class="line">    <span class="comment">#     temp_map = [[[] for _ in range(N)] for _ in range(N)]</span></span><br><span class="line">    <span class="comment">#     cnt = 1</span></span><br><span class="line">    <span class="comment">#     for p in self.pieces:</span></span><br><span class="line">    <span class="comment">#         r, c = p.pos</span></span><br><span class="line">    <span class="comment">#         temp_map[r][c].append(cnt)</span></span><br><span class="line">    <span class="comment">#         cnt += 1</span></span><br><span class="line">    <span class="comment"># </span></span><br><span class="line">    <span class="comment">#     print(*temp_map, sep='\n')</span></span><br><span class="line">    <span class="comment">#     print()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">next_pos</span><span class="params">(y, x, d)</span>:</span></span><br><span class="line">    ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; N <span class="keyword">and</span> my_map[ny][nx] != <span class="number">2</span>:</span><br><span class="line">        <span class="comment"># 정면 흰&amp;빨</span></span><br><span class="line">        <span class="keyword">return</span> ny, nx, d</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 정면 파랑</span></span><br><span class="line">        ny, nx = y - dy[d], x - dx[d]</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; N <span class="keyword">and</span> my_map[ny][nx] != <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> ny, nx, change[d]</span><br><span class="line">        <span class="keyword">else</span>: <span class="comment"># 후면도 파랑</span></span><br><span class="line">            <span class="keyword">return</span> y, x, change[d]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 무 우 좌 상 하</span></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">dy = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line">change = [<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">N, K = map(int, input().split())</span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">chess = Chess()</span><br><span class="line">result = <span class="number">-1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1001</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> chess.move():</span><br><span class="line">        result = i</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>
<h4 id="테스트-케이스-생성-코드"><a class="markdownIt-Anchor" href="#테스트-케이스-생성-코드"></a> 테스트 케이스 생성 코드</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.stdout = open(<span class="string">'새로운게임2.txt'</span>,<span class="string">'w'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">sample = random.sample(range(<span class="number">36</span>), <span class="number">10</span>)</span><br><span class="line">my_map = [[<span class="number">-1</span>] * <span class="number">6</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">6</span>)]</span><br><span class="line">visited = [[<span class="literal">False</span>] * <span class="number">6</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">6</span>)]</span><br><span class="line"></span><br><span class="line">result2 = []</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> sample:</span><br><span class="line">    y = num // <span class="number">6</span></span><br><span class="line">    x = num % <span class="number">6</span></span><br><span class="line">    d = random.randrange(<span class="number">1</span>, <span class="number">5</span>)</span><br><span class="line">    visited[y][x] = <span class="literal">True</span></span><br><span class="line">    result2.append([y + <span class="number">1</span>, x + <span class="number">1</span>, d])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">6</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">6</span>):</span><br><span class="line">        <span class="keyword">if</span> visited[r][c]:</span><br><span class="line">            my_map[r][c] = random.choice([<span class="number">0</span>, <span class="number">1</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            my_map[r][c] = random.choice([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line"></span><br><span class="line">print(<span class="string">'6 10'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">6</span>):</span><br><span class="line">    print(*my_map[i])</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    print(*result2[j])</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 17822. 원판 돌리기</title>
    <url>/2020/02/14/BOJ_17822/</url>
    <content><![CDATA[<h3 id="17822-원판-돌리기"><a class="markdownIt-Anchor" href="#17822-원판-돌리기"></a> 17822. 원판 돌리기</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/17822" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>문제에서 1번부터 시작이라고 하면 웬만하면 0번째 리스트 버리고 1번부터 사용하자.<br />특히 인덱스를 가지고 연산을 해야 할 때 유용하다.</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line">N, M, T = map(int, input().split())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 원판을 deque으로 입력받음</span></span><br><span class="line">my_map = [deque() <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"><span class="keyword">for</span> Q <span class="keyword">in</span> my_map:</span><br><span class="line">    Q.extend(list(map(int, input().split())))</span><br><span class="line">my_map = [<span class="string">'dummy'</span>] + my_map</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(T):</span><br><span class="line">    x, d, k = map(int, input().split())</span><br><span class="line">    <span class="comment"># 입력값 최적화</span></span><br><span class="line">    <span class="keyword">if</span> d:</span><br><span class="line">        k = -k</span><br><span class="line">    k = k % M</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 원판 회전</span></span><br><span class="line">    x_lst = [t <span class="keyword">for</span> t <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + N) <span class="keyword">if</span> t % x == <span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> x_lst:</span><br><span class="line">        Q = my_map[x]  <span class="comment"># x의 배수번째 원판을</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(k):  <span class="comment"># 시계방향으로 k번 회전</span></span><br><span class="line">            Q.appendleft(Q.pop())</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 소멸 예약</span></span><br><span class="line">    change = <span class="literal">False</span></span><br><span class="line">    alive = [[<span class="literal">True</span>] * M <span class="keyword">for</span> _ <span class="keyword">in</span> range(N + <span class="number">1</span>)]</span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(M):</span><br><span class="line">            <span class="keyword">if</span> my_map[r][c]:</span><br><span class="line">                <span class="keyword">if</span> my_map[r][c] == my_map[r][c<span class="number">-1</span>]:</span><br><span class="line">                    alive[r][c] = alive[r][c<span class="number">-1</span>] = <span class="literal">False</span></span><br><span class="line">                <span class="keyword">if</span> r &lt; N <span class="keyword">and</span> my_map[r][c] == my_map[r+<span class="number">1</span>][c]:</span><br><span class="line">                    alive[r][c] = alive[r+<span class="number">1</span>][c] = <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 소멸</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">1</span>, N + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(M):</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> alive[r][c]:</span><br><span class="line">                my_map[r][c] = <span class="number">0</span></span><br><span class="line">                change = <span class="literal">True</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 평균 비교 후 증감</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> change:</span><br><span class="line">        cnt = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + N):</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(M):</span><br><span class="line">                <span class="keyword">if</span> my_map[r][c]:</span><br><span class="line">                    cnt += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> cnt:</span><br><span class="line">            average = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + N):</span><br><span class="line">                average += sum(my_map[r])</span><br><span class="line">            average /= cnt</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + N):</span><br><span class="line">                <span class="keyword">for</span> c <span class="keyword">in</span> range(M):</span><br><span class="line">                    <span class="keyword">if</span> my_map[r][c]:</span><br><span class="line">                        <span class="keyword">if</span> my_map[r][c] &gt; average:</span><br><span class="line">                            my_map[r][c] -= <span class="number">1</span></span><br><span class="line">                        <span class="keyword">elif</span> my_map[r][c] &lt; average:</span><br><span class="line">                            my_map[r][c] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 결과</span></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, N + <span class="number">1</span>):</span><br><span class="line">    result += sum(my_map[i])</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 17779. 게리맨더링 2</title>
    <url>/2020/02/14/BOJ_17779/</url>
    <content><![CDATA[<h3 id="17779-게리맨더링-2"><a class="markdownIt-Anchor" href="#17779-게리맨더링-2"></a> 17779. 게리맨더링 2</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/17779" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>r, c, x, y 헷갈리지 말고 경계설정에 유의하자.</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">N = int(input())</span><br><span class="line">my_map = [[<span class="number">0</span>] * (N + <span class="number">1</span>)] + [[<span class="number">0</span>] + list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">result = float(<span class="string">'inf'</span>)</span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">2</span>, N):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, N<span class="number">-1</span>):</span><br><span class="line">        <span class="keyword">for</span> d2 <span class="keyword">in</span> range(<span class="number">1</span>, N - y + <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> d1 <span class="keyword">in</span> range(<span class="number">1</span>, min(N-(x+d2) + <span class="number">1</span>, y)):</span><br><span class="line">                Zone = [<span class="number">0</span>] * <span class="number">5</span></span><br><span class="line">                <span class="comment"># 1번 구역</span></span><br><span class="line">                <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">1</span>, y):</span><br><span class="line">                    <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">1</span>, x + d1 + <span class="number">1</span>):</span><br><span class="line">                        <span class="keyword">if</span> r + c &lt; y + x:</span><br><span class="line">                            Zone[<span class="number">0</span>] += my_map[r][c]</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 2번 구역</span></span><br><span class="line">                <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">1</span>, y - d1 + d2 + <span class="number">1</span>):</span><br><span class="line">                    <span class="keyword">for</span> c <span class="keyword">in</span> range(x + d1 + <span class="number">1</span>, N + <span class="number">1</span>):</span><br><span class="line">                        <span class="keyword">if</span> r - c &lt; y - x - d1 * <span class="number">2</span>:</span><br><span class="line">                            Zone[<span class="number">1</span>] += my_map[r][c]</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 3번 구역</span></span><br><span class="line">                <span class="keyword">for</span> r <span class="keyword">in</span> range(y, N + <span class="number">1</span>):</span><br><span class="line">                    <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">1</span>, x + d2):</span><br><span class="line">                        <span class="keyword">if</span> r - c &gt; y - x:</span><br><span class="line">                            Zone[<span class="number">2</span>] += my_map[r][c]</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 4번 구역</span></span><br><span class="line">                <span class="keyword">for</span> r <span class="keyword">in</span> range(y - d1 + d2 + <span class="number">1</span>, N + <span class="number">1</span>):</span><br><span class="line">                    <span class="keyword">for</span> c <span class="keyword">in</span> range(x + d2, N + <span class="number">1</span>):</span><br><span class="line">                        <span class="keyword">if</span> r + c &gt; y + x + d2 * <span class="number">2</span>:</span><br><span class="line">                            Zone[<span class="number">3</span>] += my_map[r][c]</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 5번 구역</span></span><br><span class="line">                <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + N):</span><br><span class="line">                    <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + N):</span><br><span class="line">                        <span class="keyword">if</span> y + x &lt;= r + c &lt;= y + x + d2 * <span class="number">2</span>:</span><br><span class="line">                            <span class="keyword">if</span> y - x - d1 * <span class="number">2</span> &lt;= r - c &lt;= y - x:</span><br><span class="line">                                Zone[<span class="number">4</span>] += my_map[r][c]</span><br><span class="line"></span><br><span class="line">                sub_res = max(Zone) - min(Zone)</span><br><span class="line">                <span class="keyword">if</span> sub_res &lt; result:</span><br><span class="line">                    result = sub_res</span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 17142. 연구소3</title>
    <url>/2020/02/14/BOJ_17142/</url>
    <content><![CDATA[<h3 id="17142-연구소3"><a class="markdownIt-Anchor" href="#17142-연구소3"></a> 17142. 연구소3</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/17142" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>break, else, continue를 적절하게 사용하면 2중 이상의 반복문을 탈출할 수 있다.</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> combinations</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">N, M = map(int, input().split())</span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">virus_list = []</span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">if</span> my_map[r][c] == <span class="number">2</span>:</span><br><span class="line">            virus_list.append((r, c))</span><br><span class="line"></span><br><span class="line">min_cnt = float(<span class="string">'inf'</span>)  <span class="comment"># 결과값</span></span><br><span class="line"><span class="keyword">for</span> virus <span class="keyword">in</span> combinations(virus_list, M):</span><br><span class="line">    Q = deque()</span><br><span class="line">    visited = [[<span class="literal">False</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    max_cnt = <span class="number">0</span>  <span class="comment"># 케이스별 최대 거리</span></span><br><span class="line">    <span class="keyword">for</span> vir <span class="keyword">in</span> virus:</span><br><span class="line">        visited[vir[<span class="number">0</span>]][vir[<span class="number">1</span>]] = <span class="literal">True</span></span><br><span class="line">        Q.append((*vir, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> Q:</span><br><span class="line">        y, x, cnt = Q.popleft()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> my_map[y][x]:</span><br><span class="line">            max_cnt = cnt</span><br><span class="line">        <span class="keyword">if</span> max_cnt &gt;= min_cnt:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">            ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">            <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; N <span class="keyword">and</span> \</span><br><span class="line">                    <span class="keyword">not</span> visited[ny][nx] <span class="keyword">and</span> my_map[ny][nx] != <span class="number">1</span>:</span><br><span class="line">                visited[ny][nx] = <span class="literal">True</span></span><br><span class="line">                Q.append((ny, nx, cnt + <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">else</span>:  <span class="comment"># 끝까지 탐색</span></span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> my_map[r][c] <span class="keyword">and</span> <span class="keyword">not</span> visited[r][c]:  <span class="comment"># 방문하지 않은 0</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 빈공간 없음</span></span><br><span class="line">            min_cnt = max_cnt</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> min_cnt == float(<span class="string">'inf'</span>):</span><br><span class="line">    min_cnt = <span class="number">-1</span></span><br><span class="line">print(min_cnt)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 17140. 이차원 배열과 연산</title>
    <url>/2020/02/13/BOJ_17140/</url>
    <content><![CDATA[<h3 id="17140-이차원-배열과-연산"><a class="markdownIt-Anchor" href="#17140-이차원-배열과-연산"></a> 17140. 이차원 배열과 연산</h3>
<ul>
<li>
<p><a href="https://www.acmicpc.net/problem/17140" target="_blank" rel="noopener">문제링크</a></p>
<a id="more"></a>
</li>
<li>
<p>내 코드</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">r, c, k = map(int, input().split())</span><br><span class="line">r, c = r<span class="number">-1</span>, c<span class="number">-1</span></span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">3</span>)]</span><br><span class="line"></span><br><span class="line">cnt = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 종료</span></span><br><span class="line">    <span class="keyword">if</span> r &lt; len(my_map) <span class="keyword">and</span> c &lt; len(my_map[<span class="number">0</span>]) <span class="keyword">and</span> my_map[r][c] == k:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># 종료 (-1 출력)</span></span><br><span class="line">    <span class="keyword">if</span> cnt &gt;= <span class="number">100</span>:</span><br><span class="line">        cnt = <span class="number">-1</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        cnt += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> len(my_map) &gt;= len(my_map[<span class="number">0</span>]):</span><br><span class="line">        <span class="comment"># R 연산</span></span><br><span class="line">        temp_map = []</span><br><span class="line">        max_cnt = <span class="number">-1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(my_map)):  <span class="comment"># 숫자 카운트 및 정렬</span></span><br><span class="line">            my_dict = &#123;&#125;</span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> my_map[i]:</span><br><span class="line">                <span class="keyword">if</span> n:</span><br><span class="line">                    <span class="keyword">if</span> n <span class="keyword">not</span> <span class="keyword">in</span> my_dict:</span><br><span class="line">                        my_dict[n] = <span class="number">1</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        my_dict[n] += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> max_cnt &lt; len(my_dict):</span><br><span class="line">                max_cnt = len(my_dict)</span><br><span class="line">            sorted_data = sorted(sorted(my_dict.items(), key=<span class="keyword">lambda</span> x: x[<span class="number">0</span>]), key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>])</span><br><span class="line">            temp_map.append(sorted_data)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(temp_map)):  <span class="comment"># 빈 공간 0 채우기</span></span><br><span class="line">            temp = []</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(max_cnt):</span><br><span class="line">                <span class="keyword">if</span> j &lt; len(temp_map[i]):</span><br><span class="line">                    temp.extend(temp_map[i][j])</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    temp.append(<span class="number">0</span>)</span><br><span class="line">                    temp.append(<span class="number">0</span>)</span><br><span class="line">            temp_map[i] = temp</span><br><span class="line">        my_map = temp_map</span><br><span class="line"></span><br><span class="line">        <span class="comment"># print(*my_map, sep='\n')  # 중간결과 확인</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># C 연산</span></span><br><span class="line">        temp_map = []</span><br><span class="line">        max_cnt = <span class="number">-1</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(my_map[<span class="number">0</span>])):  <span class="comment"># 숫자 카운트 및 정렬</span></span><br><span class="line">            my_dict = &#123;&#125;</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(my_map)):</span><br><span class="line">                <span class="keyword">if</span> my_map[i][j]:</span><br><span class="line">                    <span class="keyword">if</span> my_map[i][j] <span class="keyword">not</span> <span class="keyword">in</span> my_dict:</span><br><span class="line">                        my_dict[my_map[i][j]] = <span class="number">1</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        my_dict[my_map[i][j]] += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> max_cnt &lt; len(my_dict):</span><br><span class="line">                max_cnt = len(my_dict)</span><br><span class="line">            sorted_data = sorted(sorted(my_dict.items(), key=<span class="keyword">lambda</span> x: x[<span class="number">0</span>]), key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>])</span><br><span class="line">            temp_map.append(sorted_data)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(temp_map)):  <span class="comment"># 빈 공간 0 채우기</span></span><br><span class="line">            temp = []</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(max_cnt):</span><br><span class="line">                <span class="keyword">if</span> j &lt; len(temp_map[i]):</span><br><span class="line">                    temp.extend(temp_map[i][j])</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    temp.append(<span class="number">0</span>)</span><br><span class="line">                    temp.append(<span class="number">0</span>)</span><br><span class="line">            temp_map[i] = temp</span><br><span class="line">        my_map = list(zip(*temp_map))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># print(*my_map, sep='\n')  # 중간결과 확인</span></span><br><span class="line"></span><br><span class="line">print(cnt)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 17143. 낚시왕</title>
    <url>/2020/02/13/BOJ_17143/</url>
    <content><![CDATA[<h3 id="17143-낚시왕"><a class="markdownIt-Anchor" href="#17143-낚시왕"></a> 17143. 낚시왕</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/17143" target="_blank" rel="noopener">문제링크</a><a id="more"></a>
</li>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>상어 이동의 계산과정에서 중복을 줄여서 실행시간을 대폭 줄일 수 있었다.</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># dummy, up, down, right, left</span></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>]</span><br><span class="line">dy = [<span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">change = [<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">R, C, M = map(int, input().split())</span><br><span class="line">my_map = [[<span class="literal">None</span>] * C <span class="keyword">for</span> _ <span class="keyword">in</span> range(R)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(M):</span><br><span class="line">    r, c, s, d, z = map(int, input().split())</span><br><span class="line">    <span class="comment"># 상어의 속도가 빠를 때, %를 이용하여 제자리로 돌아오는 중복을 방지</span></span><br><span class="line">    <span class="keyword">if</span> d == <span class="number">1</span> <span class="keyword">or</span> d == <span class="number">2</span>:</span><br><span class="line">        my_map[r - <span class="number">1</span>][c - <span class="number">1</span>] = (s % ((R - <span class="number">1</span>) * <span class="number">2</span>), d, z)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        my_map[r - <span class="number">1</span>][c - <span class="number">1</span>] = (s % ((C - <span class="number">1</span>) * <span class="number">2</span>), d, z)</span><br><span class="line"></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line">fish_king = <span class="number">-1</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 낚시왕 움직임</span></span><br><span class="line">    fish_king += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> fish_king == C:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 상어 잡기</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(R):</span><br><span class="line">        <span class="keyword">if</span> my_map[r][fish_king]:</span><br><span class="line">            result += my_map[r][fish_king][<span class="number">2</span>]</span><br><span class="line">            my_map[r][fish_king] = <span class="literal">None</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 상어 이동</span></span><br><span class="line">    temp_map = [[<span class="literal">None</span>] * C <span class="keyword">for</span> _ <span class="keyword">in</span> range(R)]</span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(R):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(C):</span><br><span class="line">            <span class="keyword">if</span> my_map[r][c]:  <span class="comment"># 상어가 있다면</span></span><br><span class="line">                s, d, z = my_map[r][c]</span><br><span class="line">                y, x = r, c</span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 상어가 도착할 위치 계산</span></span><br><span class="line">                <span class="keyword">if</span> d <span class="keyword">in</span> (<span class="number">1</span>, <span class="number">2</span>):  <span class="comment"># 상 하</span></span><br><span class="line">                    y += dy[d] * s</span><br><span class="line">                    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">2</span>):  <span class="comment"># 벽에서 반사 (최대 2번)</span></span><br><span class="line">                        <span class="keyword">if</span> y &lt; <span class="number">0</span>:</span><br><span class="line">                            y = -y</span><br><span class="line">                            d = change[d]  <span class="comment"># 방향 전환</span></span><br><span class="line">                        <span class="keyword">elif</span> y &gt;= R:</span><br><span class="line">                            y = (R<span class="number">-1</span>) * <span class="number">2</span> - y</span><br><span class="line">                            d = change[d]</span><br><span class="line">                <span class="keyword">else</span>:  <span class="comment"># 좌 우</span></span><br><span class="line">                    x += dx[d] * s</span><br><span class="line">                    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">2</span>): <span class="comment"># 벽에서 반사 (최대 2번)</span></span><br><span class="line">                        <span class="keyword">if</span> x &lt; <span class="number">0</span>:</span><br><span class="line">                            x = -x</span><br><span class="line">                            d = change[d]</span><br><span class="line">                        <span class="keyword">elif</span> x &gt;= C:</span><br><span class="line">                            x = (C<span class="number">-1</span>) * <span class="number">2</span> - x</span><br><span class="line">                            d = change[d]</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> temp_map[y][x]:  <span class="comment"># 중복 아니면</span></span><br><span class="line">                    temp_map[y][x] = (s, d, z)</span><br><span class="line">                <span class="keyword">else</span>:  <span class="comment"># 중복이면</span></span><br><span class="line">                    <span class="keyword">if</span> temp_map[y][x][<span class="number">2</span>] &lt; z:  <span class="comment"># 현재 상어가 더 크면 갱신</span></span><br><span class="line">                        temp_map[y][x] = (s, d, z)</span><br><span class="line">    my_map = temp_map</span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 17144. 미세먼지 안녕!</title>
    <url>/2020/02/13/BOJ_17144/</url>
    <content><![CDATA[<h3 id="17144-미세먼지-안녕"><a class="markdownIt-Anchor" href="#17144-미세먼지-안녕"></a> 17144. 미세먼지 안녕!</h3>
<ul>
<li>
<p><a href="https://www.acmicpc.net/problem/17144" target="_blank" rel="noopener">문제링크</a></p>
<a id="more"></a>
</li>
<li>
<p>내 코드</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 우 하 좌 상 (시계방향)</span></span><br><span class="line">dx = [<span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>]</span><br><span class="line">dy = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 입력</span></span><br><span class="line">R, C, T = map(int, input().split())</span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(R)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 공기청정기 찾기</span></span><br><span class="line">c_y1 = <span class="literal">None</span>  <span class="comment"># 공기청정기 윗단 y축 좌표</span></span><br><span class="line">c_y2 = <span class="literal">None</span>  <span class="comment"># 공기청정기 아랫단 y축 좌표</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(R):</span><br><span class="line">    <span class="keyword">if</span> my_map[r][<span class="number">0</span>] == <span class="number">-1</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> c_y1:</span><br><span class="line">            c_y1 = r</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            c_y2 = r</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(T):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 확산</span></span><br><span class="line">    temp_map = [[<span class="number">0</span>] * C <span class="keyword">for</span> _ <span class="keyword">in</span> range(R)]</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(R):</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> range(C):</span><br><span class="line">            <span class="keyword">if</span> my_map[y][x] == <span class="number">-1</span>:  <span class="comment"># 공기청정기</span></span><br><span class="line">                temp_map[y][x] = <span class="number">-1</span></span><br><span class="line">            <span class="keyword">elif</span> my_map[y][x] &gt; <span class="number">0</span>:  <span class="comment"># 먼지있으면</span></span><br><span class="line">                temp_map[y][x] += my_map[y][x]</span><br><span class="line">                diff = my_map[y][x] // <span class="number">5</span></span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):  <span class="comment"># 4방향</span></span><br><span class="line">                    ny, nx = y + dy[i], x + dx[i]</span><br><span class="line">                    <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; R <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; C:  <span class="comment"># 범위 안</span></span><br><span class="line">                        <span class="keyword">if</span> nx != <span class="number">0</span> <span class="keyword">or</span> (ny != c_y1 <span class="keyword">and</span> ny != c_y2):  <span class="comment"># 공기청정기랑 겹치지 않음</span></span><br><span class="line">                            <span class="comment"># 확산</span></span><br><span class="line">                            temp_map[ny][nx] += diff</span><br><span class="line">                            temp_map[y][x] -= diff</span><br><span class="line">    my_map = temp_map</span><br><span class="line">    <span class="comment"># print(*my_map, sep='\n')  # 확산 결과</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">### 공기청정기 작동</span></span><br><span class="line">    <span class="comment"># 공기청정기 윗단</span></span><br><span class="line">    y, x = c_y1, <span class="number">0</span></span><br><span class="line">    d = <span class="number">0</span>  <span class="comment"># 오른쪽</span></span><br><span class="line">    temp = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 전진</span></span><br><span class="line">        y += dy[d]</span><br><span class="line">        x += dx[d]</span><br><span class="line">        <span class="keyword">if</span> y == c_y1 <span class="keyword">and</span> x == <span class="number">0</span>:  <span class="comment"># 공기청정기</span></span><br><span class="line">            <span class="keyword">break</span>  <span class="comment"># 끝</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="number">0</span> &lt;= y &lt; R <span class="keyword">and</span> <span class="number">0</span> &lt;= x &lt; C:  <span class="comment"># 범위안</span></span><br><span class="line">            <span class="comment"># 한 칸씩 밀기</span></span><br><span class="line">            my_map[y][x], temp = temp, my_map[y][x]</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 범위를 밖</span></span><br><span class="line">            <span class="comment"># 한칸 후진</span></span><br><span class="line">            y -= dy[d]</span><br><span class="line">            x -= dx[d]</span><br><span class="line">            <span class="comment"># 방향 전환</span></span><br><span class="line">            d = (d - <span class="number">1</span>) % <span class="number">4</span>  <span class="comment"># 반시계방향</span></span><br><span class="line">	</span><br><span class="line">    <span class="comment"># 공기청정기 아랫단</span></span><br><span class="line">    y, x = c_y2, <span class="number">0</span></span><br><span class="line">    d = <span class="number">0</span>  <span class="comment"># 오른쪽</span></span><br><span class="line">    temp = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 전진</span></span><br><span class="line">        y += dy[d]</span><br><span class="line">        x += dx[d]</span><br><span class="line">        <span class="keyword">if</span> y == c_y2 <span class="keyword">and</span> x == <span class="number">0</span>:  <span class="comment"># 공기청정기</span></span><br><span class="line">            <span class="keyword">break</span>  <span class="comment"># 끝</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="number">0</span> &lt;= y &lt; R <span class="keyword">and</span> <span class="number">0</span> &lt;= x &lt; C:  <span class="comment"># 범위안</span></span><br><span class="line">            <span class="comment"># 한 칸씩 밀기</span></span><br><span class="line">            my_map[y][x], temp = temp, my_map[y][x]</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 범위를 밖</span></span><br><span class="line">            <span class="comment"># 한칸 후진</span></span><br><span class="line">            y -= dy[d]</span><br><span class="line">            x -= dx[d]</span><br><span class="line">            <span class="comment"># 방향 전환</span></span><br><span class="line">            d = (d + <span class="number">1</span>) % <span class="number">4</span>  <span class="comment"># 시계방향</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 총 먼지량 출력</span></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(R):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(C):</span><br><span class="line">        <span class="keyword">if</span> my_map[r][c] &gt; <span class="number">0</span>:</span><br><span class="line">            result += my_map[r][c]</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>[SSAFY] 20200213</title>
    <url>/2020/02/13/Algorithm_0213/</url>
    <content><![CDATA[<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#1226-%EB%AF%B8%EB%A1%9C1-d4">1226. 미로1 <code>D4</code></a></li>
<li><a href="#1211-ladder2-d4">1211. Ladder2 <code>D4</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="1226-미로1-d4"><a class="markdownIt-Anchor" href="#1226-미로1-d4"></a> 1226. 미로1 <code>D4</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV14vXUqAGMCFAYD" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DFS</span><span class="params">(y, x)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> result</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> my_map[y][x] == <span class="number">3</span>:  <span class="comment"># 도착</span></span><br><span class="line">        result = <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> result:  <span class="comment"># 도착 아니면</span></span><br><span class="line">        <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">            ny, nx = y + dy[d], x + dx[d]</span><br><span class="line">            <span class="keyword">if</span> my_map[ny][nx] <span class="keyword">in</span> (<span class="number">0</span>, <span class="number">3</span>) <span class="keyword">and</span> <span class="keyword">not</span> visited[ny][nx]:</span><br><span class="line">                visited[ny][nx] = <span class="literal">True</span></span><br><span class="line">                DFS(ny, nx)</span><br><span class="line">                visited[ny][nx] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">T = <span class="number">10</span></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    input()  <span class="comment"># 버림</span></span><br><span class="line">    my_map = [list(map(int, input())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">16</span>)]</span><br><span class="line">    visited = [[<span class="literal">False</span>] * <span class="number">16</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">16</span>)]</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">15</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">15</span>):</span><br><span class="line">            <span class="keyword">if</span> my_map[r][c] == <span class="number">2</span>:</span><br><span class="line">                DFS(r, c)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="1211-ladder2-d4"><a class="markdownIt-Anchor" href="#1211-ladder2-d4"></a> 1211. Ladder2 <code>D4</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV14BgD6AEECFAYh" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    test_case = int(input())</span><br><span class="line">    my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">100</span>)]</span><br><span class="line"></span><br><span class="line">    pillar = []  <span class="comment"># 기둥 x 좌표</span></span><br><span class="line">    dist = []  <span class="comment"># 기둥 사이 간격</span></span><br><span class="line">    temp = <span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">        <span class="keyword">if</span> my_map[<span class="number">99</span>][c]:</span><br><span class="line">            pillar.append(c)</span><br><span class="line">            <span class="keyword">if</span> temp &gt;= <span class="number">0</span>:</span><br><span class="line">                dist.append(c - temp)</span><br><span class="line">            temp = c</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 계산</span></span><br><span class="line">    cnt = [<span class="number">0</span>] * len(pillar)</span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">98</span>, <span class="number">0</span>, <span class="number">-1</span>):  <span class="comment"># 98~1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(dist)):</span><br><span class="line">            <span class="keyword">if</span> my_map[r][pillar[i] + <span class="number">1</span>]:</span><br><span class="line">                cnt[i], cnt[i+<span class="number">1</span>] = cnt[i + <span class="number">1</span>] + dist[i], cnt[i] + dist[i]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 결과</span></span><br><span class="line">    temp = float(<span class="string">'inf'</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(cnt)):</span><br><span class="line">        <span class="keyword">if</span> cnt[i] &lt;= temp:</span><br><span class="line">            temp = cnt[i]</span><br><span class="line">            result = pillar[i]</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>SSAFY</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 16236. 아기 상어</title>
    <url>/2020/02/12/BOJ_16236/</url>
    <content><![CDATA[<h3 id="16236-아기-상어"><a class="markdownIt-Anchor" href="#16236-아기-상어"></a> 16236. 아기 상어</h3>
<ul>
<li>
<p><a href="https://www.acmicpc.net/problem/16236" target="_blank" rel="noopener">문제링크</a></p>
<a id="more"></a>
</li>
<li>
<p>내 코드</p>
</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><img src="/2020/02/12/BOJ_16236/16236_1.jpg" class="" title="This is an example image"><p><em>2차원 좌표에서 깊이가 2인 BFS의 탐색 순서</em><br />먹을 수 있는 물고기가 여러 마리일 때 BFS 탐색 순서를 ‘상좌우하’ 순으로 해결해보려 했지만, 5와 6의 위치를 보아 잘못된 접근이라는 것을 알 수 있었다.</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line">N = int(input())</span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 상 좌 우 하</span></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">shark = <span class="literal">None</span></span><br><span class="line"><span class="comment"># 상어 찾기</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">if</span> my_map[r][c] == <span class="number">9</span>:</span><br><span class="line">            shark = (r, c)</span><br><span class="line">            my_map[r][c] = <span class="number">0</span></span><br><span class="line">size = <span class="number">2</span>  <span class="comment"># 상어 사이즈</span></span><br><span class="line">EXP = <span class="number">0</span></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 먹잇감 찾아가기(BFS)</span></span><br><span class="line">    Q = deque()</span><br><span class="line">    visited = [[<span class="literal">False</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    visited[shark[<span class="number">0</span>]][shark[<span class="number">1</span>]] = <span class="literal">True</span></span><br><span class="line">    Q.append((*shark, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">    fish = (N, N)</span><br><span class="line">    min_cnt = float(<span class="string">'inf'</span>)</span><br><span class="line">    <span class="keyword">while</span> Q:</span><br><span class="line">        y, x, cnt = Q.popleft()</span><br><span class="line">        <span class="comment"># 최소 거리보다 커지면 탐색 종료</span></span><br><span class="line">        <span class="keyword">if</span> cnt &gt; min_cnt:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 우선순위에 따른 먹잇감 예약</span></span><br><span class="line">        <span class="keyword">if</span> my_map[y][x] <span class="keyword">and</span> my_map[y][x] &lt; size:</span><br><span class="line">            <span class="keyword">if</span> y &lt; fish[<span class="number">0</span>] <span class="keyword">or</span> (y == fish[<span class="number">0</span>] <span class="keyword">and</span> x &lt; fish[<span class="number">1</span>]):</span><br><span class="line">                fish = (y, x)</span><br><span class="line">                min_cnt = cnt</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 다음 탐색</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">            ny, nx = y + dy[i], x + dx[i]</span><br><span class="line">            <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; N <span class="keyword">and</span> \</span><br><span class="line">                    <span class="keyword">not</span> visited[ny][nx] <span class="keyword">and</span> my_map[ny][nx] &lt;= size:</span><br><span class="line">                visited[ny][nx] = <span class="literal">True</span></span><br><span class="line">                Q.append((ny, nx, cnt + <span class="number">1</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 먹잇감으로 위치 이동</span></span><br><span class="line">    <span class="keyword">if</span> fish == (N, N):  <span class="comment"># 물고기 못찾음</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        my_map[fish[<span class="number">0</span>]][fish[<span class="number">1</span>]] = <span class="number">0</span>  <span class="comment"># 물고기 없애기</span></span><br><span class="line">        shark = (fish[<span class="number">0</span>], fish[<span class="number">1</span>])  <span class="comment"># 상어 좌표 갱신</span></span><br><span class="line">        EXP += <span class="number">1</span>  <span class="comment"># 경험치 상승</span></span><br><span class="line">        <span class="keyword">if</span> EXP == size:  <span class="comment"># 사이즈 업</span></span><br><span class="line">            size += <span class="number">1</span></span><br><span class="line">            EXP = <span class="number">0</span></span><br><span class="line">        result += min_cnt  <span class="comment"># 이동 거리</span></span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 16235. 나무 재테크</title>
    <url>/2020/02/12/BOJ_16235/</url>
    <content><![CDATA[<h3 id="16235-나무-재테크"><a class="markdownIt-Anchor" href="#16235-나무-재테크"></a> 16235. 나무 재테크</h3>
<ul>
<li>
<p><a href="https://www.acmicpc.net/problem/16235" target="_blank" rel="noopener">문제링크</a></p>
<a id="more"></a>
</li>
<li>
<p>내 코드</p>
</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>deque으로 구현했다가 list로 바꾸면서 메모리와 속도가 약 20% 상승함.<br />배열의 크기가 작을 땐 deque이 불리함.</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_tree</span><span class="params">(data)</span>:</span></span><br><span class="line">    y, x = data</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">        ny, nx = y + dy[i], x + dx[i]</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; N:</span><br><span class="line">            tree[ny][nx].append(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 입력</span></span><br><span class="line">N, M, K = map(int, input().split())</span><br><span class="line">A = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">input_list = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(M)]</span><br><span class="line">input_list.sort(key=<span class="keyword">lambda</span> X: X[<span class="number">2</span>])  <span class="comment"># 나이 적은 나무 부터</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># food - 영양분</span></span><br><span class="line">food = [[<span class="number">5</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># tree - 나무</span></span><br><span class="line">tree = [[[] <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)] <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"><span class="keyword">for</span> y, x, z <span class="keyword">in</span> input_list:</span><br><span class="line">    tree[y<span class="number">-1</span>][x<span class="number">-1</span>].append(z)</span><br><span class="line"></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 시뮬레이션</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(K):</span><br><span class="line">    <span class="comment"># 봄</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            tree_cnt = len(tree[r][c])</span><br><span class="line">            alive = []</span><br><span class="line">            <span class="comment"># 양분 먹이기</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(tree_cnt):</span><br><span class="line">                <span class="keyword">if</span> food[r][c] &gt;= tree[r][c][<span class="number">-1</span>-i]:</span><br><span class="line">                    food[r][c] -= tree[r][c][<span class="number">-1</span>-i]  <span class="comment"># 양분 먹음</span></span><br><span class="line">                    alive.append(tree[r][c][<span class="number">-1</span>-i] + <span class="number">1</span>)  <span class="comment"># 나이 먹음</span></span><br><span class="line">                <span class="keyword">else</span>:  <span class="comment"># 양분 없으면</span></span><br><span class="line">                    tree_cnt = i  <span class="comment"># 살아있는 나무 수</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 죽은애들은 양분으로</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(tree[r][c]) - tree_cnt):</span><br><span class="line">                food[r][c] += tree[r][c][i] // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 살아있는 나무만 저장</span></span><br><span class="line">            tree[r][c] = alive[::<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 여름 - 봄에서 처리함</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 가을</span></span><br><span class="line">    new_tree_list = []  <span class="comment"># 번식할 나무 찾기</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">for</span> t <span class="keyword">in</span> tree[r][c]:</span><br><span class="line">                <span class="keyword">if</span> t % <span class="number">5</span> == <span class="number">0</span>:</span><br><span class="line">                    new_tree_list.append((r, c))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> nt <span class="keyword">in</span> new_tree_list:</span><br><span class="line">        new_tree(nt)  <span class="comment"># 번식</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 겨울</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            food[r][c] += A[r][c]  <span class="comment"># 양분 추가</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 결과</span></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">        result += len(tree[r][c])</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SSAFY] 20200212</title>
    <url>/2020/02/12/Algorithm_0212/</url>
    <content><![CDATA[<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#1961-%EC%88%AB%EC%9E%90-%EB%B0%B0%EC%97%B4-%ED%9A%8C%EC%A0%84-d2">1961. 숫자 배열 회전 <code>D2</code></a></li>
<li><a href="#1974-%EC%8A%A4%EB%8F%84%EC%BF%A0-%EA%B2%80%EC%A6%9D-d2">1974. 스도쿠 검증 <code>D2</code></a></li>
<li><a href="#2805-%EB%86%8D%EC%9E%91%EB%AC%BC-%EC%88%98%ED%99%95%ED%95%98%EA%B8%B0-d3">2805. 농작물 수확하기 <code>D3</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="1961-숫자-배열-회전-d2"><a class="markdownIt-Anchor" href="#1961-숫자-배열-회전-d2"></a> 1961. 숫자 배열 회전 <code>D2</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5Pq-OKAVYDFAUq" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N = int(input())</span><br><span class="line">    my_map = [input().split() <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    rot = []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 90도</span></span><br><span class="line">    temp_lst = []</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">        temp = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">            temp += my_map[<span class="number">-1</span>-r][c]</span><br><span class="line">        temp_lst.append(temp)</span><br><span class="line">    rot.append(temp_lst)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 180도</span></span><br><span class="line">    temp_lst = []</span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        temp = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            temp += my_map[<span class="number">-1</span>-r][<span class="number">-1</span>-c]</span><br><span class="line">        temp_lst.append(temp)</span><br><span class="line">    rot.append(temp_lst)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 270도</span></span><br><span class="line">    temp_lst = []</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">        temp = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">            temp += my_map[r][<span class="number">-1</span>-c]</span><br><span class="line">        temp_lst.append(temp)</span><br><span class="line">    rot.append(temp_lst)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 출력</span></span><br><span class="line">    print(<span class="string">'#&#123;&#125;'</span>.format(test_case))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        print(rot[<span class="number">0</span>][i], rot[<span class="number">1</span>][i], rot[<span class="number">2</span>][i])</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="1974-스도쿠-검증-d2"><a class="markdownIt-Anchor" href="#1974-스도쿠-검증-d2"></a> 1974. 스도쿠 검증 <code>D2</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5Psz16AYEDFAUq" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">9</span>)]</span><br><span class="line">    nums = set((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>))</span><br><span class="line"></span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line">    <span class="comment"># 가로 탐색</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">        <span class="keyword">if</span> set(my_map[r]) != nums:</span><br><span class="line">            result = <span class="number">0</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:  <span class="comment"># 세로 탐색</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">9</span>):  </span><br><span class="line">            temp = set()</span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">                temp.add(my_map[r][c])</span><br><span class="line">            <span class="keyword">if</span> temp != nums:</span><br><span class="line">                result = <span class="number">0</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 사각형 탐색</span></span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">9</span>, <span class="number">3</span>):</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">9</span>, <span class="number">3</span>):</span><br><span class="line">                        temp = set()</span><br><span class="line">                        <span class="keyword">for</span> dr <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">                            <span class="keyword">for</span> dc <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">                                temp.add(my_map[r + dr][c + dc])</span><br><span class="line">                        <span class="keyword">if</span> temp != nums:</span><br><span class="line">                            result = <span class="number">0</span></span><br><span class="line">                            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="2805-농작물-수확하기-d3"><a class="markdownIt-Anchor" href="#2805-농작물-수확하기-d3"></a> 2805. 농작물 수확하기 <code>D3</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV7GLXqKAWYDFAXB" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input())</span><br><span class="line">    M = [list(map(int, input())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            h = N//<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> abs(h-r) + abs(h-c) &lt;= h:</span><br><span class="line">                result += M[r][c]</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>SSAFY</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 2304. 창고 다각형</title>
    <url>/2020/02/11/BOJ_2304/</url>
    <content><![CDATA[<h3 id="2304-창고-다각형"><a class="markdownIt-Anchor" href="#2304-창고-다각형"></a> 2304. 창고 다각형</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/2304" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">N = int(input())</span><br><span class="line">min_L = <span class="number">1000</span></span><br><span class="line">max_L = <span class="number">1</span></span><br><span class="line">max_H_idx = <span class="number">-1</span></span><br><span class="line">max_H_val = <span class="number">-1</span></span><br><span class="line">input_list = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 입력 정보 확인</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(N):</span><br><span class="line">    L, H = map(int, input().split())</span><br><span class="line">    input_list.append((L, H))</span><br><span class="line">    <span class="keyword">if</span> L &lt; min_L:</span><br><span class="line">        min_L = L</span><br><span class="line">    <span class="keyword">if</span> L &gt; max_L:</span><br><span class="line">        max_L = L</span><br><span class="line">    <span class="keyword">if</span> H &gt; max_H_val:</span><br><span class="line">        max_H_val = H</span><br><span class="line">        max_H_idx = L</span><br><span class="line"></span><br><span class="line"><span class="comment"># 기둥 높이 리스트</span></span><br><span class="line">my_list = [<span class="number">0</span>] * (max_L + <span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> L, H <span class="keyword">in</span> input_list:</span><br><span class="line">    my_list[L] = H</span><br><span class="line"></span><br><span class="line"><span class="comment"># 왼쪽부터 top까지 탐색</span></span><br><span class="line">temp = <span class="number">0</span></span><br><span class="line">my_sum = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(max_H_idx + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span> my_list[i] &gt; temp:</span><br><span class="line">        temp = my_list[i]</span><br><span class="line">    my_sum += temp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 오른쪽부터 top까지 탐색</span></span><br><span class="line">temp = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(max_L, max_H_idx, <span class="number">-1</span>):</span><br><span class="line">    <span class="keyword">if</span> my_list[j] &gt; temp:</span><br><span class="line">        temp = my_list[j]</span><br><span class="line">    my_sum += temp</span><br><span class="line"></span><br><span class="line">print(my_sum)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 1938. 통나무 옮기기</title>
    <url>/2020/02/11/BOJ_1938/</url>
    <content><![CDATA[<h3 id="1938-통나무-옮기기"><a class="markdownIt-Anchor" href="#1938-통나무-옮기기"></a> 1938. 통나무 옮기기</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/1938" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<div class="note warning">
            <h4 id="check-point"><a class="markdownIt-Anchor" href="#check-point"></a> Check Point</h4><p>최소 길이 - <strong>BFS</strong><br />visited - 3차원, <strong>탐색 전에 먼저 찍고 들어가야 중복 막을 수 있음!</strong><br />접근 방법 -  중심 축 좌표를 이동, 막대 방향 주의</p>
          </div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">zero_around</span><span class="params">(y, x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="number">1</span> &lt;= y &lt; N - <span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span> &lt;= x &lt; N - <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> (my_map[y - <span class="number">1</span>][x - <span class="number">1</span>] + my_map[y - <span class="number">1</span>][x] + my_map[y - <span class="number">1</span>][x + <span class="number">1</span>] +</span><br><span class="line">             my_map[y][x - <span class="number">1</span>] + my_map[y][x] + my_map[y][x + <span class="number">1</span>] +</span><br><span class="line">             my_map[y + <span class="number">1</span>][x - <span class="number">1</span>] + my_map[y + <span class="number">1</span>][x] + my_map[y + <span class="number">1</span>][x + <span class="number">1</span>]):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_int</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> data.isdigit():</span><br><span class="line">        <span class="keyword">return</span> int(data)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">N = int(input())</span><br><span class="line">my_map = [list(map(my_int, input())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 통나무와 도착 정보 찾고 0으로 초기화</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">if</span> my_map[r][c] == <span class="string">'B'</span>:  <span class="comment"># 통나무</span></span><br><span class="line">            <span class="comment"># 세로 중심</span></span><br><span class="line">            <span class="keyword">if</span> <span class="number">1</span> &lt;= r &lt; N - <span class="number">1</span> <span class="keyword">and</span> my_map[r - <span class="number">1</span>][c] == <span class="string">'B'</span> <span class="keyword">and</span> my_map[r + <span class="number">1</span>][c] == <span class="string">'B'</span>:</span><br><span class="line">                Tong = (r, c, <span class="literal">True</span>)</span><br><span class="line">                my_map[r - <span class="number">1</span>][c] = my_map[r][c] = my_map[r + <span class="number">1</span>][c] = <span class="number">0</span></span><br><span class="line">            <span class="comment"># 가로 중심</span></span><br><span class="line">            <span class="keyword">if</span> <span class="number">1</span> &lt;= c &lt; N - <span class="number">1</span> <span class="keyword">and</span> my_map[r][c - <span class="number">1</span>] == <span class="string">'B'</span> <span class="keyword">and</span> my_map[r][c - <span class="number">1</span>] == <span class="string">'B'</span>:</span><br><span class="line">                Tong = (r, c, <span class="literal">False</span>)</span><br><span class="line">                my_map[r][c - <span class="number">1</span>] = my_map[r][c] = my_map[r][c + <span class="number">1</span>] = <span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> my_map[r][c] == <span class="string">'E'</span>:  <span class="comment"># 도착지점</span></span><br><span class="line">            <span class="comment"># 세로 중심</span></span><br><span class="line">            <span class="keyword">if</span> <span class="number">1</span> &lt;= r &lt; N - <span class="number">1</span> <span class="keyword">and</span> my_map[r - <span class="number">1</span>][c] == <span class="string">'E'</span> <span class="keyword">and</span> my_map[r + <span class="number">1</span>][c] == <span class="string">'E'</span>:</span><br><span class="line">                Goal = (r, c, <span class="literal">True</span>)</span><br><span class="line">                my_map[r - <span class="number">1</span>][c] = my_map[r][c] = my_map[r + <span class="number">1</span>][c] = <span class="number">0</span></span><br><span class="line">            <span class="comment"># 가로 중심</span></span><br><span class="line">            <span class="keyword">if</span> <span class="number">1</span> &lt;= c &lt; N - <span class="number">1</span> <span class="keyword">and</span> my_map[r][c - <span class="number">1</span>] == <span class="string">'E'</span> <span class="keyword">and</span> my_map[r][c - <span class="number">1</span>] == <span class="string">'E'</span>:</span><br><span class="line">                Goal = (r, c, <span class="literal">False</span>)</span><br><span class="line">                my_map[r][c - <span class="number">1</span>] = my_map[r][c] = my_map[r][c + <span class="number">1</span>] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">visited = [[[<span class="literal">False</span>] * <span class="number">2</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)] <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">visited[Tong[<span class="number">0</span>]][Tong[<span class="number">1</span>]][Tong[<span class="number">2</span>]] = <span class="literal">True</span></span><br><span class="line">Q = deque()</span><br><span class="line">Q.append((*Tong, <span class="number">0</span>))</span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> Q:</span><br><span class="line">    y, x, v, cnt = Q.popleft()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 도착 지점</span></span><br><span class="line">    <span class="keyword">if</span> (y, x, v) == Goal:</span><br><span class="line">        result = cnt</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 이동</span></span><br><span class="line">        <span class="keyword">for</span> dir <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">            ny, nx = y + dy[dir], x + dx[dir]</span><br><span class="line">            <span class="keyword">if</span> v:  <span class="comment"># 세로모드</span></span><br><span class="line">                <span class="keyword">if</span> <span class="number">1</span> &lt;= ny &lt; N - <span class="number">1</span> <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; N <span class="keyword">and</span> <span class="keyword">not</span> visited[ny][nx][v]:</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> my_map[ny - <span class="number">1</span>][nx] + my_map[ny][nx] + my_map[ny + <span class="number">1</span>][nx]:</span><br><span class="line">                        visited[ny][nx][v] = <span class="literal">True</span></span><br><span class="line">                        Q.append((ny, nx, v, cnt + <span class="number">1</span>))</span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment"># 가로모드</span></span><br><span class="line">                <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="number">1</span> &lt;= nx &lt; N - <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> visited[ny][nx][v]:</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> my_map[ny][nx - <span class="number">1</span>] + my_map[ny][nx] + my_map[ny][nx + <span class="number">1</span>]:</span><br><span class="line">                        visited[ny][nx][v] = <span class="literal">True</span></span><br><span class="line">                        Q.append((ny, nx, v, cnt + <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 회전</span></span><br><span class="line">        <span class="keyword">if</span> zero_around(y, x) <span class="keyword">and</span> <span class="keyword">not</span> visited[y][x][<span class="keyword">not</span> v]:</span><br><span class="line">            visited[y][x][<span class="keyword">not</span> v] = <span class="literal">True</span></span><br><span class="line">            Q.append((y, x, <span class="keyword">not</span> v, cnt + <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 16234. 인구 이동</title>
    <url>/2020/02/11/BOJ_16234/</url>
    <content><![CDATA[<h3 id="16234-인구-이동"><a class="markdownIt-Anchor" href="#16234-인구-이동"></a> 16234. 인구 이동</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/16234" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">N, L, R = map(int, input().split())</span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 상 하 좌 우</span></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 모든 칸을 돌면서 연합 정보 수집</span></span><br><span class="line">    Q = []</span><br><span class="line">    visited = [[<span class="literal">False</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    alli_list = []  <span class="comment"># 연합 리스트</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            alli = []  <span class="comment"># 연합</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> visited[r][c]:</span><br><span class="line">                visited[r][c] = <span class="literal">True</span></span><br><span class="line">                Q.append((r, c))</span><br><span class="line">            <span class="keyword">while</span> Q:  <span class="comment"># DFS, 연합의 좌표값 저장</span></span><br><span class="line">                y, x = Q.pop()</span><br><span class="line">                alli.append((y, x))</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                    ny, nx = y + dy[i], x + dx[i]</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; N <span class="keyword">and</span> <span class="keyword">not</span> visited[ny][nx]</span><br><span class="line">                            <span class="keyword">and</span> L &lt;= abs(my_map[y][x] - my_map[ny][nx]) &lt;= R):</span><br><span class="line">                        visited[ny][nx] = <span class="literal">True</span></span><br><span class="line">                        Q.append((ny, nx))</span><br><span class="line">                        </span><br><span class="line">            <span class="comment"># 연합의 크기가 1보다 크면 저장</span></span><br><span class="line">            <span class="keyword">if</span> len(alli) &gt; <span class="number">1</span>:</span><br><span class="line">                alli_list.append(alli)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 인구이동</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> alli_list:  <span class="comment"># 연합이 없으면</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:  <span class="comment"># 연합이 있으면</span></span><br><span class="line">        result += <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> alli <span class="keyword">in</span> alli_list:  <span class="comment"># 연합끼리 인구이동</span></span><br><span class="line">            temp = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> r, c <span class="keyword">in</span> alli:</span><br><span class="line">                temp += my_map[r][c]</span><br><span class="line">            temp //= len(alli)</span><br><span class="line">            <span class="keyword">for</span> r, c <span class="keyword">in</span> alli:</span><br><span class="line">                my_map[r][c] = temp</span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 15686. 치킨 배달</title>
    <url>/2020/02/11/BOJ_15686/</url>
    <content><![CDATA[<h3 id="15686-치킨-배달"><a class="markdownIt-Anchor" href="#15686-치킨-배달"></a> 15686. 치킨 배달</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/15686" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> combinations</span><br><span class="line"></span><br><span class="line">N, M = map(int, input().split())</span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 집과 치킨집 좌표 저장</span></span><br><span class="line">chickens = []</span><br><span class="line">home = []</span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">if</span> my_map[r][c] == <span class="number">1</span>:</span><br><span class="line">            home.append((r, c))</span><br><span class="line">        <span class="keyword">elif</span> my_map[r][c] == <span class="number">2</span>:</span><br><span class="line">            chickens.append((r, c))</span><br><span class="line"></span><br><span class="line">result = float(<span class="string">'inf'</span>)</span><br><span class="line"><span class="keyword">for</span> chicken <span class="keyword">in</span> combinations(chickens, M):  <span class="comment"># 가능한 치킨집 조합</span></span><br><span class="line">    sub_res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> ho <span class="keyword">in</span> home:  <span class="comment"># 각 집마다</span></span><br><span class="line">        dist = float(<span class="string">'inf'</span>)</span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> chicken:  <span class="comment"># 가까운 치킨집 찾기</span></span><br><span class="line">            temp = abs(ho[<span class="number">0</span>] - ch[<span class="number">0</span>]) + abs(ho[<span class="number">1</span>] - ch[<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">if</span> temp &lt; dist:</span><br><span class="line">                dist = temp</span><br><span class="line">        sub_res += dist</span><br><span class="line">    <span class="keyword">if</span> sub_res &lt; result:</span><br><span class="line">        result = sub_res</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SSAFY] 20200211</title>
    <url>/2020/02/11/Algorithm_0211/</url>
    <content><![CDATA[<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#1221-gns-d3">1221. GNS <code>D3</code></a></li>
<li><a href="#1215-%ED%9A%8C%EB%AC%B81-d3">1215. 회문1 <code>D3</code></a></li>
<li><a href="#1216-%ED%9A%8C%EB%AC%B82-d3">1216. 회문2 <code>D3</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="1221-gns-d3"><a class="markdownIt-Anchor" href="#1221-gns-d3"></a> 1221. GNS <code>D3</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV14jJh6ACYCFAYD" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">()</span>:</span>  <span class="comment"># nums[i]를 cnt[i]번 반복 출력</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(cnt[i]):</span><br><span class="line">            <span class="keyword">yield</span> nums[i]</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    input()</span><br><span class="line">    print(<span class="string">'#&#123;&#125;'</span>.format(test_case))</span><br><span class="line">    nums = [<span class="string">'ZRO'</span>, <span class="string">'ONE'</span>, <span class="string">'TWO'</span>, <span class="string">'THR'</span>, <span class="string">'FOR'</span>, <span class="string">'FIV'</span>, <span class="string">'SIX'</span>, <span class="string">'SVN'</span>, <span class="string">'EGT'</span>, <span class="string">'NIN'</span>]</span><br><span class="line">    cnt = [<span class="number">0</span>] * <span class="number">10</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> input().split():</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">            <span class="keyword">if</span> char == nums[i]:</span><br><span class="line">                cnt[i] += <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    print(*my_func())</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="1215-회문1-d3"><a class="markdownIt-Anchor" href="#1215-회문1-d3"></a> 1215. 회문1 <code>D3</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV14QpAaAAwCFAYi" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">    N = int(input())</span><br><span class="line">    my_map = [input() <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">8</span>)]</span><br><span class="line"></span><br><span class="line">    cnt = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 가로 회문 조사</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">8</span> - N + <span class="number">1</span>):</span><br><span class="line">            temp_h = []</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">                temp_h.append(my_map[r][c + i])</span><br><span class="line">            <span class="keyword">if</span> temp_h == temp_h[::<span class="number">-1</span>]:</span><br><span class="line">                cnt += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 세로 회문 조사</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">8</span> - N + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">            temp_v = []</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">                temp_v.append(my_map[r + i][c])</span><br><span class="line">            <span class="keyword">if</span> temp_v == temp_v[::<span class="number">-1</span>]:</span><br><span class="line">                cnt += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, cnt))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="1216-회문2-d3"><a class="markdownIt-Anchor" href="#1216-회문2-d3"></a> 1216. 회문2 <code>D3</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV14Rq5aABUCFAYi" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">    N = input()  <span class="comment"># 버림</span></span><br><span class="line">    my_map = [input() <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">100</span>)]</span><br><span class="line"></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> size <span class="keyword">in</span> range(<span class="number">100</span>, <span class="number">0</span>, <span class="number">-1</span>):</span><br><span class="line">        <span class="keyword">if</span> result:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># 회문 조사</span></span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">            <span class="keyword">if</span> result:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">100</span> - size + <span class="number">1</span>):</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(size//<span class="number">2</span>):</span><br><span class="line">                    <span class="keyword">if</span> my_map[r][c + i] != my_map[r][c + size - <span class="number">1</span> - i]:</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    result = size</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">100</span> - size + <span class="number">1</span>):</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(size//<span class="number">2</span>):</span><br><span class="line">                    <span class="keyword">if</span> my_map[c + i][r] != my_map[c + size - <span class="number">1</span> - i][r]:</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    result = size</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>SSAFY</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 15685. 드래곤 커브</title>
    <url>/2020/02/11/BOJ_15685/</url>
    <content><![CDATA[<h3 id="15685-드래곤-커브"><a class="markdownIt-Anchor" href="#15685-드래곤-커브"></a> 15685. 드래곤 커브</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/15685" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">N = int(input())</span><br><span class="line">input_list = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># max 세대 찾기</span></span><br><span class="line">max_g = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">    <span class="keyword">if</span> input_list[i][<span class="number">3</span>] &gt; max_g:</span><br><span class="line">        max_g = input_list[i][<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 세대별 커브 정보 만들기</span></span><br><span class="line"><span class="comment"># True : 좌회전, False : 우회전</span></span><br><span class="line">dragons = [[]]</span><br><span class="line"><span class="keyword">for</span> gen <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + max_g):</span><br><span class="line">    temp = []</span><br><span class="line">    <span class="keyword">for</span> dir <span class="keyword">in</span> dragons[gen - <span class="number">1</span>]:</span><br><span class="line">        temp.append(dir)</span><br><span class="line">    temp.append(<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">for</span> dir <span class="keyword">in</span> dragons[gen - <span class="number">1</span>][::<span class="number">-1</span>]:</span><br><span class="line">        temp.append(<span class="keyword">not</span> dir)</span><br><span class="line">    dragons.append(temp)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 커브따라 visited에 그리기</span></span><br><span class="line">dx = [<span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>]</span><br><span class="line">dy = [<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line">visited = [[<span class="literal">False</span>]* <span class="number">101</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">101</span>)]</span><br><span class="line"><span class="keyword">for</span> x, y, d, g <span class="keyword">in</span> input_list:</span><br><span class="line">    visited[y][x] = <span class="literal">True</span>  <span class="comment"># 시작</span></span><br><span class="line">    y, x = y + dy[d], x + dx[d]</span><br><span class="line">    <span class="keyword">for</span> left <span class="keyword">in</span> dragons[g]:</span><br><span class="line">        <span class="keyword">if</span> left:</span><br><span class="line">            d = (d + <span class="number">1</span>) % <span class="number">4</span></span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># turn right</span></span><br><span class="line">            d = (d - <span class="number">1</span>) % <span class="number">4</span></span><br><span class="line">        visited[y][x] = <span class="literal">True</span>  <span class="comment"># 커브지점</span></span><br><span class="line">        y, x = y + dy[d], x + dx[d]</span><br><span class="line">    visited[y][x] = <span class="literal">True</span>  <span class="comment"># 마지막</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 결과값 찾기</span></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">        <span class="keyword">if</span> visited[r][c] <span class="keyword">and</span> visited[r+<span class="number">1</span>][c] <span class="keyword">and</span> visited[r][c+<span class="number">1</span>] <span class="keyword">and</span> visited[r+<span class="number">1</span>][c+<span class="number">1</span>]:</span><br><span class="line">            result += <span class="number">1</span></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 15684. 사다리 조작</title>
    <url>/2020/02/10/BOJ_15684/</url>
    <content><![CDATA[<h3 id="15684-사다리-조작"><a class="markdownIt-Anchor" href="#15684-사다리-조작"></a> 15684. 사다리 조작</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/15684" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">simul</span><span class="params">()</span>:</span>  <span class="comment"># 사다리타기</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + N):</span><br><span class="line">        t = x</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + H):</span><br><span class="line">            <span class="keyword">if</span> ladder[y][t]:</span><br><span class="line">                t += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> ladder[y][t<span class="number">-1</span>]:</span><br><span class="line">                t -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> t != x:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DFS</span><span class="params">(r, cnt)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> found</span><br><span class="line">    <span class="keyword">if</span> cnt == min_val:</span><br><span class="line">        <span class="keyword">if</span> simul():  <span class="comment"># 사다리 타기 성공</span></span><br><span class="line">            found = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> range(r, N):  <span class="comment"># 현재 행부터</span></span><br><span class="line">            <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + H):  <span class="comment"># 세로로 탐색</span></span><br><span class="line">                <span class="comment"># 가로로 3칸이 비어야 넣을 수 있음</span></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> (ladder[y][x] <span class="keyword">or</span> ladder[y][x<span class="number">-1</span>] <span class="keyword">or</span> ladder[y][x+<span class="number">1</span>]):</span><br><span class="line">                    ladder[y][x] = <span class="number">1</span></span><br><span class="line">                    DFS(x, cnt + <span class="number">1</span>)  <span class="comment"># 현재 행부터 다시 탐색</span></span><br><span class="line">                    ladder[y][x] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> found:</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">N, M, H = map(int, input().split())</span><br><span class="line">ladder = [[<span class="number">0</span>] * (N + <span class="number">1</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(H + <span class="number">1</span>)]  <span class="comment"># 0행, 0열, N열 공백</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(M):</span><br><span class="line">    a, b = map(int, input().split())</span><br><span class="line">    ladder[a][b] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">found = <span class="literal">False</span></span><br><span class="line"><span class="keyword">for</span> min_val <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">    DFS(<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> found:</span><br><span class="line">        result = min_val</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result = <span class="number">-1</span></span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 15683. 감시</title>
    <url>/2020/02/10/BOJ_15683/</url>
    <content><![CDATA[<h3 id="15683-감시"><a class="markdownIt-Anchor" href="#15683-감시"></a> 15683. 감시</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/15683" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># CCTV 방향 경우의 수</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_perm</span><span class="params">(perm)</span>:</span></span><br><span class="line">    Q = []</span><br><span class="line">    Q.append(([], <span class="number">0</span>))</span><br><span class="line">    <span class="keyword">while</span> Q:</span><br><span class="line">        lst, c = Q.pop()</span><br><span class="line">        <span class="keyword">if</span> c == len(perm):</span><br><span class="line">            <span class="keyword">yield</span> lst</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(perm[c]):</span><br><span class="line">                Q.append((lst + [i], c + <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 한 방향으로 감시영역 확인</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">(i, d)</span>:</span></span><br><span class="line">    y, x = CCTV[i][<span class="number">0</span>], CCTV[i][<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        visited[y][x] = <span class="literal">True</span></span><br><span class="line">        y, x = y + dy[d], x + dx[d]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span>(<span class="number">0</span> &lt;= y &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= x &lt; M) <span class="keyword">or</span> my_map[y][x] == <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">N, M = map(int, input().split())</span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># CCTV와 빈 공간 정보 확인</span></span><br><span class="line">space = <span class="number">0</span></span><br><span class="line">CCTV = []</span><br><span class="line">my_dict = &#123;<span class="number">1</span>: <span class="number">4</span>, <span class="number">2</span>: <span class="number">2</span>, <span class="number">3</span>: <span class="number">4</span>, <span class="number">4</span>: <span class="number">4</span>, <span class="number">5</span>: <span class="number">1</span>&#125;</span><br><span class="line">perm = []</span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(M):</span><br><span class="line">        <span class="keyword">if</span> my_map[r][c]:  <span class="comment"># cctv or wall</span></span><br><span class="line">            <span class="keyword">if</span> my_map[r][c] != <span class="number">6</span>:  <span class="comment"># cctv</span></span><br><span class="line">                space += <span class="number">1</span></span><br><span class="line">                CCTV.append((r, c, my_map[r][c]))</span><br><span class="line">                perm.append(my_dict[my_map[r][c]])</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># empty space</span></span><br><span class="line">            space += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 모든 경우의 수에서 CCTV 종류에 따른 감시 방향</span></span><br><span class="line">result = float(<span class="string">'inf'</span>)</span><br><span class="line"><span class="keyword">for</span> direction <span class="keyword">in</span> my_perm(perm):</span><br><span class="line">    visited = [[<span class="literal">False</span>] * M <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(direction)):</span><br><span class="line">        <span class="keyword">if</span> CCTV[i][<span class="number">2</span>] == <span class="number">1</span>:</span><br><span class="line">            my_func(i, direction[i])</span><br><span class="line">        <span class="keyword">elif</span> CCTV[i][<span class="number">2</span>] == <span class="number">2</span>:</span><br><span class="line">            my_func(i, direction[i])</span><br><span class="line">            my_func(i, direction[i] - <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">elif</span> CCTV[i][<span class="number">2</span>] == <span class="number">3</span>:</span><br><span class="line">            my_func(i, direction[i])</span><br><span class="line">            my_func(i, direction[i] - <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">elif</span> CCTV[i][<span class="number">2</span>] == <span class="number">4</span>:</span><br><span class="line">            my_func(i, direction[i])</span><br><span class="line">            my_func(i, direction[i] - <span class="number">1</span>)</span><br><span class="line">            my_func(i, direction[i] - <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">elif</span> CCTV[i][<span class="number">2</span>] == <span class="number">5</span>:</span><br><span class="line">            my_func(i, direction[i])</span><br><span class="line">            my_func(i, direction[i] - <span class="number">1</span>)</span><br><span class="line">            my_func(i, direction[i] - <span class="number">2</span>)</span><br><span class="line">            my_func(i, direction[i] - <span class="number">3</span>)</span><br><span class="line">	</span><br><span class="line">    <span class="comment"># 결과 갱신</span></span><br><span class="line">    sub_res = space</span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        sub_res -= sum(visited[r])</span><br><span class="line">    <span class="keyword">if</span> sub_res &lt; result:</span><br><span class="line">        result = sub_res</span><br><span class="line">        </span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 14891. 톱니바퀴</title>
    <url>/2020/02/09/BOJ_14891/</url>
    <content><![CDATA[<h3 id="14891-톱니바퀴"><a class="markdownIt-Anchor" href="#14891-톱니바퀴"></a> 14891. 톱니바퀴</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/14891" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Move</span><span class="params">(t, d)</span>:</span></span><br><span class="line">    visited[t] = <span class="literal">True</span></span><br><span class="line">    <span class="comment"># 오른쪽이랑 연결되면</span></span><br><span class="line">    <span class="keyword">if</span> t &lt; <span class="number">3</span> <span class="keyword">and</span> <span class="keyword">not</span> visited[t + <span class="number">1</span>] <span class="keyword">and</span> Tobs[t][<span class="number">2</span>] ^ Tobs[t + <span class="number">1</span>][<span class="number">6</span>]:</span><br><span class="line">        Move(t + <span class="number">1</span>, -d)</span><br><span class="line">    <span class="comment"># 오른쪽이랑 연결되면</span></span><br><span class="line">    <span class="keyword">if</span> t &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="keyword">not</span> visited[t - <span class="number">1</span>] <span class="keyword">and</span> Tobs[t][<span class="number">6</span>] ^ Tobs[t - <span class="number">1</span>][<span class="number">2</span>]:</span><br><span class="line">        Move(t - <span class="number">1</span>, -d)</span><br><span class="line">    <span class="comment"># 톱니 회전</span></span><br><span class="line">    <span class="keyword">if</span> d &gt; <span class="number">0</span>:</span><br><span class="line">        Tobs[t].appendleft(Tobs[t].pop())</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        Tobs[t].append(Tobs[t].popleft())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 입력 받고 톱니 함수 호출</span></span><br><span class="line">Tobs = [deque(map(int, input())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">4</span>)]</span><br><span class="line">K = int(input())</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(K):</span><br><span class="line">    tob, d = map(int, input().split())</span><br><span class="line">    visited = [<span class="literal">False</span>] * <span class="number">4</span></span><br><span class="line">    Move(tob - <span class="number">1</span>, d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 결과</span></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">    result += Tobs[i][<span class="number">0</span>] * (<span class="number">2</span>**i)</span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 14890. 경사로</title>
    <url>/2020/02/09/BOJ_14890/</url>
    <content><![CDATA[<h3 id="14890-경사로"><a class="markdownIt-Anchor" href="#14890-경사로"></a> 14890. 경사로</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/14890" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">N, L = map(int, input().split())</span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="comment"># 가로줄 탐색</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">if</span> c == <span class="number">0</span>:</span><br><span class="line">            height = my_map[r][c]</span><br><span class="line">            temp1 = <span class="number">1</span>  <span class="comment"># 오르막 전 평지</span></span><br><span class="line">            temp2 = <span class="number">0</span>  <span class="comment"># 내리막 후 직진</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> my_map[r][c] == height:  <span class="comment"># 평지</span></span><br><span class="line">                <span class="keyword">if</span> temp2:</span><br><span class="line">                    temp2 -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    temp1 += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> my_map[r][c] == height + <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> temp2:  <span class="comment"># 오르막길</span></span><br><span class="line">                <span class="keyword">if</span> temp1 &gt;= L:</span><br><span class="line">                    height = my_map[r][c]</span><br><span class="line">                    temp1 = <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">break</span>  <span class="comment"># 불가능</span></span><br><span class="line">            <span class="keyword">elif</span> my_map[r][c] == height - <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> temp2:  <span class="comment"># 내리막길</span></span><br><span class="line">                height = my_map[r][c]</span><br><span class="line">                temp1 = <span class="number">0</span></span><br><span class="line">                temp2 = L - <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span>  <span class="comment"># 불가능</span></span><br><span class="line">    <span class="keyword">else</span>:  <span class="comment"># temp2 없이 완주하면</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> temp2:</span><br><span class="line">            result += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 세로줄 탐색</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">if</span> r == <span class="number">0</span>:</span><br><span class="line">            height = my_map[r][c]</span><br><span class="line">            temp1 = <span class="number">1</span>  <span class="comment"># 오르막 전 평지</span></span><br><span class="line">            temp2 = <span class="number">0</span>  <span class="comment"># 내리막 후 직진</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> my_map[r][c] == height:  <span class="comment"># 평지</span></span><br><span class="line">                <span class="keyword">if</span> temp2:</span><br><span class="line">                    temp2 -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    temp1 += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> my_map[r][c] == height + <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> temp2:  <span class="comment"># 오르막길</span></span><br><span class="line">                <span class="keyword">if</span> temp1 &gt;= L:</span><br><span class="line">                    height = my_map[r][c]</span><br><span class="line">                    temp1 = <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">break</span>  <span class="comment"># 불가능</span></span><br><span class="line">            <span class="keyword">elif</span> my_map[r][c] == height - <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> temp2:  <span class="comment"># 내리막길</span></span><br><span class="line">                height = my_map[r][c]</span><br><span class="line">                temp1 = <span class="number">0</span></span><br><span class="line">                temp2 = L - <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span>  <span class="comment"># 불가능</span></span><br><span class="line">    <span class="keyword">else</span>:  <span class="comment"># temp2 없이 완주하면</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> temp2:</span><br><span class="line">            result += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 14889. 스타트와 링크</title>
    <url>/2020/02/09/BOJ_14889/</url>
    <content><![CDATA[<h3 id="14889-스타트와-링크"><a class="markdownIt-Anchor" href="#14889-스타트와-링크"></a> 14889. 스타트와 링크</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/14889" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> combinations</span><br><span class="line"></span><br><span class="line">N = int(input())</span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">result = float(<span class="string">'inf'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> team1 <span class="keyword">in</span> combinations(range(N), N//<span class="number">2</span>):</span><br><span class="line">    team2 = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(N) <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> team1]</span><br><span class="line">    sub_res = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1팀 점수 더하기</span></span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> team1:</span><br><span class="line">        <span class="keyword">for</span> q <span class="keyword">in</span> team1:</span><br><span class="line">            sub_res += my_map[p][q]</span><br><span class="line">    <span class="comment"># 2팀 점수 빼기</span></span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> team2:</span><br><span class="line">        <span class="keyword">for</span> q <span class="keyword">in</span> team2:</span><br><span class="line">            sub_res -= my_map[p][q]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 결과 갱신</span></span><br><span class="line">    sub_res = abs(sub_res)</span><br><span class="line">    <span class="keyword">if</span> sub_res &lt; result:</span><br><span class="line">        result = sub_res</span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 14888. 연산자 끼워넣기</title>
    <url>/2020/02/09/BOJ_14888/</url>
    <content><![CDATA[<h3 id="14888-연산자-끼워넣기"><a class="markdownIt-Anchor" href="#14888-연산자-끼워넣기"></a> 14888. 연산자 끼워넣기</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/14888" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line"><span class="comment"># 연산자 순열 만들기</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_perm</span><span class="params">(Calcs)</span>:</span></span><br><span class="line">    Q = deque()</span><br><span class="line">    Q.append(([], Calcs[:]))</span><br><span class="line">    <span class="keyword">while</span> Q:</span><br><span class="line">        my_lst, remain = Q.pop()</span><br><span class="line">        <span class="keyword">if</span> len(my_lst) == N - <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">yield</span> my_lst</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                <span class="keyword">if</span> remain[i]:</span><br><span class="line">                    remain[i] -= <span class="number">1</span></span><br><span class="line">                    my_lst.append(i)</span><br><span class="line">                    Q.append((my_lst[:], remain[:]))</span><br><span class="line">                    my_lst.pop()</span><br><span class="line">                    remain[i] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">N = int(input())</span><br><span class="line">A = list(map(int, input().split()))</span><br><span class="line">C = list(map(int, input().split()))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">my_max = -float(<span class="string">'inf'</span>)</span><br><span class="line">my_min = float(<span class="string">'inf'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> calcs <span class="keyword">in</span> my_perm(C):  <span class="comment"># 순서대로 계산</span></span><br><span class="line">    num = A[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N<span class="number">-1</span>):</span><br><span class="line">        <span class="keyword">if</span> calcs[i] == <span class="number">0</span>:  <span class="comment"># +</span></span><br><span class="line">            num = num + A[i + <span class="number">1</span>]</span><br><span class="line">        <span class="keyword">elif</span> calcs[i] == <span class="number">1</span>:  <span class="comment"># -</span></span><br><span class="line">            num = num - A[i + <span class="number">1</span>]</span><br><span class="line">        <span class="keyword">elif</span> calcs[i] == <span class="number">2</span>:  <span class="comment"># *</span></span><br><span class="line">            num = num * A[i + <span class="number">1</span>]</span><br><span class="line">        <span class="keyword">elif</span> calcs[i] == <span class="number">3</span>:  <span class="comment"># /</span></span><br><span class="line">            namuzi = num % A[i + <span class="number">1</span>]</span><br><span class="line">            num = num // A[i + <span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> num &lt; <span class="number">0</span> <span class="keyword">and</span> namuzi:</span><br><span class="line">                num += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> num &gt; my_max:</span><br><span class="line">        my_max = num</span><br><span class="line">    <span class="keyword">if</span> num &lt; my_min:</span><br><span class="line">        my_min = num</span><br><span class="line"></span><br><span class="line">print(my_max)</span><br><span class="line">print(my_min)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 14503. 로봇 청소기</title>
    <url>/2020/02/09/BOJ_14503/</url>
    <content><![CDATA[<h3 id="14503-로봇-청소기"><a class="markdownIt-Anchor" href="#14503-로봇-청소기"></a> 14503. 로봇 청소기</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/14503" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">N, M = map(int, input().split())</span><br><span class="line">y, x, d = map(int, input().split())</span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">visited = [[<span class="literal">False</span>] * M <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 북 동 남 서</span></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> visited[y][x]:</span><br><span class="line">        visited[y][x] = <span class="literal">True</span></span><br><span class="line">        result += <span class="number">1</span>  <span class="comment"># 청소</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">        ny, nx = y + dy[d - i], x + dx[d - i]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> visited[ny][nx] <span class="keyword">and</span> my_map[ny][nx] == <span class="number">0</span>:  <span class="comment"># 청소할 곳 찾음</span></span><br><span class="line">            y, x, d = ny, nx, (d - i) % <span class="number">4</span></span><br><span class="line">            <span class="keyword">break</span>  <span class="comment"># for 탈출</span></span><br><span class="line">    <span class="keyword">else</span>:  <span class="comment"># 청소할 곳 못찾음</span></span><br><span class="line">        y, x = y - dy[d], x - dx[d]  <span class="comment"># 뒤로 가기</span></span><br><span class="line">        <span class="keyword">if</span> my_map[y][x] == <span class="number">1</span>:  <span class="comment"># 벽이면</span></span><br><span class="line">            <span class="keyword">break</span>  <span class="comment"># 종료 (while 탈출)</span></span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 14501. 퇴사</title>
    <url>/2020/02/09/BOJ_14501/</url>
    <content><![CDATA[<h3 id="14501-퇴사"><a class="markdownIt-Anchor" href="#14501-퇴사"></a> 14501. 퇴사</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/14501" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">N = int(input())</span><br><span class="line">T = []</span><br><span class="line">P = []</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(N):</span><br><span class="line">    t, p = map(int, input().split())</span><br><span class="line">    T.append(t)</span><br><span class="line">    P.append(p)</span><br><span class="line"></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line">Q = deque()</span><br><span class="line">Q.append((<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"><span class="keyword">while</span> Q:</span><br><span class="line">    i, sub_res = Q.pop()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> sub_res &gt; result:  <span class="comment"># 최대값 갱신</span></span><br><span class="line">        result = sub_res</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> i &lt; N:  <span class="comment"># 시작지점이 스케쥴 범위 내</span></span><br><span class="line">        <span class="keyword">if</span> i + T[i] &lt;= N:  <span class="comment"># 종료지점이 스케쥴+1 범위 내</span></span><br><span class="line">            Q.append((i + T[i], sub_res + P[i]))</span><br><span class="line">        <span class="keyword">if</span> i + <span class="number">1</span> &lt;= N:  <span class="comment"># 하루 건너 뛰기</span></span><br><span class="line">            Q.append((i + <span class="number">1</span>, sub_res))</span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 14500. 테트로미노</title>
    <url>/2020/02/08/BOJ_14500/</url>
    <content><![CDATA[<h3 id="14500-테트로미노"><a class="markdownIt-Anchor" href="#14500-테트로미노"></a> 14500. 테트로미노</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/14500" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">N, M = map(int, input().split())</span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">shape1x4 = ((<span class="number">0</span>, <span class="number">0</span>), (<span class="number">0</span>, <span class="number">1</span>), (<span class="number">0</span>, <span class="number">2</span>), (<span class="number">0</span>, <span class="number">3</span>))  <span class="comment"># 1개</span></span><br><span class="line">shapes2x3 = (</span><br><span class="line">    ((<span class="number">0</span>, <span class="number">0</span>), (<span class="number">0</span>, <span class="number">1</span>), (<span class="number">0</span>, <span class="number">2</span>), (<span class="number">1</span>, <span class="number">0</span>)),</span><br><span class="line">    ((<span class="number">0</span>, <span class="number">0</span>), (<span class="number">0</span>, <span class="number">1</span>), (<span class="number">0</span>, <span class="number">2</span>), (<span class="number">1</span>, <span class="number">1</span>)),</span><br><span class="line">    ((<span class="number">0</span>, <span class="number">0</span>), (<span class="number">0</span>, <span class="number">1</span>), (<span class="number">0</span>, <span class="number">2</span>), (<span class="number">1</span>, <span class="number">2</span>)),</span><br><span class="line">    ((<span class="number">1</span>, <span class="number">0</span>), (<span class="number">1</span>, <span class="number">1</span>), (<span class="number">1</span>, <span class="number">2</span>), (<span class="number">0</span>, <span class="number">0</span>)),</span><br><span class="line">    ((<span class="number">1</span>, <span class="number">0</span>), (<span class="number">1</span>, <span class="number">1</span>), (<span class="number">1</span>, <span class="number">2</span>), (<span class="number">0</span>, <span class="number">1</span>)),</span><br><span class="line">    ((<span class="number">1</span>, <span class="number">0</span>), (<span class="number">1</span>, <span class="number">1</span>), (<span class="number">1</span>, <span class="number">2</span>), (<span class="number">0</span>, <span class="number">2</span>)),</span><br><span class="line">    ((<span class="number">1</span>, <span class="number">0</span>), (<span class="number">1</span>, <span class="number">1</span>), (<span class="number">0</span>, <span class="number">1</span>), (<span class="number">0</span>, <span class="number">2</span>)),</span><br><span class="line">    ((<span class="number">0</span>, <span class="number">0</span>), (<span class="number">0</span>, <span class="number">1</span>), (<span class="number">1</span>, <span class="number">1</span>), (<span class="number">1</span>, <span class="number">2</span>))</span><br><span class="line">)  <span class="comment"># 8개</span></span><br><span class="line">shape2x2 = ((<span class="number">0</span>, <span class="number">0</span>), (<span class="number">0</span>, <span class="number">1</span>), (<span class="number">1</span>, <span class="number">0</span>), (<span class="number">1</span>, <span class="number">1</span>))  <span class="comment"># 1개</span></span><br><span class="line"></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1x4</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(M<span class="number">-3</span>):</span><br><span class="line">        sub_res = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> shape1x4:</span><br><span class="line">            sub_res += my_map[r + b[<span class="number">0</span>]][c + b[<span class="number">1</span>]]</span><br><span class="line">        <span class="keyword">if</span> sub_res &gt; result:</span><br><span class="line">            result = sub_res</span><br><span class="line"><span class="comment"># 2x3</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N<span class="number">-1</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(M<span class="number">-2</span>):</span><br><span class="line">        <span class="keyword">for</span> shape <span class="keyword">in</span> shapes2x3:</span><br><span class="line">            sub_res = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> b <span class="keyword">in</span> shape:</span><br><span class="line">                sub_res += my_map[r + b[<span class="number">0</span>]][c + b[<span class="number">1</span>]]</span><br><span class="line">            <span class="keyword">if</span> sub_res &gt; result:</span><br><span class="line">                result = sub_res</span><br><span class="line"><span class="comment"># 2x2</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N<span class="number">-2</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(M<span class="number">-2</span>):</span><br><span class="line">        sub_res = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> shape2x2:</span><br><span class="line">            sub_res += my_map[r + b[<span class="number">0</span>]][c + b[<span class="number">1</span>]]</span><br><span class="line">        <span class="keyword">if</span> sub_res &gt; result:</span><br><span class="line">            result = sub_res</span><br><span class="line"></span><br><span class="line"><span class="comment">## 여기부터 b[0] &lt;-&gt; b[1]</span></span><br><span class="line"><span class="comment"># 3x2</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N<span class="number">-2</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(M<span class="number">-1</span>):</span><br><span class="line">        <span class="keyword">for</span> shape <span class="keyword">in</span> shapes2x3:</span><br><span class="line">            sub_res = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> b <span class="keyword">in</span> shape:</span><br><span class="line">                sub_res += my_map[r + b[<span class="number">1</span>]][c + b[<span class="number">0</span>]]</span><br><span class="line">            <span class="keyword">if</span> sub_res &gt; result:</span><br><span class="line">                result = sub_res</span><br><span class="line"><span class="comment"># 4x1</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N<span class="number">-3</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(M):</span><br><span class="line">        sub_res = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> shape1x4:</span><br><span class="line">            sub_res += my_map[r + b[<span class="number">1</span>]][c + b[<span class="number">0</span>]]</span><br><span class="line">        <span class="keyword">if</span> sub_res &gt; result:</span><br><span class="line">            result = sub_res</span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 5373. 큐빙</title>
    <url>/2020/02/08/BOJ_5373/</url>
    <content><![CDATA[<h3 id="5373-큐빙"><a class="markdownIt-Anchor" href="#5373-큐빙"></a> 5373. 큐빙</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/5373" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Cube 노드 번호</span></span><br><span class="line"><span class="comment"># 0 1 2</span></span><br><span class="line"><span class="comment"># 7 c 3</span></span><br><span class="line"><span class="comment"># 6 5 4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, color)</span>:</span></span><br><span class="line">        self.data = color</span><br><span class="line">        self.link1 = <span class="literal">None</span></span><br><span class="line">        self.link2 = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cube</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.U = [Node(<span class="string">'w'</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">8</span>)]</span><br><span class="line">        self.D = [Node(<span class="string">'y'</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">8</span>)]</span><br><span class="line">        self.F = [Node(<span class="string">'r'</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">8</span>)]</span><br><span class="line">        self.B = [Node(<span class="string">'o'</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">8</span>)]</span><br><span class="line">        self.L = [Node(<span class="string">'g'</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">8</span>)]</span><br><span class="line">        self.R = [Node(<span class="string">'b'</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">8</span>)]</span><br><span class="line">        <span class="comment"># U 링크</span></span><br><span class="line">        temp1 = (self.L[<span class="number">0</span>], self.B[<span class="number">1</span>], self.B[<span class="number">0</span>], self.R[<span class="number">1</span>], self.R[<span class="number">0</span>], self.F[<span class="number">1</span>], self.F[<span class="number">0</span>], self.L[<span class="number">1</span>])</span><br><span class="line">        temp2 = (self.B[<span class="number">2</span>], self.R[<span class="number">2</span>], self.F[<span class="number">2</span>], self.L[<span class="number">2</span>])</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">            self.U[i].link1 = temp1[i]</span><br><span class="line">            <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                self.U[i].link2 = temp2[i//<span class="number">2</span>]</span><br><span class="line">        <span class="comment"># D 링크</span></span><br><span class="line">        temp1 = (self.L[<span class="number">4</span>], self.F[<span class="number">5</span>], self.F[<span class="number">4</span>], self.R[<span class="number">5</span>], self.R[<span class="number">4</span>], self.B[<span class="number">5</span>], self.B[<span class="number">4</span>], self.L[<span class="number">5</span>])</span><br><span class="line">        temp2 = (self.F[<span class="number">6</span>], self.R[<span class="number">6</span>], self.B[<span class="number">6</span>], self.L[<span class="number">6</span>])</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">            self.D[i].link1 = temp1[i]</span><br><span class="line">            <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                self.D[i].link2 = temp2[i // <span class="number">2</span>]</span><br><span class="line">        <span class="comment"># F 링크</span></span><br><span class="line">        temp1 = (self.L[<span class="number">2</span>], self.U[<span class="number">5</span>], self.U[<span class="number">4</span>], self.R[<span class="number">7</span>], self.R[<span class="number">6</span>], self.D[<span class="number">1</span>], self.D[<span class="number">0</span>], self.L[<span class="number">3</span>])</span><br><span class="line">        temp2 = (self.U[<span class="number">6</span>], self.R[<span class="number">0</span>], self.D[<span class="number">2</span>], self.L[<span class="number">4</span>])</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">            self.F[i].link1 = temp1[i]</span><br><span class="line">            <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                self.F[i].link2 = temp2[i//<span class="number">2</span>]</span><br><span class="line">        <span class="comment"># B 링크</span></span><br><span class="line">        temp1 = (self.R[<span class="number">2</span>], self.U[<span class="number">1</span>], self.U[<span class="number">0</span>], self.L[<span class="number">7</span>], self.L[<span class="number">6</span>], self.D[<span class="number">5</span>], self.D[<span class="number">4</span>], self.R[<span class="number">3</span>])</span><br><span class="line">        temp2 = (self.U[<span class="number">2</span>], self.L[<span class="number">0</span>], self.D[<span class="number">6</span>], self.R[<span class="number">4</span>])</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">            self.B[i].link1 = temp1[i]</span><br><span class="line">            <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                self.B[i].link2 = temp2[i // <span class="number">2</span>]</span><br><span class="line">        <span class="comment"># L 링크</span></span><br><span class="line">        temp1 = (self.B[<span class="number">2</span>], self.U[<span class="number">7</span>], self.U[<span class="number">6</span>], self.F[<span class="number">7</span>], self.F[<span class="number">6</span>], self.D[<span class="number">7</span>], self.D[<span class="number">6</span>], self.B[<span class="number">3</span>])</span><br><span class="line">        temp2 = (self.U[<span class="number">0</span>], self.F[<span class="number">0</span>], self.D[<span class="number">0</span>], self.B[<span class="number">4</span>])</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">            self.L[i].link1 = temp1[i]</span><br><span class="line">            <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                self.L[i].link2 = temp2[i//<span class="number">2</span>]</span><br><span class="line">        <span class="comment"># R 링크</span></span><br><span class="line">        temp1 = (self.F[<span class="number">2</span>], self.U[<span class="number">3</span>], self.U[<span class="number">2</span>], self.B[<span class="number">7</span>], self.B[<span class="number">6</span>], self.D[<span class="number">3</span>], self.D[<span class="number">2</span>], self.F[<span class="number">3</span>])</span><br><span class="line">        temp2 = (self.U[<span class="number">4</span>], self.B[<span class="number">0</span>], self.D[<span class="number">4</span>], self.F[<span class="number">4</span>])</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">            self.R[i].link1 = temp1[i]</span><br><span class="line">            <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                self.R[i].link2 = temp2[i // <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">rotation</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        <span class="comment"># 회전 정보 받기</span></span><br><span class="line">        rot = <span class="number">-6</span> <span class="keyword">if</span> data[<span class="number">1</span>] == <span class="string">'+'</span> <span class="keyword">else</span> <span class="number">-2</span></span><br><span class="line">        <span class="keyword">if</span> data[<span class="number">0</span>] == <span class="string">'U'</span>: target = self.U</span><br><span class="line">        <span class="keyword">elif</span> data[<span class="number">0</span>] == <span class="string">'D'</span>: target = self.D</span><br><span class="line">        <span class="keyword">elif</span> data[<span class="number">0</span>] == <span class="string">'F'</span>: target = self.F</span><br><span class="line">        <span class="keyword">elif</span> data[<span class="number">0</span>] == <span class="string">'B'</span>: target = self.B</span><br><span class="line">        <span class="keyword">elif</span> data[<span class="number">0</span>] == <span class="string">'L'</span>: target = self.L</span><br><span class="line">        <span class="keyword">elif</span> data[<span class="number">0</span>] == <span class="string">'R'</span>: target = self.R</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 0246 회전</span></span><br><span class="line">        (target[<span class="number">0</span>+rot].data, target[<span class="number">0</span>+rot].link1.data, target[<span class="number">0</span>+rot].link2.data,</span><br><span class="line">         target[<span class="number">2</span>+rot].data, target[<span class="number">2</span>+rot].link1.data, target[<span class="number">2</span>+rot].link2.data,</span><br><span class="line">         target[<span class="number">4</span>+rot].data, target[<span class="number">4</span>+rot].link1.data, target[<span class="number">4</span>+rot].link2.data,</span><br><span class="line">         target[<span class="number">6</span>+rot].data, target[<span class="number">6</span>+rot].link1.data, target[<span class="number">6</span>+rot].link2.data) = (</span><br><span class="line">            target[<span class="number">0</span>].data, target[<span class="number">0</span>].link1.data, target[<span class="number">0</span>].link2.data,</span><br><span class="line">            target[<span class="number">2</span>].data, target[<span class="number">2</span>].link1.data, target[<span class="number">2</span>].link2.data,</span><br><span class="line">            target[<span class="number">4</span>].data, target[<span class="number">4</span>].link1.data, target[<span class="number">4</span>].link2.data,</span><br><span class="line">            target[<span class="number">6</span>].data, target[<span class="number">6</span>].link1.data, target[<span class="number">6</span>].link2.data</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 1357 회전</span></span><br><span class="line">        (target[<span class="number">1</span>+rot].data, target[<span class="number">1</span>+rot].link1.data,</span><br><span class="line">         target[<span class="number">3</span>+rot].data, target[<span class="number">3</span>+rot].link1.data,</span><br><span class="line">         target[<span class="number">5</span>+rot].data, target[<span class="number">5</span>+rot].link1.data,</span><br><span class="line">         target[<span class="number">7</span>+rot].data, target[<span class="number">7</span>+rot].link1.data) = (</span><br><span class="line">            target[<span class="number">1</span>].data, target[<span class="number">1</span>].link1.data,</span><br><span class="line">            target[<span class="number">3</span>].data, target[<span class="number">3</span>].link1.data,</span><br><span class="line">            target[<span class="number">5</span>].data, target[<span class="number">5</span>].link1.data,</span><br><span class="line">            target[<span class="number">7</span>].data, target[<span class="number">7</span>].link1.data,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">top</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">yield</span> self.U[<span class="number">0</span>].data + self.U[<span class="number">1</span>].data + self.U[<span class="number">2</span>].data</span><br><span class="line">        <span class="keyword">yield</span> self.U[<span class="number">7</span>].data + <span class="string">'w'</span> + self.U[<span class="number">3</span>].data</span><br><span class="line">        <span class="keyword">yield</span> self.U[<span class="number">6</span>].data + self.U[<span class="number">5</span>].data + self.U[<span class="number">4</span>].data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input())</span><br><span class="line">    cube = Cube()</span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> input().split():</span><br><span class="line">        cube.rotation(data)</span><br><span class="line">    print(*cube.top(), sep=<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 17825. 주사위 윷놀이</title>
    <url>/2020/02/08/BOJ_17825/</url>
    <content><![CDATA[<h3 id="17825-주사위-윷놀이"><a class="markdownIt-Anchor" href="#17825-주사위-윷놀이"></a> 17825. 주사위 윷놀이</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/17825" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> product</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, num)</span>:</span></span><br><span class="line">        self.data = num</span><br><span class="line">        self.next = <span class="literal">None</span></span><br><span class="line">        self.shortcut = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Yoot</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.head = Node(<span class="string">'시작'</span>)</span><br><span class="line">        self.tail = Node(<span class="string">'도착'</span>)</span><br><span class="line">        self.tail.next = self.tail <span class="comment"># 도착 ~ 도착</span></span><br><span class="line">        self.current = self.head</span><br><span class="line">        self.players = [self.head <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">4</span>)]</span><br><span class="line"></span><br><span class="line">        self.point25 = <span class="literal">None</span></span><br><span class="line">        self.point40 = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 외각길</span></span><br><span class="line">        <span class="comment"># 시작 ~ 10 ~ 20 ~ 30 ~ 40 연결</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, <span class="number">41</span>, <span class="number">2</span>):</span><br><span class="line">            self.append(i)</span><br><span class="line">        self.point40 = self.current  <span class="comment"># 40 위치 저장</span></span><br><span class="line">        self.current.next = self.tail  <span class="comment"># 40 ~ 도착 연결</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 지름길</span></span><br><span class="line">        <span class="comment"># 10 ~ 25 ~ 40 연결</span></span><br><span class="line">        self.current = self.head  <span class="comment"># 시작지점</span></span><br><span class="line">        self.next(<span class="number">5</span>)  <span class="comment"># 10까지 가기</span></span><br><span class="line">        self.shortcut_append(<span class="number">13</span>)  <span class="comment"># 지름길에 13 연결</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> (<span class="number">16</span>, <span class="number">19</span>, <span class="number">25</span>, <span class="number">30</span>, <span class="number">35</span>):</span><br><span class="line">            self.append(i)  <span class="comment"># 13 ~ 25 ~ 35 연결</span></span><br><span class="line">            <span class="keyword">if</span> i == <span class="number">25</span>:  <span class="comment"># 25 위치 저장</span></span><br><span class="line">                self.point25 = self.current</span><br><span class="line">        self.current.next = self.point40  <span class="comment"># 35 ~ 40 연결</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 20 ~ 25 연결</span></span><br><span class="line">        self.current = self.head</span><br><span class="line">        self.next(<span class="number">10</span>)  <span class="comment"># 20까지 가기</span></span><br><span class="line">        self.shortcut_append(<span class="number">22</span>)  <span class="comment"># 지름길에 22 연결</span></span><br><span class="line">        self.append(<span class="number">24</span>)  <span class="comment"># 22 ~ 24 연결</span></span><br><span class="line">        self.current.next = self.point25  <span class="comment"># 24 ~ 25 연결</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 30 ~ 25 연결</span></span><br><span class="line">        self.current = self.head</span><br><span class="line">        self.next(<span class="number">15</span>)  <span class="comment"># 30까지 가기</span></span><br><span class="line">        self.shortcut_append(<span class="number">28</span>)  <span class="comment"># 지름길에 28 연결</span></span><br><span class="line">        self.append(<span class="number">27</span>)  <span class="comment"># 28 ~ 27 연결</span></span><br><span class="line">        self.append(<span class="number">26</span>)  <span class="comment"># 27 ~ 26 연결</span></span><br><span class="line">        self.current.next = self.point25  <span class="comment"># 26 ~ 25 연결</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">next</span><span class="params">(self, num=<span class="number">1</span>)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(num):</span><br><span class="line">            self.current = self.current.next</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">append</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        self.current.next = Node(data)</span><br><span class="line">        self.next()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">shortcut_append</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        self.current.shortcut = Node(data)</span><br><span class="line">        self.current = self.current.shortcut</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(self, p, n)</span>:</span></span><br><span class="line">        <span class="comment"># p = player, n = number</span></span><br><span class="line">        <span class="keyword">if</span> self.players[p] == self.tail:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>  <span class="comment"># 도착에서 시작하면 break</span></span><br><span class="line">        <span class="comment"># 출발</span></span><br><span class="line">        self.current = self.players[p]</span><br><span class="line">        <span class="keyword">if</span> self.current.shortcut <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self.next(n)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.current = self.current.shortcut</span><br><span class="line">            self.next(n<span class="number">-1</span>)</span><br><span class="line">        <span class="comment"># 도착</span></span><br><span class="line">        <span class="keyword">if</span> self.current <span class="keyword">is</span> self.tail:</span><br><span class="line">            self.players[p] = self.tail</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>  <span class="comment"># 도착</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> self.current <span class="keyword">in</span> self.players:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">-1</span>  <span class="comment"># 겹침</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.players[p] = self.current</span><br><span class="line">                <span class="keyword">return</span> self.current.data</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">clear</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.players = [self.head <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">4</span>)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dices = list(map(int, input().split()))</span><br><span class="line">yoot = Yoot()</span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> players <span class="keyword">in</span> product(range(<span class="number">4</span>), repeat=<span class="number">10</span>):</span><br><span class="line">    sub_result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> turn <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        data = yoot.move(players[turn], dices[turn])</span><br><span class="line">        <span class="keyword">if</span> data == <span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            sub_result += data</span><br><span class="line">    yoot.clear()</span><br><span class="line">    <span class="keyword">if</span> sub_result &gt; result:</span><br><span class="line">        result = sub_result</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 14499. 주사위 굴리기</title>
    <url>/2020/02/07/BOJ_14499/</url>
    <content><![CDATA[<h3 id="14499-주사위-굴리기"><a class="markdownIt-Anchor" href="#14499-주사위-굴리기"></a> 14499. 주사위 굴리기</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/14499" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dice</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.h = deque((<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)) <span class="comment"># bot right top left</span></span><br><span class="line">        self.v = deque((<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)) <span class="comment"># bot down top up</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">rotation</span><span class="params">(self, ori)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> ori == <span class="number">1</span>:  <span class="comment"># 동쪽</span></span><br><span class="line">            self.h.append(self.h.popleft())  <span class="comment"># 오른쪽으로 굴리고</span></span><br><span class="line">            self.v[<span class="number">0</span>], self.v[<span class="number">2</span>] = self.h[<span class="number">0</span>], self.h[<span class="number">2</span>]  <span class="comment"># top, bot 갱신</span></span><br><span class="line">        <span class="keyword">elif</span> ori == <span class="number">2</span>:  <span class="comment"># 서쪽</span></span><br><span class="line">            self.h.appendleft(self.h.pop())  <span class="comment"># 왼쪽으로 굴리고</span></span><br><span class="line">            self.v[<span class="number">0</span>], self.v[<span class="number">2</span>] = self.h[<span class="number">0</span>], self.h[<span class="number">2</span>]  <span class="comment"># top, bot 갱신</span></span><br><span class="line">        <span class="keyword">elif</span> ori == <span class="number">3</span>:  <span class="comment"># 북쪽</span></span><br><span class="line">            self.v.appendleft(self.v.pop())  <span class="comment"># 위로 굴리고</span></span><br><span class="line">            self.h[<span class="number">0</span>], self.h[<span class="number">2</span>] = self.v[<span class="number">0</span>], self.v[<span class="number">2</span>]  <span class="comment"># top, bot 갱신</span></span><br><span class="line">        <span class="keyword">elif</span> ori == <span class="number">4</span>:  <span class="comment"># 남쪽</span></span><br><span class="line">            self.v.append(self.v.popleft())  <span class="comment"># 아래로 굴리고</span></span><br><span class="line">            self.h[<span class="number">0</span>], self.h[<span class="number">2</span>] = self.v[<span class="number">0</span>], self.v[<span class="number">2</span>]  <span class="comment"># top, bot 갱신</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">top</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.h[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">bot</span><span class="params">(self, num)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> num <span class="keyword">is</span> <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> self.h[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.h[<span class="number">0</span>] = self.v[<span class="number">0</span>] = num</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dr = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line">dc = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">N, M, r, c, K = map(int, input().split())</span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">dice = Dice()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ori <span class="keyword">in</span> map(int, input().split()):</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt;= r + dr[ori] &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= c + dc[ori] &lt; M:  <span class="comment"># 범위 내</span></span><br><span class="line">        r, c = r + dr[ori], c + dc[ori]  <span class="comment"># 주사위 위치</span></span><br><span class="line">        dice.rotation(ori)  <span class="comment"># 주사위 회전</span></span><br><span class="line">        my_map[r][c] = dice.bot(my_map[r][c])  <span class="comment"># 주사위 바닥</span></span><br><span class="line">        print(dice.top())  <span class="comment"># 주사위 윗면</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 14502. 연구소</title>
    <url>/2020/02/07/BOJ_14502/</url>
    <content><![CDATA[<h3 id="14502-연구소"><a class="markdownIt-Anchor" href="#14502-연구소"></a> 14502. 연구소</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/14502" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> combinations</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line">N, M = map(int, input().split())</span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">space = <span class="number">0</span></span><br><span class="line">zeros = []</span><br><span class="line">Q = deque()</span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(M):</span><br><span class="line">        <span class="keyword">if</span> my_map[r][c] == <span class="number">0</span>:</span><br><span class="line">            zeros.append((r, c))</span><br><span class="line">            space += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> my_map[r][c] == <span class="number">2</span>:</span><br><span class="line">            space += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> walls <span class="keyword">in</span> combinations(zeros, <span class="number">3</span>):</span><br><span class="line">    visited = [[<span class="literal">False</span>] * M <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    <span class="keyword">for</span> r, c <span class="keyword">in</span> walls:</span><br><span class="line">        visited[r][c] = <span class="literal">True</span>  <span class="comment"># 가상 벽</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(M):</span><br><span class="line">            <span class="keyword">if</span> my_map[r][c] == <span class="number">2</span> <span class="keyword">and</span> <span class="keyword">not</span> visited[r][c]:</span><br><span class="line">                Q.append((r, c))</span><br><span class="line">                <span class="keyword">while</span> Q:</span><br><span class="line">                    y, x = Q.pop()</span><br><span class="line">                    visited[y][x] = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                        ny, nx = y + dy[i], x + dx[i]</span><br><span class="line">                        <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; M <span class="keyword">and</span> \</span><br><span class="line">                                <span class="keyword">not</span> visited[ny][nx] <span class="keyword">and</span> \</span><br><span class="line">                                my_map[ny][nx] != <span class="number">1</span>:</span><br><span class="line">                            Q.append((ny, nx))</span><br><span class="line"></span><br><span class="line">    virus = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(M):</span><br><span class="line">            <span class="keyword">if</span> visited[r][c]:</span><br><span class="line">                virus += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> result &lt; space - virus:</span><br><span class="line">        result = space - virus</span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 2468. 안전 영역</title>
    <url>/2020/02/07/BOJ_2468/</url>
    <content><![CDATA[<h3 id="2468-안전-영역"><a class="markdownIt-Anchor" href="#2468-안전-영역"></a> 2468. 안전 영역</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/2468" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">N = int(input())</span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">Q = deque()</span><br><span class="line">result = <span class="number">-1</span></span><br><span class="line"><span class="keyword">for</span> water <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">101</span>):</span><br><span class="line">    sub_result = <span class="number">0</span></span><br><span class="line">    visited = [[<span class="literal">False</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">if</span> my_map[r][c] &gt; water <span class="keyword">and</span> <span class="keyword">not</span> visited[r][c]:</span><br><span class="line">                sub_result += <span class="number">1</span></span><br><span class="line">                Q.append((r, c))</span><br><span class="line">                <span class="keyword">while</span> Q:</span><br><span class="line">                    y, x = Q.pop()</span><br><span class="line">                    visited[y][x] = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                        ny, nx = y + dy[i], x + dx[i]</span><br><span class="line">                        <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; N <span class="keyword">and</span> \</span><br><span class="line">                                <span class="keyword">not</span> visited[ny][nx] <span class="keyword">and</span> \</span><br><span class="line">                                my_map[ny][nx] &gt; water:</span><br><span class="line">                            Q.append((ny, nx))</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> sub_result:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elif</span> sub_result &gt; result:</span><br><span class="line">        result = sub_result</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SSAFY</tag>
        <tag>BOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>[SSAFY] 20200207</title>
    <url>/2020/02/07/Algorithm_0207/</url>
    <content><![CDATA[<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#1959-%EB%91%90-%EA%B0%9C%EC%9D%98-%EC%88%AB%EC%9E%90%EC%97%B4-d2">1959. 두 개의 숫자열 <code>D2</code></a></li>
<li><a href="#1979-%EC%96%B4%EB%94%94%EC%97%90-%EB%8B%A8%EC%96%B4%EA%B0%80-%EB%93%A4%EC%96%B4%EA%B0%88-%EC%88%98-%EC%9E%88%EC%9D%84%EA%B9%8C-d2">1979. 어디에 단어가 들어갈 수 있을까 <code>D2</code></a></li>
<li><a href="#1493-%EC%88%98%EC%9D%98-%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%97%B0%EC%82%B0-d3">1493. 수의 새로운 연산 <code>D3</code></a></li>
<li><a href="#6109-%EC%B6%94%EC%96%B5%EC%9D%98-2048%EA%B2%8C%EC%9E%84-d4">6109. 추억의 2048게임 <code>D4</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="1959-두-개의-숫자열-d2"><a class="markdownIt-Anchor" href="#1959-두-개의-숫자열-d2"></a> 1959. 두 개의 숫자열 <code>D2</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PpoFaAS4DFAUq" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    <span class="comment"># 리스트 길이에 따른 입력 받기</span></span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line">    <span class="keyword">if</span> N &gt; M:</span><br><span class="line">        big = N</span><br><span class="line">        big_lst = list(map(int, input().split()))</span><br><span class="line">        small = M</span><br><span class="line">        small_lst = list(map(int, input().split()))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        small = N</span><br><span class="line">        small_lst = list(map(int, input().split()))</span><br><span class="line">        big = M</span><br><span class="line">        big_lst = list(map(int, input().split()))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 계산</span></span><br><span class="line">    result = -float(<span class="string">'inf'</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(big - small + <span class="number">1</span>):</span><br><span class="line">        sub_result = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(small):</span><br><span class="line">            sub_result += big_lst[i+j] * small_lst[j]</span><br><span class="line">        <span class="keyword">if</span> sub_result &gt; result:</span><br><span class="line">            result = sub_result</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 결과</span></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="1979-어디에-단어가-들어갈-수-있을까-d2"><a class="markdownIt-Anchor" href="#1979-어디에-단어가-들어갈-수-있을까-d2"></a> 1979. 어디에 단어가 들어갈 수 있을까 <code>D2</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PuPq6AaQDFAUq" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N, K = map(int, input().split())</span><br><span class="line">    num_cnt = [<span class="number">0</span>] * (N + <span class="number">1</span>)</span><br><span class="line">    my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 가로 탐색</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        before = <span class="number">0</span></span><br><span class="line">        cnt = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">if</span> before == <span class="number">0</span> <span class="keyword">and</span> my_map[r][c] == <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span> cnt:</span><br><span class="line">                    num_cnt[cnt] += <span class="number">1</span></span><br><span class="line">                cnt = <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> before == <span class="number">1</span> <span class="keyword">and</span> my_map[r][c] == <span class="number">1</span>:</span><br><span class="line">                cnt += <span class="number">1</span></span><br><span class="line">            before = my_map[r][c]</span><br><span class="line">        <span class="keyword">if</span> cnt:</span><br><span class="line">            num_cnt[cnt] += <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 세로 탐색</span></span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">        before = <span class="number">0</span></span><br><span class="line">        cnt = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">if</span> before == <span class="number">0</span> <span class="keyword">and</span> my_map[r][c] == <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span> cnt:</span><br><span class="line">                    num_cnt[cnt] += <span class="number">1</span></span><br><span class="line">                cnt = <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> before == <span class="number">1</span> <span class="keyword">and</span> my_map[r][c] == <span class="number">1</span>:</span><br><span class="line">                cnt += <span class="number">1</span></span><br><span class="line">            before = my_map[r][c]</span><br><span class="line">        <span class="keyword">if</span> cnt:</span><br><span class="line">            num_cnt[cnt] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, num_cnt[K]))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="1493-수의-새로운-연산-d3"><a class="markdownIt-Anchor" href="#1493-수의-새로운-연산-d3"></a> 1493. 수의 새로운 연산 <code>D3</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV2b-QGqADMBBASw" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find</span><span class="params">(target)</span>:</span></span><br><span class="line">    x = y = <span class="number">1</span></span><br><span class="line">    current = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> current &lt; target:</span><br><span class="line">        x += <span class="number">1</span></span><br><span class="line">        current += x</span><br><span class="line">    back = current - target</span><br><span class="line">    x -= back</span><br><span class="line">    y += back</span><br><span class="line">    <span class="keyword">return</span> x, y</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    p, q = map(int, input().split())</span><br><span class="line">    px, py = find(p)</span><br><span class="line">    qx, qy = find(q)</span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line">    step = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(qx + px - <span class="number">1</span>):</span><br><span class="line">        step += <span class="number">1</span></span><br><span class="line">        result += step</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(qy + py - <span class="number">1</span>):</span><br><span class="line">        result += step</span><br><span class="line">        step += <span class="number">1</span></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="6109-추억의-2048게임-d4"><a class="markdownIt-Anchor" href="#6109-추억의-2048게임-d4"></a> 6109. 추억의 2048게임 <code>D4</code></h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWbrg9uabZsDFAWQ" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<!-- more -->
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gravity</span><span class="params">(input_lst)</span>:</span></span><br><span class="line">    lst = []</span><br><span class="line">    temp = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> input_lst:</span><br><span class="line">        <span class="keyword">if</span> num:  <span class="comment"># 0은 버림</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> temp:</span><br><span class="line">                temp = num</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> temp == num:</span><br><span class="line">                    lst.append(temp * <span class="number">2</span>)</span><br><span class="line">                    temp = <span class="number">0</span></span><br><span class="line">                <span class="keyword">else</span>:  <span class="comment"># 숫자가 다르면 num -&gt; temp -&gt; lst</span></span><br><span class="line">                    lst.append(temp)</span><br><span class="line">                    temp = num</span><br><span class="line">    <span class="keyword">if</span> temp: <span class="comment"># temp가 남아있으면</span></span><br><span class="line">        lst.append(temp)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 길이 맞추기(0추가)</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(len(input_lst) - len(lst)):</span><br><span class="line">        lst.append(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> lst</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N, ori = input().split()</span><br><span class="line">    N = int(N)</span><br><span class="line">    my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    print(<span class="string">'#&#123;&#125;'</span>.format(test_case))</span><br><span class="line">    <span class="keyword">if</span> ori == <span class="string">'up'</span>:</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            temp = []</span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">                temp.append(my_map[r][c])</span><br><span class="line">            temp = gravity(temp)</span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">                my_map[r][c] = temp[r]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> ori == <span class="string">'down'</span>:</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            temp = []</span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">                temp.append(my_map[<span class="number">-1</span>-r][c])</span><br><span class="line">            temp = gravity(temp)</span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">                my_map[<span class="number">-1</span>-r][c] = temp[r]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> ori == <span class="string">'left'</span>:</span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">            my_map[r] = gravity(my_map[r])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> ori == <span class="string">'right'</span>:</span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">            my_map[r] = gravity(my_map[r][::<span class="number">-1</span>])[::<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        print(*my_map[r])</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>SSAFY</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 5656. [모의 SW 역량테스트] 벽돌 깨기</title>
    <url>/2020/02/06/SWEA_5656/</url>
    <content><![CDATA[<h3 id="5656-모의-sw-역량테스트-벽돌-깨기"><a class="markdownIt-Anchor" href="#5656-모의-sw-역량테스트-벽돌-깨기"></a> 5656. [모의 SW 역량테스트] 벽돌 깨기</h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRQm6qfL0DFAUo" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> product</span><br><span class="line"><span class="keyword">from</span> copy <span class="keyword">import</span> deepcopy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bomb</span><span class="params">(power, y, x)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> ori <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        ny = y + dy[ori]</span><br><span class="line">        nx = x + dx[ori]</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; W <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; H:</span><br><span class="line">            Q.append((power - <span class="number">1</span>, ny, nx, ori))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flame</span><span class="params">(fire, y, x, ori)</span>:</span></span><br><span class="line">    ny = y + dy[ori]</span><br><span class="line">    nx = x + dx[ori]</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt;= ny &lt; W <span class="keyword">and</span> <span class="number">0</span> &lt;= nx &lt; H:</span><br><span class="line">        Q.append((fire - <span class="number">1</span>, ny, nx, ori))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 상 하 좌 우</span></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N, W, H = map(int, input().split())</span><br><span class="line">    my_map = [deque() <span class="keyword">for</span> _ <span class="keyword">in</span> range(W)]</span><br><span class="line">    b_cnt = [<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(W)]</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(H):</span><br><span class="line">        temp = tuple(map(int, input().split()))</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(W):</span><br><span class="line">            my_map[i].appendleft(temp[i])</span><br><span class="line">            <span class="keyword">if</span> temp[i]:</span><br><span class="line">                b_cnt[i] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    result = float(<span class="string">'inf'</span>)</span><br><span class="line">    Q = deque()</span><br><span class="line">    <span class="keyword">for</span> balls <span class="keyword">in</span> product(range(W), repeat=N):</span><br><span class="line">        sub_map = deepcopy(my_map)</span><br><span class="line">        block_cnt = b_cnt[:]</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> balls:</span><br><span class="line">            remove_cnt = [<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(W)]</span><br><span class="line">            <span class="comment"># 공이 맞을 위치 x 찾기</span></span><br><span class="line">            <span class="keyword">if</span> block_cnt[y]:</span><br><span class="line">                x = block_cnt[y] - <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment"># 땅에 떨어짐</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">			</span><br><span class="line">            <span class="comment"># 공 떨어짐</span></span><br><span class="line">            remove_cnt[y] += <span class="number">1</span></span><br><span class="line">            power = sub_map[y][x]</span><br><span class="line">            sub_map[y][x] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> power &gt; <span class="number">1</span>:</span><br><span class="line">                bomb(power, y, x)  <span class="comment"># 폭탄 터짐</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> Q:</span><br><span class="line">                fire, y, x, ori = Q.pop()</span><br><span class="line">                <span class="keyword">if</span> sub_map[y][x]:</span><br><span class="line">                    remove_cnt[y] += <span class="number">1</span></span><br><span class="line">                    power = sub_map[y][x]</span><br><span class="line">                    sub_map[y][x] = <span class="number">0</span></span><br><span class="line">                    <span class="keyword">if</span> power &gt; <span class="number">1</span>:</span><br><span class="line">                        bomb(power, y, x)  <span class="comment"># 폭탄 터짐</span></span><br><span class="line">                <span class="keyword">if</span> fire &gt; <span class="number">1</span>:</span><br><span class="line">                    flame(fire, y, x, ori)  <span class="comment"># 불길 번짐</span></span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> range(W):</span><br><span class="line">                block_cnt[r] -= remove_cnt[r]</span><br><span class="line">                <span class="keyword">for</span> _ <span class="keyword">in</span> range(remove_cnt[r]):  <span class="comment"># 중력 적용</span></span><br><span class="line">                    sub_map[r].remove(<span class="number">0</span>)</span><br><span class="line">                    sub_map[r].append(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 결과</span></span><br><span class="line">        cnt = sum(block_cnt)</span><br><span class="line">        <span class="keyword">if</span> result &gt; cnt:  <span class="comment"># 갱신</span></span><br><span class="line">            result = cnt</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cnt:  <span class="comment"># 클리어</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 출력</span></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 1247. [S/W 문제해결 응용] 3일차 - 최적 경로</title>
    <url>/2020/02/06/SWEA_1247/</url>
    <content><![CDATA[<h3 id="1247-최적-경로-d5"><a class="markdownIt-Anchor" href="#1247-최적-경로-d5"></a> 1247. 최적 경로 <code>D5</code></h3>
<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV15OZ4qAPICFAYD" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> permutations</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input())</span><br><span class="line">    data = list(map(int, input().split()))</span><br><span class="line">    office = (data[<span class="number">0</span>], data[<span class="number">1</span>])</span><br><span class="line">    home = (data[<span class="number">2</span>], data[<span class="number">3</span>])</span><br><span class="line">    clients = [(data[<span class="number">2</span>*i + <span class="number">4</span>], data[<span class="number">2</span>*i + <span class="number">5</span>]) <span class="keyword">for</span> i <span class="keyword">in</span> range(N)]</span><br><span class="line">    result = float(<span class="string">'inf'</span>)</span><br><span class="line">    <span class="keyword">for</span> root <span class="keyword">in</span> permutations(clients):</span><br><span class="line">        sub_res = <span class="number">0</span></span><br><span class="line">        before = office</span><br><span class="line">        <span class="keyword">for</span> cli <span class="keyword">in</span> root:</span><br><span class="line">            sub_res += abs(cli[<span class="number">0</span>] - before[<span class="number">0</span>]) + abs(cli[<span class="number">1</span>] - before[<span class="number">1</span>])</span><br><span class="line">            before = cli</span><br><span class="line">        sub_res += abs(home[<span class="number">0</span>] - before[<span class="number">0</span>]) + abs(home[<span class="number">1</span>] - before[<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> sub_res &lt; result:</span><br><span class="line">            result = sub_res</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>SSAFY</tag>
      </tags>
  </entry>
  <entry>
    <title>[SSAFY] 20200206</title>
    <url>/2020/02/06/Algorithm_0206/</url>
    <content><![CDATA[<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#2001-%ED%8C%8C%EB%A6%AC-%ED%87%B4%EC%B9%98-d2">2001. 파리 퇴치 <code>D2</code></a></li>
<li><a href="#5356-%EC%9D%98%EC%84%9D%EC%9D%B4%EC%9D%98-%EC%84%B8%EB%A1%9C%EB%A1%9C-%EB%A7%90%ED%95%B4%EC%9A%94-d3">5356. 의석이의 세로로 말해요 <code>D3</code></a></li>
<li><a href="#4615-%EC%9E%AC%EB%AF%B8%EC%9E%88%EB%8A%94-%EC%98%A4%EC%85%80%EB%A1%9C-%EA%B2%8C%EC%9E%84-d3">4615. 재미있는 오셀로 게임 <code>D3</code></a></li>
<li><a href="#1210-sw-%EB%AC%B8%EC%A0%9C%ED%95%B4%EA%B2%B0-%EA%B8%B0%EB%B3%B8-2%EC%9D%BC%EC%B0%A8-ladder1-d4">1210. [S/W 문제해결 기본] 2일차 - Ladder1 <code>D4</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="2001-파리-퇴치-d2"><a class="markdownIt-Anchor" href="#2001-파리-퇴치-d2"></a> 2001. 파리 퇴치 <code>D2</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PzOCKAigDFAUq" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line">    my_map = [tuple(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    result = <span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N - M + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N - M + <span class="number">1</span>):</span><br><span class="line">            sub_res = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> dr <span class="keyword">in</span> range(M):</span><br><span class="line">                <span class="keyword">for</span> dc <span class="keyword">in</span> range(M):</span><br><span class="line">                    sub_res += my_map[r+dr][c+dc]</span><br><span class="line">            <span class="keyword">if</span> result &lt; sub_res:</span><br><span class="line">                result = sub_res</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5356-의석이의-세로로-말해요-d3"><a class="markdownIt-Anchor" href="#5356-의석이의-세로로-말해요-d3"></a> 5356. 의석이의 세로로 말해요 <code>D3</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWVWgkP6sQ0DFAUO" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    my_lst = [<span class="string">''</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">15</span>)]</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        data = input()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(data)):</span><br><span class="line">            my_lst[i] += data[i]</span><br><span class="line">    print(<span class="string">'#&#123;&#125; '</span>.format(test_case), *my_lst, sep=<span class="string">''</span>)</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="4615-재미있는-오셀로-게임-d3"><a class="markdownIt-Anchor" href="#4615-재미있는-오셀로-게임-d3"></a> 4615. 재미있는 오셀로 게임 <code>D3</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWQmA4uK8ygDFAXj" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">(y, x, color, i)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span>(<span class="number">0</span> &lt;= y &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= x &lt; N) <span class="keyword">or</span> my_map[y][x] == <span class="number">0</span>:  <span class="comment"># 뒤집기 실패 리턴</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> my_map[y][x] == color:  <span class="comment"># 뒤집기 성공 리턴</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 뒤집기 성공하면</span></span><br><span class="line">        <span class="keyword">if</span> my_func(y + dy[i], x + dx[i], color, i):</span><br><span class="line">            my_map[y][x] = color <span class="comment"># 뒤집기</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line">    my_map = [[<span class="number">0</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 첫 돌 놓기</span></span><br><span class="line">    my_map[N // <span class="number">2</span>][N // <span class="number">2</span>] = my_map[N // <span class="number">2</span> - <span class="number">1</span>][N // <span class="number">2</span> - <span class="number">1</span>] = <span class="number">2</span></span><br><span class="line">    my_map[N // <span class="number">2</span> - <span class="number">1</span>][N // <span class="number">2</span>] = my_map[N // <span class="number">2</span>][N // <span class="number">2</span> - <span class="number">1</span>] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    dx = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>]</span><br><span class="line">    dy = [<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 게임 시작</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(M):</span><br><span class="line">        x, y, color = map(int, input().split())</span><br><span class="line">        x -= <span class="number">1</span>  <span class="comment"># 인덱스 맞추기</span></span><br><span class="line">        y -= <span class="number">1</span></span><br><span class="line">        my_map[y][x] = color  <span class="comment"># 돌 놓기</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">8</span>):  <span class="comment"># 뒤집기 탐색</span></span><br><span class="line">            my_func(y + dy[j], x + dx[j], color, j)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 돌 카운트</span></span><br><span class="line">    black = white = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">if</span> my_map[r][c] == <span class="number">1</span>:</span><br><span class="line">                black += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> my_map[r][c] == <span class="number">2</span>:</span><br><span class="line">                white += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125; &#123;&#125;'</span>.format(test_case, black, white))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="1210-sw-문제해결-기본-2일차-ladder1-d4"><a class="markdownIt-Anchor" href="#1210-sw-문제해결-기본-2일차-ladder1-d4"></a> 1210. [S/W 문제해결 기본] 2일차 - Ladder1 <code>D4</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV14ABYKADACFAYh" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> T <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    test_case = int(input())</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 초기 설정</span></span><br><span class="line">    my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">100</span>)]</span><br><span class="line">    r = <span class="number">99</span></span><br><span class="line">    c = <span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">        <span class="keyword">if</span> my_map[<span class="number">99</span>][i] == <span class="number">2</span>:</span><br><span class="line">            c = i</span><br><span class="line">            </span><br><span class="line">    <span class="comment"># 탐색</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        my_map[r][c] = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> c <span class="number">-1</span> &gt;= <span class="number">0</span> <span class="keyword">and</span> my_map[r][c<span class="number">-1</span>]:</span><br><span class="line">            c -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> c + <span class="number">1</span> &lt; <span class="number">100</span> <span class="keyword">and</span> my_map[r][c+<span class="number">1</span>]:</span><br><span class="line">            c += <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> r - <span class="number">1</span> &gt;= <span class="number">0</span>:</span><br><span class="line">            r -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, c))</span><br></pre></td></tr></table></figure>
<ul>
<li>코딩 테스트 준비</li>
</ul>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>SSAFY</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 13458. 시험 감독</title>
    <url>/2020/02/05/BOJ_13458/</url>
    <content><![CDATA[<h3 id="13458-시험-감독"><a class="markdownIt-Anchor" href="#13458-시험-감독"></a> 13458. 시험 감독</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/13458" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">N = int(input())</span><br><span class="line">A = map(int, input().split())</span><br><span class="line">B, C = map(int, input().split())</span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> A:</span><br><span class="line">    result += <span class="number">1</span></span><br><span class="line">    i -= B</span><br><span class="line">    <span class="keyword">if</span> i &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> i % C:</span><br><span class="line">            result += <span class="number">1</span></span><br><span class="line">        result += i // C</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>DP</tag>
        <tag>삼성 SW 역량 테스트</tag>
      </tags>
  </entry>
  <entry>
    <title>[SSAFY] 20200205</title>
    <url>/2020/02/05/Algorithm_0205/</url>
    <content><![CDATA[<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#2005-%ED%8C%8C%EC%8A%A4%EC%B9%BC%EC%9D%98-%EC%82%BC%EA%B0%81%ED%98%95-d2">2005. 파스칼의 삼각형 <code>D2</code></a></li>
<li><a href="#4047-%EC%98%81%EC%A4%80%EC%9D%B4%EC%9D%98-%EC%B9%B4%EB%93%9C-%EC%B9%B4%EC%9A%B4%ED%8C%85-d3">4047. 영준이의 카드 카운팅 <code>D3</code></a></li>
<li><a href="#4751-%EB%8B%A4%EC%86%94%EC%9D%B4%EC%9D%98-%EB%8B%A4%EC%9D%B4%EC%95%84%EB%AA%AC%EB%93%9C-%EC%9E%A5%EC%8B%9D-d3">4751. 다솔이의 다이아몬드 장식 <code>D3</code></a></li>
<li><a href="#6190-%EC%A0%95%EA%B3%A4%EC%9D%B4%EC%9D%98-%EB%8B%A8%EC%A1%B0-%EC%A6%9D%EA%B0%80%ED%95%98%EB%8A%94-%EC%88%98-d3">6190. 정곤이의 단조 증가하는 수 <code>D3</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="2005-파스칼의-삼각형-d2"><a class="markdownIt-Anchor" href="#2005-파스칼의-삼각형-d2"></a> 2005. 파스칼의 삼각형 <code>D2</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5P0-h6Ak4DFAUq" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N = int(input())</span><br><span class="line">    print(<span class="string">'#&#123;&#125;'</span>.format(test_case))</span><br><span class="line">    my_map = [[<span class="number">0</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        my_map[i][i] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(r):</span><br><span class="line">            <span class="keyword">if</span> <span class="number">0</span> &lt;= r - <span class="number">1</span>:</span><br><span class="line">                my_map[r][c] += my_map[r<span class="number">-1</span>][c]</span><br><span class="line">                <span class="keyword">if</span> <span class="number">0</span> &lt;= c - <span class="number">1</span>:</span><br><span class="line">                    my_map[r][c] += my_map[r<span class="number">-1</span>][c<span class="number">-1</span>]</span><br><span class="line">        print(*my_map[r][:r+<span class="number">1</span>])</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="4047-영준이의-카드-카운팅-d3"><a class="markdownIt-Anchor" href="#4047-영준이의-카드-카운팅-d3"></a> 4047. 영준이의 카드 카운팅 <code>D3</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWIsY84KEPMDFAWN" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_generator</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(data)//<span class="number">3</span>):</span><br><span class="line">        <span class="keyword">if</span> data[i*<span class="number">3</span>] == <span class="string">'S'</span>: card = <span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> data[i*<span class="number">3</span>] == <span class="string">'D'</span>: card = <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> data[i*<span class="number">3</span>] == <span class="string">'H'</span>: card = <span class="number">2</span></span><br><span class="line">        <span class="keyword">elif</span> data[i*<span class="number">3</span>] == <span class="string">'C'</span>: card = <span class="number">3</span></span><br><span class="line">        <span class="keyword">yield</span> card, int(data[i*<span class="number">3</span>+<span class="number">1</span> : i*<span class="number">3</span>+<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    cards = [[] <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">4</span>)]</span><br><span class="line">    cnt = [<span class="number">13</span>] * <span class="number">4</span></span><br><span class="line">    <span class="keyword">for</span> card, num <span class="keyword">in</span> my_generator(input()):</span><br><span class="line">        <span class="keyword">if</span> num <span class="keyword">in</span> cards[card]:</span><br><span class="line">            print(<span class="string">'#&#123;&#125; ERROR'</span>.format(test_case))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            cards[card].append(num)</span><br><span class="line">            cnt[card] -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'#&#123;&#125;'</span>.format(test_case), *cnt)</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="4751-다솔이의-다이아몬드-장식-d3"><a class="markdownIt-Anchor" href="#4751-다솔이의-다이아몬드-장식-d3"></a> 4751. 다솔이의 다이아몬드 장식 <code>D3</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWSNw5jKzwMDFAUr" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    data = input()</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> data:</span><br><span class="line">        print(<span class="string">'..#.'</span>, end=<span class="string">''</span>)</span><br><span class="line">    print(<span class="string">'.'</span>)</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> data:</span><br><span class="line">        print(<span class="string">'.#.#'</span>, end=<span class="string">''</span>)</span><br><span class="line">    print(<span class="string">'.'</span>)</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> data:</span><br><span class="line">        print(<span class="string">'#.&#123;&#125;.'</span>.format(c), end=<span class="string">''</span>)</span><br><span class="line">    print(<span class="string">'#'</span>)</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> data:</span><br><span class="line">        print(<span class="string">'.#.#'</span>, end=<span class="string">''</span>)</span><br><span class="line">    print(<span class="string">'.'</span>)</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> data:</span><br><span class="line">        print(<span class="string">'..#.'</span>, end=<span class="string">''</span>)</span><br><span class="line">    print(<span class="string">'.'</span>)</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="6190-정곤이의-단조-증가하는-수-d3"><a class="markdownIt-Anchor" href="#6190-정곤이의-단조-증가하는-수-d3"></a> 6190. 정곤이의 단조 증가하는 수 <code>D3</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWcPjEuKAFgDFAU4" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N = int(input())</span><br><span class="line">    A = list(map(int, input().split()))</span><br><span class="line">    result = <span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>, N):</span><br><span class="line">            num = A[i] * A[j]</span><br><span class="line">            before = <span class="number">10</span></span><br><span class="line">            <span class="keyword">while</span> num &gt;= <span class="number">1</span>:</span><br><span class="line">                n1 = num % <span class="number">10</span></span><br><span class="line">                num //= <span class="number">10</span></span><br><span class="line">                <span class="keyword">if</span> before &lt; n1:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                before = n1</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                num = A[i] * A[j]</span><br><span class="line">                <span class="keyword">if</span> result &lt; num:</span><br><span class="line">                    result = num</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>SSAFY</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 3190. 뱀</title>
    <url>/2020/02/05/BOJ_3190/</url>
    <content><![CDATA[<h3 id="3190-뱀"><a class="markdownIt-Anchor" href="#3190-뱀"></a> 3190. 뱀</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/3190" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_int</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> data.isdigit():</span><br><span class="line">        <span class="keyword">return</span> int(data)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">N = int(input())</span><br><span class="line">apple = [[<span class="literal">False</span>] * (N+<span class="number">1</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N+<span class="number">1</span>)]</span><br><span class="line">visited = [[<span class="literal">False</span>] * (N+<span class="number">1</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N+<span class="number">1</span>)]  <span class="comment"># 뱀 몸통</span></span><br><span class="line">BAAM = deque()  <span class="comment"># 뱀 경로 저장</span></span><br><span class="line"></span><br><span class="line">K = int(input())</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(K):</span><br><span class="line">    y, x = map(int, input().split())</span><br><span class="line">    apple[y][x] = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">L = int(input())</span><br><span class="line">L_list = deque()</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(L):</span><br><span class="line">    L_list.append(tuple(map(my_int, input().split())))</span><br><span class="line"></span><br><span class="line">dx = [<span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>]</span><br><span class="line">dy = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">c_y = c_x = <span class="number">1</span>  <span class="comment"># 현재 좌표</span></span><br><span class="line">n_y = n_x = <span class="number">1</span>  <span class="comment"># 다음 좌표</span></span><br><span class="line">ori = <span class="number">0</span>  <span class="comment"># 오른쪽 방향(0~3 : right, down, left, up)</span></span><br><span class="line">t = <span class="number">0</span>  <span class="comment"># 시간</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    visited[c_y][c_x] = <span class="literal">True</span></span><br><span class="line">    BAAM.append((c_y, c_x))</span><br><span class="line">    t += <span class="number">1</span></span><br><span class="line">    <span class="comment">#방향으로 전진(탐색 가능여부)</span></span><br><span class="line">    n_y, n_x = c_y + dy[ori], c_x + dx[ori]</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt; n_y &lt;= N <span class="keyword">and</span> <span class="number">0</span> &lt; n_x &lt;= N <span class="keyword">and</span> <span class="keyword">not</span> visited[n_y][n_x]:  <span class="comment"># 직진 가능</span></span><br><span class="line">        c_y, c_x = n_y, n_x  <span class="comment"># 직진</span></span><br><span class="line">        <span class="keyword">if</span> apple[c_y][c_x]:  <span class="comment"># 사과 먹으면</span></span><br><span class="line">            apple[c_y][c_x] = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            y, x = BAAM.popleft()</span><br><span class="line">            visited[y][x] = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> L_list <span class="keyword">and</span> L_list[<span class="number">0</span>][<span class="number">0</span>] == t:  <span class="comment"># 방향 전환</span></span><br><span class="line">            handle = L_list.popleft()[<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> handle == <span class="string">'D'</span>:</span><br><span class="line">                ori = (ori + <span class="number">1</span>) % <span class="number">4</span></span><br><span class="line">            <span class="keyword">elif</span> handle == <span class="string">'L'</span>:</span><br><span class="line">                ori = (ori - <span class="number">1</span>) % <span class="number">4</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(t)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 12100. 2048 (Easy)</title>
    <url>/2020/02/04/BOJ_12100/</url>
    <content><![CDATA[<h3 id="12100-2048-easy"><a class="markdownIt-Anchor" href="#12100-2048-easy"></a> 12100. 2048 (Easy)</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/12100" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_move</span><span class="params">(lst)</span>:</span></span><br><span class="line">    temp1 = deque()</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(N):</span><br><span class="line">        n1 = lst.pop()</span><br><span class="line">        <span class="keyword">if</span> n1:</span><br><span class="line">            temp1.appendleft(n1)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            temp1.append(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, N):</span><br><span class="line">        <span class="keyword">if</span> temp1[i - <span class="number">1</span>] == temp1[i]:</span><br><span class="line">            temp1[i - <span class="number">1</span>] *= <span class="number">2</span></span><br><span class="line">            temp1[i] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    temp2 = deque()</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(N):</span><br><span class="line">        n2 = temp1.pop()</span><br><span class="line">        <span class="keyword">if</span> n2:</span><br><span class="line">            temp2.appendleft(n2)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            temp2.append(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> temp2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">N = int(input())</span><br><span class="line">my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line">dy = [<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">roots = [(n1, n2, n3, n4, n5) <span class="keyword">for</span> n1 <span class="keyword">in</span> range(<span class="number">4</span>)</span><br><span class="line">         <span class="keyword">for</span> n2 <span class="keyword">in</span> range(<span class="number">4</span>)</span><br><span class="line">         <span class="keyword">for</span> n3 <span class="keyword">in</span> range(<span class="number">4</span>)</span><br><span class="line">         <span class="keyword">for</span> n4 <span class="keyword">in</span> range(<span class="number">4</span>)</span><br><span class="line">         <span class="keyword">for</span> n5 <span class="keyword">in</span> range(<span class="number">4</span>)]</span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"><span class="comment">#result_map = None</span></span><br><span class="line"><span class="keyword">for</span> root <span class="keyword">in</span> roots:</span><br><span class="line">    sub_map = copy.deepcopy(my_map)</span><br><span class="line">    <span class="keyword">for</span> ori <span class="keyword">in</span> root:</span><br><span class="line">        <span class="keyword">if</span> ori == <span class="number">0</span>:  <span class="comment"># up</span></span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">                temp = deque()</span><br><span class="line">                <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">                    temp.append(sub_map[r][c])</span><br><span class="line">                temp = my_move(temp)</span><br><span class="line">                <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">                    sub_map[r][c] = temp[r]</span><br><span class="line">        <span class="keyword">elif</span> ori == <span class="number">1</span>:  <span class="comment"># down</span></span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">                temp = deque()</span><br><span class="line">                <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">                    temp.append(sub_map[<span class="number">-1</span>-r][c])</span><br><span class="line">                temp = my_move(temp)</span><br><span class="line">                <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">                    sub_map[<span class="number">-1</span>-r][c] = temp[r]</span><br><span class="line">        <span class="keyword">elif</span> ori == <span class="number">2</span>:  <span class="comment"># right</span></span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">                temp = deque()</span><br><span class="line">                <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">                    temp.append(sub_map[r][<span class="number">-1</span>-c])</span><br><span class="line">                temp = my_move(temp)</span><br><span class="line">                <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">                    sub_map[r][<span class="number">-1</span>-c] = temp[c]</span><br><span class="line">        <span class="keyword">elif</span> ori == <span class="number">3</span>:  <span class="comment"># left</span></span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">                temp = deque()</span><br><span class="line">                <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">                    temp.append(sub_map[r][c])</span><br><span class="line">                temp = my_move(temp)</span><br><span class="line">                <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">                    sub_map[r][c] = temp[c]</span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">if</span> result &lt; sub_map[r][c]:</span><br><span class="line">                result = sub_map[r][c]</span><br><span class="line">                <span class="comment">#result_map = copy.deepcopy(sub_map)</span></span><br><span class="line">print(result)</span><br><span class="line"><span class="comment">#print(result_map)</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 2667. 단지번호붙이기</title>
    <url>/2020/02/04/BOJ_2667/</url>
    <content><![CDATA[<h3 id="2667-단지번호붙이기"><a class="markdownIt-Anchor" href="#2667-단지번호붙이기"></a> 2667. 단지번호붙이기</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/2667" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">N = int(input())</span><br><span class="line">my_map = [list(map(int, input())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">dx = [<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">dy = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>]</span><br><span class="line">result = []</span><br><span class="line">stack = []</span><br><span class="line">visited = [[<span class="literal">False</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">if</span> my_map[r][c] != <span class="number">0</span> <span class="keyword">and</span> <span class="keyword">not</span> visited[r][c]:</span><br><span class="line">            stack.append((r, c))</span><br><span class="line">            my_sum = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> stack:</span><br><span class="line">                y, x = stack.pop()</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> visited[y][x]:</span><br><span class="line">                    visited[y][x] = <span class="literal">True</span></span><br><span class="line">                    my_sum += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                        next_y, next_x = y + dy[i], x + dx[i]</span><br><span class="line">                        <span class="keyword">if</span> <span class="number">0</span> &lt;= next_y &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= next_x &lt; N <span class="keyword">and</span> \</span><br><span class="line">                        my_map[next_y][next_x] <span class="keyword">and</span> <span class="keyword">not</span> visited[next_y][next_x]:</span><br><span class="line">                            stack.append((next_y, next_x))</span><br><span class="line">            result.append(my_sum)</span><br><span class="line">result.sort()</span><br><span class="line">print(len(result))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(result)):</span><br><span class="line">    print(result[i])</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SSAFY</tag>
        <tag>BOJ</tag>
        <tag>DFS</tag>
      </tags>
  </entry>
  <entry>
    <title>[BOJ] 13460. 구슬 탈출 2</title>
    <url>/2020/02/03/BOJ_13460/</url>
    <content><![CDATA[<h3 id="13460-구슬-탈출-2"><a class="markdownIt-Anchor" href="#13460-구슬-탈출-2"></a> 13460. 구슬 탈출 2</h3>
<ul>
<li><a href="https://www.acmicpc.net/problem/13460" target="_blank" rel="noopener">문제링크</a></li>
</ul>
<a id="more"></a>
<ul>
<li>내 코드</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">(r, b)</span>:</span></span><br><span class="line">    distance = <span class="number">0</span></span><br><span class="line">    orient = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    Q.append((r, b, distance, orient))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> Q:</span><br><span class="line">        red, blue, distance, orient = Q.popleft()</span><br><span class="line">        <span class="keyword">if</span> distance &gt;= <span class="number">10</span>: <span class="comment"># 10번 이상</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">        visited.add((red, blue))</span><br><span class="line">        next_orient = []</span><br><span class="line">        <span class="keyword">if</span> orient != <span class="string">'v'</span>:</span><br><span class="line">            next_orient.append(<span class="number">0</span>)  <span class="comment"># down</span></span><br><span class="line">            next_orient.append(<span class="number">1</span>)  <span class="comment"># up</span></span><br><span class="line">        <span class="keyword">if</span> orient != <span class="string">'h'</span>:</span><br><span class="line">            next_orient.append(<span class="number">2</span>)  <span class="comment"># right</span></span><br><span class="line">            next_orient.append(<span class="number">3</span>)  <span class="comment"># left</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> next_orient:</span><br><span class="line">            <span class="comment"># 맵에 R, B 놓기</span></span><br><span class="line">            my_map[red[<span class="number">0</span>]][red[<span class="number">1</span>]] = <span class="string">'R'</span></span><br><span class="line">            my_map[blue[<span class="number">0</span>]][blue[<span class="number">1</span>]] = <span class="string">'B'</span></span><br><span class="line"></span><br><span class="line">            (red_y, red_x), (blue_y, blue_x) = red, blue</span><br><span class="line"></span><br><span class="line">            <span class="comment"># B 움직임</span></span><br><span class="line">            back = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">while</span> my_map[blue_y + dy[i]][blue_x + dx[i]] <span class="keyword">in</span> <span class="string">'.R'</span>:</span><br><span class="line">                <span class="keyword">if</span> my_map[blue_y + dy[i]][blue_x + dx[i]] == <span class="string">'R'</span>:  <span class="comment"># A를 만남</span></span><br><span class="line">                    back = <span class="literal">True</span></span><br><span class="line">                blue_y += dy[i]</span><br><span class="line">                blue_x += dx[i]</span><br><span class="line">            <span class="keyword">if</span> my_map[blue_y + dy[i]][blue_x + dx[i]] == <span class="string">'O'</span>:  <span class="comment"># 파란공이 빠지면</span></span><br><span class="line">                <span class="comment"># R, B 빼기</span></span><br><span class="line">                my_map[red[<span class="number">0</span>]][red[<span class="number">1</span>]] = <span class="string">'.'</span></span><br><span class="line">                my_map[blue[<span class="number">0</span>]][blue[<span class="number">1</span>]] = <span class="string">'.'</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> back:  <span class="comment"># A가 앞에 있으면 한 칸 back</span></span><br><span class="line">                blue_y -= dy[i]</span><br><span class="line">                blue_x -= dx[i]</span><br><span class="line"></span><br><span class="line">            <span class="comment"># R 움직임</span></span><br><span class="line">            back = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">while</span> my_map[red_y + dy[i]][red_x + dx[i]] <span class="keyword">in</span> <span class="string">'.B'</span>:</span><br><span class="line">                <span class="keyword">if</span> my_map[red_y + dy[i]][red_x + dx[i]] == <span class="string">'B'</span>:  <span class="comment"># B를 만남</span></span><br><span class="line">                    back = <span class="literal">True</span></span><br><span class="line">                red_y += dy[i]</span><br><span class="line">                red_x += dx[i]</span><br><span class="line">            <span class="keyword">if</span> my_map[red_y + dy[i]][red_x + dx[i]] == <span class="string">'O'</span>:  <span class="comment"># 빨간공이 빠지면</span></span><br><span class="line">                <span class="keyword">return</span> distance + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> back: <span class="comment"># 한 칸 back</span></span><br><span class="line">                red_y -= dy[i]</span><br><span class="line">                red_x -= dx[i]</span><br><span class="line"></span><br><span class="line">            <span class="comment"># R, B 빼기</span></span><br><span class="line">            my_map[red[<span class="number">0</span>]][red[<span class="number">1</span>]] = <span class="string">'.'</span></span><br><span class="line">            my_map[blue[<span class="number">0</span>]][blue[<span class="number">1</span>]] = <span class="string">'.'</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 방향 저장</span></span><br><span class="line">            <span class="keyword">if</span> i == <span class="number">0</span> <span class="keyword">or</span> i == <span class="number">1</span>:</span><br><span class="line">                orient = <span class="string">'v'</span>  <span class="comment"># up, down</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                orient = <span class="string">'h'</span>  <span class="comment"># right, left</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 큐에 저장</span></span><br><span class="line">            <span class="keyword">if</span> ((red_y, red_x), (blue_y, blue_x)) <span class="keyword">not</span> <span class="keyword">in</span> visited:</span><br><span class="line">                Q.append(((red_y, red_x), (blue_y, blue_x), distance + <span class="number">1</span>, orient))</span><br><span class="line">    <span class="comment"># 경우의수가 없을 때</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 입력 받기</span></span><br><span class="line">N, M = map(int, input().split())</span><br><span class="line">my_map = [list(input()) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">Q = deque()</span><br><span class="line"><span class="comment"># down up right left</span></span><br><span class="line">dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>]</span><br><span class="line">dy = [<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"><span class="comment"># 공 찾기</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(M):</span><br><span class="line">        <span class="keyword">if</span> my_map[r][c] == <span class="string">'R'</span>:</span><br><span class="line">            red = (r, c)</span><br><span class="line">            my_map[r][c] = <span class="string">'.'</span></span><br><span class="line">        <span class="keyword">elif</span> my_map[r][c] == <span class="string">'B'</span>:</span><br><span class="line">            blue = (r, c)</span><br><span class="line">            my_map[r][c] = <span class="string">'.'</span></span><br><span class="line">visited = set()</span><br><span class="line">print(my_func(red, blue))</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>Baekjoon Online Judge</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>BOJ</tag>
        <tag>삼성 SW 역량 테스트</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>[SSAFY] 20200203</title>
    <url>/2020/02/03/Algorithm_0203/</url>
    <content><![CDATA[<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#1954-%EB%8B%AC%ED%8C%BD%EC%9D%B4-%EC%88%AB%EC%9E%90-d2">1954. 달팽이 숫자 <code>D2</code></a></li>
<li><a href="#1209-sum-d3">1209. Sum <code>D3</code></a></li>
<li><a href="#1259-%EA%B8%88%EC%86%8D%EB%A7%89%EB%8C%80-d5">1259. 금속막대 <code>D5</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="1954-달팽이-숫자-d2"><a class="markdownIt-Anchor" href="#1954-달팽이-숫자-d2"></a> 1954. 달팽이 숫자 <code>D2</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PobmqAPoDFAUq" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    print(<span class="string">'#&#123;&#125;'</span>.format(test_case))</span><br><span class="line">    N = int(input())</span><br><span class="line">    my_map = [[<span class="number">0</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    dx = [<span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>]</span><br><span class="line">    dy = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>]</span><br><span class="line">    ori = <span class="number">0</span></span><br><span class="line">    y = x = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + N ** <span class="number">2</span>):</span><br><span class="line">        my_map[y][x] = i</span><br><span class="line">        <span class="keyword">if</span> <span class="number">0</span>&lt;=y+dy[ori]&lt;N <span class="keyword">and</span> <span class="number">0</span>&lt;=x+dx[ori]&lt;N <span class="keyword">and</span> my_map[y+dy[ori]][x+dx[ori]] == <span class="number">0</span>:</span><br><span class="line">            y += dy[ori]</span><br><span class="line">            x += dx[ori]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> ori == <span class="number">3</span>:</span><br><span class="line">                ori = <span class="number">0</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ori += <span class="number">1</span></span><br><span class="line">            y += dy[ori]</span><br><span class="line">            x += dx[ori]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        print(*my_map[i])</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="1209-sum-d3"><a class="markdownIt-Anchor" href="#1209-sum-d3"></a> 1209. Sum <code>D3</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV13_BWKACUCFAYh" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    T = int(input())</span><br><span class="line">    my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">100</span>)]</span><br><span class="line">    </span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 가로줄</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">        my_sum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">            my_sum += my_map[r][c]</span><br><span class="line">        <span class="keyword">if</span> my_sum &gt; result:</span><br><span class="line">            result = my_sum</span><br><span class="line">    <span class="comment"># 세로줄</span></span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">        my_sum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">            my_sum += my_map[r][c]</span><br><span class="line">        <span class="keyword">if</span> my_sum &gt; result:</span><br><span class="line">            result = my_sum</span><br><span class="line">    <span class="comment"># 대각선 \</span></span><br><span class="line">    my_sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">        my_sum += my_map[i][i]</span><br><span class="line">    <span class="keyword">if</span> my_sum &gt; result:</span><br><span class="line">            result = my_sum</span><br><span class="line">    <span class="comment"># 대각선 /</span></span><br><span class="line">    my_sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">        my_sum += my_map[<span class="number">-1</span>-i][i]</span><br><span class="line">    <span class="keyword">if</span> my_sum &gt; result:</span><br><span class="line">            result = my_sum</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(T, result))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="1259-금속막대-d5"><a class="markdownIt-Anchor" href="#1259-금속막대-d5"></a> 1259. 금속막대 <code>D5</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV18NaZqIt8CFAZN" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> tc <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input())</span><br><span class="line">    data = list(map(int, input().split()))</span><br><span class="line">    Su = []</span><br><span class="line">    Am = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        Su.append(data[<span class="number">2</span> * i])</span><br><span class="line">        Am.append(data[<span class="number">2</span> * i + <span class="number">1</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">if</span> Su[i] <span class="keyword">not</span> <span class="keyword">in</span> Am:</span><br><span class="line">            res = [Su.pop(i), Am.pop(i)]</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">while</span> Su:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(Su)):</span><br><span class="line">            <span class="keyword">if</span> res[<span class="number">-1</span>] == Su[i]:</span><br><span class="line">                res.extend((Su.pop(i), Am.pop(i)))</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    print(<span class="string">'#&#123;&#125;'</span>.format(tc), *res)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>SSAFY</tag>
      </tags>
  </entry>
  <entry>
    <title>파이썬 SW문제해결 응용_구현 - 07 그래프의 최소 비용 문제</title>
    <url>/2020/02/02/Ad_GraphMST/</url>
    <content><![CDATA[<ul>
<li><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDYSqAAbw5UW6&amp;subjectId=AWUYHO7a2JoDFAVT" target="_blank" rel="noopener">문제링크</a></li>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#5249-%EC%B5%9C%EC%86%8C-%EC%8B%A0%EC%9E%A5-%ED%8A%B8%EB%A6%AC-d4">5249. 최소 신장 트리 <code>D4</code></a></li>
<li><a href="#5250-%EC%B5%9C%EC%86%8C-%EB%B9%84%EC%9A%A9-d3">5250. 최소 비용 <code>D3</code></a></li>
<li><a href="#5251-%EC%B5%9C%EC%86%8C-%EC%9D%B4%EB%8F%99-%EA%B1%B0%EB%A6%AC-d4">5251. 최소 이동 거리 <code>D4</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="5249-최소-신장-트리-d4"><a class="markdownIt-Anchor" href="#5249-최소-신장-트리-d4"></a> 5249. 최소 신장 트리 <code>D4</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">MST_PRIM</span><span class="params">(G)</span>:</span></span><br><span class="line">    key = [float(<span class="string">'inf'</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(V + <span class="number">1</span>)]</span><br><span class="line">    pi = [<span class="literal">None</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(V + <span class="number">1</span>)]</span><br><span class="line">    visited = [<span class="literal">False</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(V + <span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line">    key[<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(V + <span class="number">1</span>):</span><br><span class="line">        <span class="comment"># 최소 key (start 지점) 찾기</span></span><br><span class="line">        min_key = float(<span class="string">'inf'</span>)</span><br><span class="line">        start = <span class="number">-1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(V + <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> key[i] &lt; min_key <span class="keyword">and</span> <span class="keyword">not</span> visited[i]:</span><br><span class="line">                min_key = key[i]</span><br><span class="line">                start = i</span><br><span class="line">        <span class="comment"># 방문 &amp; 주변 key값 갱신</span></span><br><span class="line">        visited[start] = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">for</span> next_v, next_w <span class="keyword">in</span> G[start]:</span><br><span class="line">            <span class="keyword">if</span> next_w &lt; key[next_v] <span class="keyword">and</span> <span class="keyword">not</span> visited[next_v]:</span><br><span class="line">                key[next_v] = next_w</span><br><span class="line">                pi[next_v] = start</span><br><span class="line">    <span class="keyword">return</span> sum(key)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    V, E = map(int, input().split())</span><br><span class="line">    my_graph = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(E):</span><br><span class="line">        n1, n2, w = map(int, input().split())</span><br><span class="line">        <span class="keyword">if</span> n1 <span class="keyword">not</span> <span class="keyword">in</span> my_graph:</span><br><span class="line">            my_graph[n1] = set()</span><br><span class="line">        <span class="keyword">if</span> n2 <span class="keyword">not</span> <span class="keyword">in</span> my_graph:</span><br><span class="line">            my_graph[n2] = set()</span><br><span class="line">        my_graph[n1].add((n2, w))</span><br><span class="line">        my_graph[n2].add((n1, w))</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, MST_PRIM(my_graph)))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5250-최소-비용-d3"><a class="markdownIt-Anchor" href="#5250-최소-비용-d3"></a> 5250. 최소 비용 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Dijkstra</span><span class="params">(my_map)</span>:</span></span><br><span class="line">    key = [[float(<span class="string">'inf'</span>)] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]  <span class="comment"># 연료 사용량</span></span><br><span class="line">    confirm = [[<span class="literal">False</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]  <span class="comment"># key값 확정 여부</span></span><br><span class="line">    key[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">    check = set()  <span class="comment"># 탐색 할 범위</span></span><br><span class="line">    check.add((<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 최소 key 찾기</span></span><br><span class="line">        min_key = float(<span class="string">'inf'</span>)</span><br><span class="line">        <span class="keyword">for</span> r, c <span class="keyword">in</span> check:</span><br><span class="line">            <span class="keyword">if</span> key[r][c] &lt; min_key <span class="keyword">and</span> <span class="keyword">not</span> confirm[r][c]:</span><br><span class="line">                min_key = key[r][c]</span><br><span class="line">                y, x = r, c</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 최소 key 확정</span></span><br><span class="line">        confirm[y][x] = <span class="literal">True</span></span><br><span class="line">        check.remove((y, x))</span><br><span class="line">        <span class="comment"># 도착지점이면</span></span><br><span class="line">        <span class="keyword">if</span> y == x == N - <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> key[y][x]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 다음 지점 찾기</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">            nx, ny = x + dx[i], y + dy[i]</span><br><span class="line">            <span class="keyword">if</span> <span class="number">0</span> &lt;= nx &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= ny &lt; N <span class="keyword">and</span> <span class="keyword">not</span> confirm[ny][nx]:</span><br><span class="line">                <span class="comment"># 연료 계산</span></span><br><span class="line">                <span class="keyword">if</span> my_map[y][x] &lt; my_map[ny][nx]:</span><br><span class="line">                    fuel = key[y][x] + my_map[ny][nx] - my_map[y][x] + <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    fuel = key[y][x] + <span class="number">1</span></span><br><span class="line">                <span class="comment"># key 갱신</span></span><br><span class="line">                <span class="keyword">if</span> fuel &lt; key[ny][nx]:</span><br><span class="line">                    key[ny][nx] = fuel</span><br><span class="line">                    check.add((ny, nx))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input())</span><br><span class="line">    my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    <span class="comment"># right down left up</span></span><br><span class="line">    dx = [<span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>]</span><br><span class="line">    dy = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>]</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, Dijkstra(my_map)))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5251-최소-이동-거리-d4"><a class="markdownIt-Anchor" href="#5251-최소-이동-거리-d4"></a> 5251. 최소 이동 거리 <code>D4</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">short_path</span><span class="params">()</span>:</span></span><br><span class="line">    key = [float(<span class="string">'inf'</span>)] * (N + <span class="number">1</span>)</span><br><span class="line">    visited = [<span class="literal">False</span>] * (N + <span class="number">1</span>)</span><br><span class="line">    check = set() <span class="comment"># key 최소값 찾을 범위</span></span><br><span class="line">    check.add(<span class="number">0</span>)</span><br><span class="line">    key[<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># key 최소값 찾기</span></span><br><span class="line">        min_key = float(<span class="string">'inf'</span>)</span><br><span class="line">        s = <span class="number">-1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> check:</span><br><span class="line">            <span class="keyword">if</span> key[i] &lt; min_key:</span><br><span class="line">                min_key = key[i]</span><br><span class="line">                s = i</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 확정</span></span><br><span class="line">        visited[s] = <span class="literal">True</span></span><br><span class="line">        check.remove(s)</span><br><span class="line">        <span class="keyword">if</span> s == N:</span><br><span class="line">            <span class="keyword">return</span> key[s]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 다음 정점 key 갱신</span></span><br><span class="line">        <span class="keyword">for</span> e, w <span class="keyword">in</span> link[s]:</span><br><span class="line">            <span class="keyword">if</span> key[e] &gt; key[s] + w <span class="keyword">and</span> <span class="keyword">not</span> visited[e]:</span><br><span class="line">                key[e] = key[s] + w</span><br><span class="line">                check.add(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N, E = map(int, input().split())</span><br><span class="line">    link = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(E):</span><br><span class="line">        s, e, w = map(int, input().split())</span><br><span class="line">        <span class="keyword">if</span> s <span class="keyword">not</span> <span class="keyword">in</span> link:</span><br><span class="line">            link[s] = [(e, w)]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            link[s] += [(e, w)]</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, short_path()))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Advanced</tag>
        <tag>SEWA</tag>
      </tags>
  </entry>
  <entry>
    <title>파이썬 SW문제해결 응용_구현 - 06 그래프의 기본과 탐색</title>
    <url>/2020/02/01/Ad_GraphBasic/</url>
    <content><![CDATA[<ul>
<li><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDYSqAAbw5UW6&amp;subjectId=AWUYG3y62EcDFAVT" target="_blank" rel="noopener">문제링크</a></li>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#5247-%EC%97%B0%EC%82%B0-d4">5247. 연산 <code>D4</code></a></li>
<li><a href="#5248-%EA%B7%B8%EB%A3%B9-%EB%82%98%EB%88%84%EA%B8%B0-d3">5248. 그룹 나누기 <code>D3</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="5247-연산-d4"><a class="markdownIt-Anchor" href="#5247-연산-d4"></a> 5247. 연산 <code>D4</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 덱(deque)이 가장 빠른 결과 보여줌.</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_calc</span><span class="params">(num, calc)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> calc == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> num + <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> calc == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> num - <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> calc == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> num * <span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> calc == <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">return</span> num - <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">BFS</span><span class="params">(N, M)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> test_case</span><br><span class="line">    Q = deque()</span><br><span class="line">    Q.append((N, <span class="number">0</span>))</span><br><span class="line">    num_lst[N] = test_case</span><br><span class="line">    <span class="keyword">while</span> Q:</span><br><span class="line">        num, cnt = Q.popleft()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">            next_num = my_calc(num, i)</span><br><span class="line">            <span class="keyword">if</span> next_num == M:</span><br><span class="line">                <span class="keyword">return</span> cnt + <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> <span class="number">1</span> &lt;= next_num &lt;= <span class="number">1000000</span> <span class="keyword">and</span> num_lst[next_num] != test_case:</span><br><span class="line">                Q.append((next_num, cnt + <span class="number">1</span>))</span><br><span class="line">                num_lst[next_num] = test_case  <span class="comment"># 궤적</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line">num_lst = [<span class="number">0</span>] * <span class="number">1000001</span>  <span class="comment"># 탐색 궤적 리스트 (시간 단축용)</span></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, BFS(N, M)))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5248-그룹-나누기-d3"><a class="markdownIt-Anchor" href="#5248-그룹-나누기-d3"></a> 5248. 그룹 나누기 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">union</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    x = find_set(x)</span><br><span class="line">    y = find_set(y)</span><br><span class="line">    <span class="keyword">if</span> rank[x] &gt;= rank[y]:</span><br><span class="line">        parent[y] = x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        parent[x] = y</span><br><span class="line">    <span class="keyword">if</span> rank[x] == rank[y]:</span><br><span class="line">        rank[x] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_set</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> parent[x] == x:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> find_set(parent[x])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span>+ T):</span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line">    data = list(map(int, input().split()))</span><br><span class="line">    parent = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(N + <span class="number">1</span>)]</span><br><span class="line">    rank = [<span class="number">0</span>] * (N + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(M):</span><br><span class="line">        union(data[<span class="number">2</span> * i], data[<span class="number">2</span> * i + <span class="number">1</span>])</span><br><span class="line">    groups = set()</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + N):</span><br><span class="line">        groups.add(find_set(j))</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, len(groups)))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>Advanced</tag>
      </tags>
  </entry>
  <entry>
    <title>파이썬 SW문제해결 응용_구현 - 05 백트래킹</title>
    <url>/2020/01/31/Ad_BackTraking/</url>
    <content><![CDATA[<ul>
<li><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDYSqAAbw5UW6&amp;subjectId=AWUYGf7K180DFAVT" target="_blank" rel="noopener">문제링크</a></li>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#5208-%EC%A0%84%EA%B8%B0%EB%B2%84%EC%8A%A42-d3">5208. 전기버스2 <code>D3</code></a></li>
<li><a href="#5209-%EC%B5%9C%EC%86%8C-%EC%83%9D%EC%82%B0-%EB%B9%84%EC%9A%A9-d3">5209. 최소 생산 비용 <code>D3</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="5208-전기버스2-d3"><a class="markdownIt-Anchor" href="#5208-전기버스2-d3"></a> 5208. 전기버스2 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N, *M = map(int, input().split())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 초기값</span></span><br><span class="line">    bus = <span class="number">0</span></span><br><span class="line">    bus_battery = M[bus]</span><br><span class="line">    cnt = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> bus + bus_battery &lt; N - <span class="number">1</span>:</span><br><span class="line">        max_charge = <span class="number">0</span></span><br><span class="line">        next_bus = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(bus_battery, <span class="number">0</span>, <span class="number">-1</span>):  <span class="comment"># 갈 수 있는 충전소 중</span></span><br><span class="line">            charge = M[bus + i] - (bus_battery - i)  <span class="comment"># 충전가능한 양</span></span><br><span class="line">            <span class="keyword">if</span> charge &gt; max_charge:  <span class="comment"># 최대값을 찾아</span></span><br><span class="line">                max_charge = charge</span><br><span class="line">                next_bus = bus + i</span><br><span class="line">        <span class="keyword">if</span> next_bus <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            cnt = <span class="number">-1</span></span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 버스 이동 후 충전</span></span><br><span class="line">            bus = next_bus</span><br><span class="line">            bus_battery = M[bus]</span><br><span class="line">            cnt += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, cnt))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5209-최소-생산-비용-d3"><a class="markdownIt-Anchor" href="#5209-최소-생산-비용-d3"></a> 5209. 최소 생산 비용 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">backtraking</span><span class="params">(depth, sub_sum)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> my_min</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">if</span> check[i] <span class="keyword">is</span> <span class="literal">False</span>:  <span class="comment"># 중복 아님</span></span><br><span class="line">            check[i] = <span class="literal">True</span></span><br><span class="line">            sub_sum += chart[depth][i]</span><br><span class="line">            <span class="keyword">if</span> sub_sum &lt; my_min: <span class="comment"># 가치 있으면</span></span><br><span class="line">                <span class="keyword">if</span> depth == N - <span class="number">1</span>:  <span class="comment"># 끝 노드</span></span><br><span class="line">                    my_min = sub_sum  <span class="comment"># 최소값 갱신</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    backtraking(depth + <span class="number">1</span>, sub_sum)</span><br><span class="line">            sub_sum -= chart[depth][i]</span><br><span class="line">            check[i] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N = int(input())</span><br><span class="line">    chart = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    check = [<span class="literal">False</span>] * N</span><br><span class="line">    my_min = <span class="number">1500</span></span><br><span class="line">    backtraking(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, my_min))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>Advanced</tag>
      </tags>
  </entry>
  <entry>
    <title>파이썬 SW문제해결 응용_구현 - 04 분할 정복</title>
    <url>/2020/01/30/Ad_DivideAndConquer/</url>
    <content><![CDATA[<ul>
<li><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDYSqAAbw5UW6&amp;subjectId=AWUYFsQq11kDFAVT&amp;&amp;" target="_blank" rel="noopener">문제링크</a></li>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#5204-%EB%B3%91%ED%95%A9-%EC%A0%95%EB%A0%AC-d3">5204. 병합 정렬 <code>D3</code></a></li>
<li><a href="#5205-%ED%80%B5-%EC%A0%95%EB%A0%AC-d3">5205. 퀵 정렬 <code>D3</code></a></li>
<li><a href="#5207-%EC%9D%B4%EC%A7%84-%ED%83%90%EC%83%89-d3">5207. 이진 탐색 <code>D3</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="5204-병합-정렬-d3"><a class="markdownIt-Anchor" href="#5204-병합-정렬-d3"></a> 5204. 병합 정렬 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge</span><span class="params">(lst)</span>:</span></span><br><span class="line">    cnt = <span class="number">0</span></span><br><span class="line">    len_lst = len(lst)</span><br><span class="line">    <span class="keyword">if</span> len_lst &lt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> lst, cnt</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment">#분리</span></span><br><span class="line">        left, left_cnt = merge(lst[ : len_lst//<span class="number">2</span>])</span><br><span class="line">        right, right_cnt = merge(lst[len_lst//<span class="number">2</span> : ])</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#리스트 병합</span></span><br><span class="line">        my_lst = [] <span class="comment"># 리턴 할 리스트</span></span><br><span class="line">        left_idx = right_idx = <span class="number">0</span> <span class="comment"># 좌우측 인덱스</span></span><br><span class="line">        right_is_small = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(len_lst):</span><br><span class="line">            <span class="keyword">if</span> left_idx == len(left): <span class="comment"># 좌측 리스트가 먼저 동났을 때</span></span><br><span class="line">                my_lst.append(right[right_idx]) <span class="comment"># 우측 리스트에서 가져옴</span></span><br><span class="line">                right_idx += <span class="number">1</span></span><br><span class="line">                </span><br><span class="line">            <span class="keyword">elif</span> right_idx == len(right): <span class="comment"># 우측 리스트가 먼저 동났을 때</span></span><br><span class="line">                my_lst.append(left[left_idx]) <span class="comment"># 좌측 리스트에서 가져옴</span></span><br><span class="line">                left_idx += <span class="number">1</span></span><br><span class="line">                right_is_small = <span class="literal">True</span> <span class="comment"># 오른쪽 마지막 원소가 작은 경우</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">elif</span> left[left_idx] &lt;= right[right_idx]: <span class="comment"># 좌측 리스트의 값이 작을 때</span></span><br><span class="line">                my_lst.append(left[left_idx])  <span class="comment"># 좌측 리스트에서 가져옴</span></span><br><span class="line">                left_idx += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span>: <span class="comment"># 우측 리스트의 값이 작을 때</span></span><br><span class="line">                my_lst.append(right[right_idx]) <span class="comment"># 우측 리스트에서 가져옴</span></span><br><span class="line">                right_idx += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#cnt 계산</span></span><br><span class="line">        cnt = left_cnt + right_cnt</span><br><span class="line">        <span class="keyword">if</span> right_is_small: <span class="comment"># 오른쪽 마지막 원소가 작은 경우</span></span><br><span class="line">            cnt += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> my_lst, cnt</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sorted_merge</span><span class="params">(lst)</span>:</span></span><br><span class="line">    sorted_lst, cnt = merge(lst)</span><br><span class="line">    <span class="keyword">return</span> sorted_lst[N//<span class="number">2</span>], cnt</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N = int(input())</span><br><span class="line">    lst = list(map(int, input().split()))</span><br><span class="line">    print(<span class="string">'#&#123;&#125;'</span>.format(test_case), *sorted_merge(lst))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5205-퀵-정렬-d3"><a class="markdownIt-Anchor" href="#5205-퀵-정렬-d3"></a> 5205. 퀵 정렬 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quick_sort</span><span class="params">(A, l, r)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> l &lt; r:</span><br><span class="line">        p = partition(A, l, r)</span><br><span class="line">        quick_sort(A, l, p - <span class="number">1</span>)</span><br><span class="line">        quick_sort(A, p + <span class="number">1</span>, r)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">partition</span><span class="params">(A, l, r)</span>:</span></span><br><span class="line">    pivot = (l + r) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> l &lt; r :</span><br><span class="line">        <span class="keyword">while</span>(A[l] &lt; A[pivot] <span class="keyword">and</span> l &lt; r):</span><br><span class="line">            l += <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span>(A[r] &gt;= A[pivot] <span class="keyword">and</span> l &lt; r):</span><br><span class="line">            r -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> l &lt; r:</span><br><span class="line">            <span class="keyword">if</span> l == pivot:</span><br><span class="line">                pivot = r</span><br><span class="line">            A[l], A[r] = A[r], A[l]</span><br><span class="line">    A[pivot], A[r] = A[r], A[pivot]</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input())</span><br><span class="line">    A = list(map(int, input().split()))</span><br><span class="line">    quick_sort(A, <span class="number">0</span>, N - <span class="number">1</span>)</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, A[N//<span class="number">2</span>]))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5207-이진-탐색-d3"><a class="markdownIt-Anchor" href="#5207-이진-탐색-d3"></a> 5207. 이진 탐색 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">()</span>:</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> B:</span><br><span class="line">        <span class="comment"># 초기값</span></span><br><span class="line">        before = <span class="literal">None</span></span><br><span class="line">        l = <span class="number">0</span></span><br><span class="line">        r = N - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt;= r:</span><br><span class="line">            m = (l + r) // <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> b == A[m]: <span class="comment"># 탐색 완료</span></span><br><span class="line">                result += <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">elif</span> b &lt; A[m]: <span class="comment"># 왼쪽 탐색</span></span><br><span class="line">                r = m - <span class="number">1</span></span><br><span class="line">                current = <span class="string">'left side'</span></span><br><span class="line">            <span class="keyword">elif</span> b &gt; A[m]: <span class="comment"># 오른쪽 탐색</span></span><br><span class="line">                l = m + <span class="number">1</span></span><br><span class="line">                current = <span class="string">'right side'</span></span><br><span class="line">            <span class="keyword">if</span> before == current: <span class="comment"># 오-오 // 왼-왼</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            before = current</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line">    A = sorted(list(map(int, input().split()))) <span class="comment"># 정렬 필수!!</span></span><br><span class="line">    B = map(int, input().split())</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, my_func()))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>Advanced</tag>
      </tags>
  </entry>
  <entry>
    <title>[SSAFY] 20200130</title>
    <url>/2020/01/30/Algorithm_0130/</url>
    <content><![CDATA[<ul>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#1206-view-d3">1206. View <code>D3</code></a></li>
<li><a href="#1208-flatten-d3">1208. Flatten <code>D3</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="1206-view-d3"><a class="markdownIt-Anchor" href="#1206-view-d3"></a> 1206. View <code>D3</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV134DPqAA8CFAYh" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = <span class="number">10</span></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N = int(input())</span><br><span class="line">    my_list = map(int, input().split())</span><br><span class="line"> </span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    Q = [<span class="number">0</span>] * <span class="number">5</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> my_list:</span><br><span class="line">        Q.pop(<span class="number">0</span>)</span><br><span class="line">        Q.append(i)</span><br><span class="line">        Jomang = <span class="number">255</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> (<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>):</span><br><span class="line">            <span class="keyword">if</span> Q[<span class="number">2</span>] - Q[j] &lt; Jomang:</span><br><span class="line">                Jomang = Q[<span class="number">2</span>] - Q[j]</span><br><span class="line">        <span class="keyword">if</span> Jomang &gt; <span class="number">0</span>:</span><br><span class="line">            result += Jomang</span><br><span class="line">            </span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="1208-flatten-d3"><a class="markdownIt-Anchor" href="#1208-flatten-d3"></a> 1208. Flatten <code>D3</code></h3>
<ul>
<li><a href="https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV139KOaABgCFAYh" target="_blank" rel="noopener">문제링크</a></li>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = <span class="number">10</span></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    dump = int(input())</span><br><span class="line">    height = [<span class="number">0</span>] * <span class="number">100</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> map(int, input().split()):</span><br><span class="line">        height[i - <span class="number">1</span>] += <span class="number">1</span></span><br><span class="line">	</span><br><span class="line">    l = <span class="number">0</span></span><br><span class="line">    r = <span class="number">99</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(dump):</span><br><span class="line">        <span class="keyword">while</span> height[l] == <span class="number">0</span>: l += <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> height[r] == <span class="number">0</span>: r -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        height[l] -= <span class="number">1</span></span><br><span class="line">        height[l + <span class="number">1</span>] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        height[r] -= <span class="number">1</span></span><br><span class="line">        height[r - <span class="number">1</span>] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> height[l]: l += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> height[r]: r -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, r - l))</span><br></pre></td></tr></table></figure>
<hr />
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>SSAFY</tag>
      </tags>
  </entry>
  <entry>
    <title>파이썬 SW문제해결 응용_구현 - 03 탐욕 알고리즘</title>
    <url>/2020/01/29/Ad_GreedyAlgorithm/</url>
    <content><![CDATA[<ul>
<li><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDYSqAAbw5UW6&amp;subjectId=AWUYEGw61n8DFAVT" target="_blank" rel="noopener">문제링크</a></li>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#5201-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EC%9A%B4%EB%B0%98-d3">5201. 컨테이너 운반 <code>D3</code></a></li>
<li><a href="#5202-%ED%99%94%EB%AC%BC-%EB%8F%84%ED%81%AC-d3">5202. 화물 도크 <code>D3</code></a></li>
<li><a href="#5203-%EB%B2%A0%EC%9D%B4%EB%B9%84%EC%A7%84-%EA%B2%8C%EC%9E%84-d3">5203. 베이비진 게임 <code>D3</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="5201-컨테이너-운반-d3"><a class="markdownIt-Anchor" href="#5201-컨테이너-운반-d3"></a> 5201. 컨테이너 운반 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    <span class="comment">#입력 받음</span></span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line">    w = list(map(int, input().split()))</span><br><span class="line">    t = list(map(int, input().split()))</span><br><span class="line">    <span class="comment">#오름차순 정렬</span></span><br><span class="line">    w.sort()</span><br><span class="line">    t.sort()</span><br><span class="line">    </span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(min(N, M)):</span><br><span class="line">        <span class="keyword">if</span> w[<span class="number">-1</span>] &gt; t[<span class="number">-1</span>]: <span class="comment"># 화물을 옮길 차가 없으면</span></span><br><span class="line">            w.pop() <span class="comment"># 화물 버림</span></span><br><span class="line">        <span class="keyword">else</span>: <span class="comment"># 무거운 화물부터 적재용량 높은 트럭에 적재</span></span><br><span class="line">            result += w.pop()</span><br><span class="line">            t.pop()</span><br><span class="line">            </span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5202-화물-도크-d3"><a class="markdownIt-Anchor" href="#5202-화물-도크-d3"></a> 5202. 화물 도크 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N = int(input())</span><br><span class="line">    lst = []</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(N): <span class="comment"># 신청서를 튜플로 lst에 저장</span></span><br><span class="line">        lst.append(tuple(map(int, input().split())))</span><br><span class="line">    lst.sort(key=<span class="keyword">lambda</span> e : e[<span class="number">1</span>]) <span class="comment"># 빨리 끝나는 순으로 정렬</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    work_done = <span class="number">0</span> <span class="comment"># 작업 끝난 시간</span></span><br><span class="line">    <span class="keyword">while</span> lst:</span><br><span class="line">        start_time, end_time = lst.pop(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span> start_time &gt;= work_done: <span class="comment"># 작업 가능</span></span><br><span class="line">            result += <span class="number">1</span></span><br><span class="line">            work_done = end_time <span class="comment"># 작업 끝나는 시간 갱신</span></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5203-베이비진-게임-d3"><a class="markdownIt-Anchor" href="#5203-베이비진-게임-d3"></a> 5203. 베이비진 게임 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BabyJin</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.cards=&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_and_result</span><span class="params">(self, card)</span>:</span></span><br><span class="line">        cards = self.cards</span><br><span class="line">        <span class="keyword">if</span> card <span class="keyword">in</span> cards: <span class="comment"># 받은 카드가 기존에 있을 때 triplet 찾기</span></span><br><span class="line">            cards[card] += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> cards[card] &gt;= <span class="number">3</span>: <span class="comment"># triplet</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">else</span>: <span class="comment"># 받은 카드가 기존에 없을 때 run 찾아보기</span></span><br><span class="line">            cards[card] = <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> card - <span class="number">1</span> <span class="keyword">in</span> cards: </span><br><span class="line">                <span class="keyword">if</span> card - <span class="number">2</span> <span class="keyword">in</span> cards <span class="keyword">or</span> card + <span class="number">1</span> <span class="keyword">in</span> cards:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">True</span> <span class="comment"># run (-2, -1) or (-1, +1)</span></span><br><span class="line">            <span class="keyword">elif</span> card + <span class="number">1</span> <span class="keyword">in</span> cards <span class="keyword">and</span> card + <span class="number">2</span> <span class="keyword">in</span> cards:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span> <span class="comment"># run (+1, +2)</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span> <span class="comment"># 결과 안남</span></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    p1 = BabyJin()</span><br><span class="line">    p2 = BabyJin()</span><br><span class="line">    lst = list(map(int, input().split()))</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(lst)):</span><br><span class="line">        <span class="comment"># 짝수번째 카드는 p1에게 주고 게임이 끝나면</span></span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">and</span> p1.add_and_result(lst[i]):</span><br><span class="line">            result = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># 홀수번째 카드는 p2에게 주고 게임이 끝나면</span></span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">1</span> <span class="keyword">and</span> p2.add_and_result(lst[i]):</span><br><span class="line">            result = <span class="number">2</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>Advanced</tag>
      </tags>
  </entry>
  <entry>
    <title>파이썬 SW문제해결 응용_구현 - 02 완전 검색</title>
    <url>/2020/01/28/Ad_BruteForce/</url>
    <content><![CDATA[<ul>
<li><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDYSqAAbw5UW6&amp;subjectId=AWUYDrI61lYDFAVT" target="_blank" rel="noopener">문제링크</a></li>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#5188-%EC%B5%9C%EC%86%8C%ED%95%A9-d3">5188. 최소합 <code>D3</code></a></li>
<li><a href="#5189-%EC%A0%84%EC%9E%90%EC%B9%B4%ED%8A%B8-d3">5189. 전자카트 <code>D3</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="5188-최소합-d3"><a class="markdownIt-Anchor" href="#5188-최소합-d3"></a> 5188. 최소합 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DFS</span><span class="params">(row, col)</span>:</span></span><br><span class="line">    down = right = N * <span class="number">11</span> <span class="comment"># 범위 밖 가상의 값</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> row == col &gt;= N<span class="number">-1</span>: <span class="comment"># 마지막 지점 도착</span></span><br><span class="line">        <span class="keyword">return</span> my_map[row][col]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> row &lt; N<span class="number">-1</span>: <span class="comment"># 아래쪽 끝이 아니면</span></span><br><span class="line">            down = DFS(row + <span class="number">1</span>, col)</span><br><span class="line">        <span class="keyword">if</span> col &lt; N<span class="number">-1</span>: <span class="comment"># 오른쪽 끝이 아니면</span></span><br><span class="line">            right = DFS(row, col + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> down &lt; right: <span class="comment"># 작은 값 취함</span></span><br><span class="line">        <span class="keyword">return</span> down + my_map[row][col]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> right + my_map[row][col]</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input())</span><br><span class="line">    my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, DFS(<span class="number">0</span>, <span class="number">0</span>)))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5189-전자카트-d3"><a class="markdownIt-Anchor" href="#5189-전자카트-d3"></a> 5189. 전자카트 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DFS</span><span class="params">(Current)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> my_min, my_sum</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> my_sum &lt; my_min:</span><br><span class="line">        visited[Current] = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="literal">False</span> <span class="keyword">not</span> <span class="keyword">in</span> visited: <span class="comment"># 사무실로 돌아오기</span></span><br><span class="line">            my_sum += my_map[Current][<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">if</span> my_sum &lt; my_min: <span class="comment"># 최소값이면</span></span><br><span class="line">                my_min = my_sum <span class="comment"># 갱신</span></span><br><span class="line">            my_sum -= my_map[Current][<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">else</span>: <span class="comment"># 방문하지 않은 곳</span></span><br><span class="line">            <span class="keyword">for</span> Next <span class="keyword">in</span> range(N):</span><br><span class="line">                <span class="keyword">if</span> visited[Next] == <span class="literal">False</span>:</span><br><span class="line">                    my_sum += my_map[Current][Next]</span><br><span class="line">                    DFS(Next)</span><br><span class="line">                    my_sum -= my_map[Current][Next]</span><br><span class="line"></span><br><span class="line">        visited[Current] = <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input())</span><br><span class="line">    my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    visited = [<span class="literal">False</span>] * N</span><br><span class="line">    my_min = <span class="number">1000</span></span><br><span class="line">    my_sum = <span class="number">0</span></span><br><span class="line">    DFS(<span class="number">0</span>)</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, my_min))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>Advanced</tag>
      </tags>
  </entry>
  <entry>
    <title>파이썬 SW문제해결 응용_구현 - 01 시작하기</title>
    <url>/2020/01/28/Ad_Start/</url>
    <content><![CDATA[<ul>
<li><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDYSqAAbw5UW6&amp;subjectId=AWUYDLaK1kMDFAVT" target="_blank" rel="noopener">문제링크</a></li>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#5185-%EC%9D%B4%EC%A7%84%EC%88%98-d2">5185. 이진수 <code>D2</code></a></li>
<li><a href="#5186-%EC%9D%B4%EC%A7%84%EC%88%982-d2">5186. 이진수2 <code>D2</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="5185-이진수-d2"><a class="markdownIt-Anchor" href="#5185-이진수-d2"></a> 5185. 이진수 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    num, data = input().split()</span><br><span class="line">    result = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(int(num)):</span><br><span class="line">        result += <span class="string">'&#123;:04b&#125;'</span>.format(int(data[i], <span class="number">16</span>)) <span class="comment"># 한글자씩 16진수를 2진수 4자리로</span></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5186-이진수2-d2"><a class="markdownIt-Anchor" href="#5186-이진수2-d2"></a> 5186. 이진수2 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#import math</span></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    num = float(input())</span><br><span class="line">    result = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">13</span>):</span><br><span class="line">        num *= <span class="number">2</span></span><br><span class="line">        result += str(int(num) % <span class="number">2</span>) <span class="comment"># 1의 자리</span></span><br><span class="line">        <span class="keyword">if</span> num % <span class="number">1</span> == <span class="number">0</span>: <span class="comment"># 소수점</span></span><br><span class="line">        <span class="comment">#if math.isclose((num) % 1, 0):</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result = <span class="string">'overflow'</span> <span class="comment"># 12번 동안 탈출하지 못했을 때</span></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>Advanced</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 파이썬 SW문제해결 기본 - Tree</title>
    <url>/2020/01/27/IM_Tree/</url>
    <content><![CDATA[<ul>
<li><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDN86AAXw5UW6&amp;subjectId=AWOVJ-_6qfsDFAWg" target="_blank" rel="noopener">문제링크</a></li>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#5108-subtree-d2">5108. subtree <code>D2</code></a></li>
<li><a href="#5176-%EC%9D%B4%EC%A7%84%ED%83%90%EC%83%89-d2">5176. 이진탐색 <code>D2</code></a></li>
<li><a href="#5177-%EC%9D%B4%EC%A7%84-%ED%9E%99-d2">5177. 이진 힙 <code>D2</code></a></li>
<li><a href="#5178-%EB%85%B8%EB%93%9C%EC%9D%98-%ED%95%A9-d3">5178. 노드의 합 <code>D3</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="5108-subtree-d2"><a class="markdownIt-Anchor" href="#5108-subtree-d2"></a> 5108. subtree <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        self.left = <span class="literal">None</span></span><br><span class="line">        self.right = <span class="literal">None</span></span><br><span class="line">        self.data = data</span><br><span class="line">        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tree</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, cnt)</span>:</span></span><br><span class="line">        self.node_lst = [<span class="literal">None</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(E + <span class="number">1</span>):</span><br><span class="line">            self.node_lst.append(Node(i))</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">put</span><span class="params">(self, parent, child)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.node_lst[parent].left == <span class="literal">None</span>:</span><br><span class="line">            self.node_lst[parent].left = self.node_lst[child]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.node_lst[parent].right = self.node_lst[child]</span><br><span class="line">            </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">count</span><span class="params">(self, node)</span>:</span></span><br><span class="line">        self.cnt += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> node.left != <span class="literal">None</span>:</span><br><span class="line">            self.count(node.left)</span><br><span class="line">        <span class="keyword">if</span> node.right != <span class="literal">None</span>:</span><br><span class="line">            self.count(node.right)</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">my_result</span><span class="params">(self, num)</span>:</span></span><br><span class="line">        self.cnt = <span class="number">0</span></span><br><span class="line">        self.count(self.node_lst[num])</span><br><span class="line">        <span class="keyword">return</span> self.cnt</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    E, N = map(int, input().split())</span><br><span class="line">    data = list(map(int, input().split()))</span><br><span class="line">    tree = Tree(E)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(E):</span><br><span class="line">        tree.put(data[<span class="number">2</span> * i], data[<span class="number">2</span> * i + <span class="number">1</span>])</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, tree.my_result(N)))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5176-이진탐색-d2"><a class="markdownIt-Anchor" href="#5176-이진탐색-d2"></a> 5176. 이진탐색 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tree</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, N)</span>:</span></span><br><span class="line">        self.lst = [<span class="number">0</span>] * (N + <span class="number">1</span>)</span><br><span class="line">        self.N = N</span><br><span class="line">        self.cnt = <span class="number">1</span></span><br><span class="line">        self.numbering(<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">numbering</span><span class="params">(self, num)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> num &lt;= N:</span><br><span class="line">            self.numbering(num * <span class="number">2</span>)</span><br><span class="line">            self.lst[num] = self.cnt</span><br><span class="line">            self.cnt += <span class="number">1</span></span><br><span class="line">            self.numbering(num * <span class="number">2</span> + <span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">my_result</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">' '</span>.join(map(str, (self.lst[<span class="number">1</span>], self.lst[self.N // <span class="number">2</span>])))</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N = int(input())</span><br><span class="line">    tree = Tree(N)</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, tree.my_result()))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5177-이진-힙-d2"><a class="markdownIt-Anchor" href="#5177-이진-힙-d2"></a> 5177. 이진 힙 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tree</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.lst = [<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sort</span><span class="params">(self, num)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> num &gt;= <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">if</span> self.lst[num] &lt; self.lst[num//<span class="number">2</span>]:</span><br><span class="line">                <span class="comment">#자리 바꾸기</span></span><br><span class="line">                self.lst[num], self.lst[num//<span class="number">2</span>] = self.lst[num//<span class="number">2</span>], self.lst[num]</span><br><span class="line">                self.sort(num//<span class="number">2</span>) <span class="comment"># 계속 정렬</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">append</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        num = len(self.lst)</span><br><span class="line">        self.lst.append(data)</span><br><span class="line">        self.sort(num)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">my_sum</span><span class="params">(self, node)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> node &lt;= <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> self.lst[node]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.lst[node] + self.my_sum(node//<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">my_result</span><span class="params">(self)</span>:</span></span><br><span class="line">        last = len(self.lst) - <span class="number">1</span></span><br><span class="line">        self.sum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> last &gt;= <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> self.my_sum(last//<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N = int(input()) <span class="comment"># 안씀</span></span><br><span class="line">    tree = Tree()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> map(int, input().split()):</span><br><span class="line">        tree.append(i)</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, tree.my_result()))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5178-노드의-합-d3"><a class="markdownIt-Anchor" href="#5178-노드의-합-d3"></a> 5178. 노드의 합 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tree</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, N)</span>:</span></span><br><span class="line">        self.lst = [<span class="number">0</span>] * (N + <span class="number">1</span>)</span><br><span class="line">        self.N = N</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">put</span><span class="params">(self, num1, num2)</span>:</span> <span class="comment"># leaf 입력</span></span><br><span class="line">        self.lst[num1] = num2</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">search_leaf</span><span class="params">(self, node)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> node * <span class="number">2</span> &gt; N: <span class="comment"># leaf</span></span><br><span class="line">            self.sum += self.lst[node] <span class="comment"># 누적 합</span></span><br><span class="line">        <span class="keyword">else</span>: <span class="comment"># branch</span></span><br><span class="line">            self.search_leaf(node * <span class="number">2</span>) <span class="comment"># left 탐색</span></span><br><span class="line">            <span class="keyword">if</span> node * <span class="number">2</span> != N: <span class="comment"># right 존재하면</span></span><br><span class="line">                self.search_leaf(node * <span class="number">2</span> + <span class="number">1</span>) <span class="comment"># right 탐색</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 노드L의 자식들 중 leaf만 찾아 누적 합 리턴</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">my_result</span><span class="params">(self, L)</span>:</span></span><br><span class="line">        self.sum = <span class="number">0</span></span><br><span class="line">        self.search_leaf(L)</span><br><span class="line">        <span class="keyword">return</span> self.sum</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N, M, L = map(int, input().split())</span><br><span class="line">    tree = Tree(N)</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(M):</span><br><span class="line">        num1, num2 = map(int, input().split())</span><br><span class="line">        tree.put(num1, num2)</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, tree.my_result(L)))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>Intermediate</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 파이썬 SW문제해결 기본 - Linked List</title>
    <url>/2020/01/26/IM_LinkedList/</url>
    <content><![CDATA[<ul>
<li><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDN86AAXw5UW6&amp;subjectId=AWOVJ1r6qfkDFAWg" target="_blank" rel="noopener">문제링크</a></li>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#5108-%EC%88%AB%EC%9E%90-%EC%B6%94%EA%B0%80-d3">5108. 숫자 추가 <code>D3</code></a></li>
<li><a href="#5110-%EC%88%98%EC%97%B4-%ED%95%A9%EC%B9%98%EA%B8%B0-d3">5110. 수열 합치기 <code>D3</code></a></li>
<li><a href="#5120-%EC%95%94%ED%98%B8-d4">5120. 암호 <code>D4</code></a></li>
<li><a href="#5122-%EC%88%98%EC%97%B4-%ED%8E%B8%EC%A7%91-d4">5122. 수열 편집 <code>D4</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="5108-숫자-추가-d3"><a class="markdownIt-Anchor" href="#5108-숫자-추가-d3"></a> 5108. 숫자 추가 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N, M, L = map(int, input().split())</span><br><span class="line">    lst = [i <span class="keyword">for</span> i <span class="keyword">in</span> map(int, input().split())]</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(M):</span><br><span class="line">        lst.insert(*map(int, input().split())) <span class="comment"># 가변인자</span></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, lst[L]))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5110-수열-합치기-d3"><a class="markdownIt-Anchor" href="#5110-수열-합치기-d3"></a> 5110. 수열 합치기 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span>:</span></span><br><span class="line">    <span class="comment"># 초기화 메소드</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        self.data = data</span><br><span class="line">        self.link = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LinkedList</span>:</span></span><br><span class="line">    <span class="comment"># 초기화 메소드</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        new_node = Node(<span class="string">'head'</span>)</span><br><span class="line">        self.head = new_node</span><br><span class="line">        self.tail = new_node</span><br><span class="line">        self.before = <span class="literal">None</span></span><br><span class="line">        self.current = <span class="literal">None</span></span><br><span class="line">        self.num_of_data = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">append</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        new_node = Node(data) <span class="comment"># 새 노드 생성</span></span><br><span class="line">        self.tail.link = new_node <span class="comment"># 연결</span></span><br><span class="line">        self.tail = new_node <span class="comment"># tail 갱신</span></span><br><span class="line">        self.num_of_data += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">first</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.num_of_data == <span class="number">0</span>: <span class="comment"># 빈 리스트이면 None 리턴</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        self.before = self.head</span><br><span class="line">        self.current = self.head.link</span><br><span class="line">        <span class="keyword">return</span> self.current.data</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">next</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.before = self.current</span><br><span class="line">        self.current = self.current.link</span><br><span class="line">        <span class="keyword">if</span> self.current == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> self.current.data</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insertlist</span><span class="params">(self, new_list)</span>:</span></span><br><span class="line">        insert_num = new_list.first()</span><br><span class="line">        num = self.first()</span><br><span class="line">        <span class="comment"># 수열 2의 첫 숫자 보다 큰 수자를 수열 1에서 찾아 그 앞에 수열 2를 끼워 넣는다.</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(self.num_of_data):</span><br><span class="line">            <span class="keyword">if</span> num &gt; insert_num:</span><br><span class="line">                self.before.link = new_list.head.link</span><br><span class="line">                new_list.tail.link = self.current</span><br><span class="line">                self.num_of_data += new_list.num_of_data</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            num = self.next()</span><br><span class="line">        <span class="keyword">else</span>: <span class="comment"># 큰 숫자가 없는 경우 맨 뒤에 붙인다.</span></span><br><span class="line">            self.tail.link = new_list.head.link</span><br><span class="line">            self.num_of_data += new_list.num_of_data</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 빈 리스트에 링크드리스트data 담아서 마지막 10요소 출력</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">my_result</span><span class="params">(self)</span>:</span></span><br><span class="line">        lst = []</span><br><span class="line">        num = self.first()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.num_of_data):</span><br><span class="line">            lst.append(num)</span><br><span class="line">            num = self.next()</span><br><span class="line">        <span class="keyword">return</span> <span class="string">' '</span>.join(map(str, lst[<span class="number">-1</span>:<span class="number">-11</span>:<span class="number">-1</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># main 함수</span></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line">    <span class="comment"># 빈 LinkedList 생성</span></span><br><span class="line">    Seq1 = LinkedList()</span><br><span class="line">    <span class="comment"># LinkedList 입력받기</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> map(int, input().split()):</span><br><span class="line">        Seq1.append(i)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(M - <span class="number">1</span>):</span><br><span class="line">        <span class="comment"># 빈 LinkedList 생성</span></span><br><span class="line">        Seq2 = LinkedList()</span><br><span class="line">        <span class="comment"># LinkedList 입력받기</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> map(int, input().split()):</span><br><span class="line">            Seq2.append(j)</span><br><span class="line">        <span class="comment"># Seq1에 Seq2 삽입</span></span><br><span class="line">        Seq1.insertlist(Seq2)</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, Seq1.my_result()))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5120-암호-d4"><a class="markdownIt-Anchor" href="#5120-암호-d4"></a> 5120. 암호 <code>D4</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        self.data = data</span><br><span class="line">        self.link = <span class="literal">None</span></span><br><span class="line">        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LinkedList</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        new_node = Node(<span class="string">'head'</span>)</span><br><span class="line">        self.head = new_node</span><br><span class="line">        self.tail = new_node</span><br><span class="line">        </span><br><span class="line">        self.before = <span class="literal">None</span></span><br><span class="line">        self.current = <span class="literal">None</span></span><br><span class="line">        </span><br><span class="line">        self.num_of_data = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">append</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        new_node = Node(data)</span><br><span class="line">        self.tail.link = new_node</span><br><span class="line">        self.tail = new_node</span><br><span class="line">        self.tail.link = self.head.link <span class="comment"># 첫 요소와 끝을 연결</span></span><br><span class="line">        self.num_of_data += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">first</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.current = self.head.link</span><br><span class="line">        self.before = self.tail</span><br><span class="line">        <span class="keyword">return</span> self.current.data</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">next</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.before = self.current</span><br><span class="line">        self.current = self.current.link</span><br><span class="line">        <span class="keyword">return</span> self.current.data</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insert</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        new_node = Node(data)</span><br><span class="line">        self.before.link = new_node</span><br><span class="line">        new_node.link = self.current</span><br><span class="line">        self.current = new_node <span class="comment"># current 갱신</span></span><br><span class="line">        self.num_of_data += <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">(self, D)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(D):</span><br><span class="line">            self.next()</span><br><span class="line">        num = self.before.data + self.current.data</span><br><span class="line">        self.insert(num)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">my_result</span><span class="params">(self)</span>:</span></span><br><span class="line">        lst = [self.first()]</span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(self.num_of_data - <span class="number">1</span>):</span><br><span class="line">            lst.append(self.next())</span><br><span class="line">        <span class="comment"># 마지막 10자리까지 출력</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">' '</span>.join(map(str, lst[<span class="number">-1</span>:<span class="number">-11</span>:<span class="number">-1</span>]))</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N, M, K = map(int, input().split())</span><br><span class="line">    Seq = LinkedList()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> map(int, input().split()):</span><br><span class="line">        Seq.append(i)</span><br><span class="line">    Seq.first()</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(K):</span><br><span class="line">        Seq.my_func(M)</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, Seq.my_result()))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5122-수열-편집-d4"><a class="markdownIt-Anchor" href="#5122-수열-편집-d4"></a> 5122. 수열 편집 <code>D4</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        self.data = data</span><br><span class="line">        self.link = <span class="literal">None</span></span><br><span class="line">        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LinkedList</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        new_node = Node(<span class="string">'head'</span>)</span><br><span class="line">        self.head = new_node</span><br><span class="line">        self.tail = new_node</span><br><span class="line">        </span><br><span class="line">        self.before = <span class="literal">None</span></span><br><span class="line">        self.current = <span class="literal">None</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">append</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        new_node = Node(data)</span><br><span class="line">        self.tail.link = new_node</span><br><span class="line">        self.tail = new_node</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move_to</span><span class="params">(self,D)</span>:</span></span><br><span class="line">        self.current = self.head.link</span><br><span class="line">        self.before = self.head</span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(D):</span><br><span class="line">            <span class="keyword">if</span> self.current == <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span>  <span class="comment"># 실패</span></span><br><span class="line">            self.before = self.current</span><br><span class="line">            self.current = self.current.link</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span>  <span class="comment"># 성공</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insert</span><span class="params">(self, idx, data)</span>:</span></span><br><span class="line">        new_node = Node(data)</span><br><span class="line">        self.move_to(idx)</span><br><span class="line">        self.before.link = new_node</span><br><span class="line">        new_node.link = self.current</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete</span><span class="params">(self, idx)</span>:</span></span><br><span class="line">        self.move_to(idx)</span><br><span class="line">        self.before.link = self.current.link</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">change</span><span class="params">(self, idx, data)</span>:</span></span><br><span class="line">        self.move_to(idx)</span><br><span class="line">        self.current.data = data</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">my_result</span><span class="params">(self, idx)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.move_to(idx):</span><br><span class="line">            <span class="keyword">return</span> self.current.data</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + T):</span><br><span class="line">    N, M, L = map(int, input().split())</span><br><span class="line">    Seq = LinkedList()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> map(int, input().split()):</span><br><span class="line">        Seq.append(i)</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(M):</span><br><span class="line">        data = list(input().split())</span><br><span class="line">        <span class="keyword">if</span> data[<span class="number">0</span>] == <span class="string">'I'</span>:</span><br><span class="line">            Seq.insert(int(data[<span class="number">1</span>]), int(data[<span class="number">2</span>]))</span><br><span class="line">        <span class="keyword">elif</span> data[<span class="number">0</span>] == <span class="string">'D'</span>:</span><br><span class="line">            Seq.delete(int(data[<span class="number">1</span>]))</span><br><span class="line">        <span class="keyword">elif</span> data[<span class="number">0</span>] == <span class="string">'C'</span>:</span><br><span class="line">            Seq.change(int(data[<span class="number">1</span>]), int(data[<span class="number">2</span>]))</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, Seq.my_result(L)))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>Intermediate</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 파이썬 SW문제해결 기본 - Queue</title>
    <url>/2020/01/25/IM_Queue/</url>
    <content><![CDATA[<ul>
<li><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDN86AAXw5UW6&amp;subjectId=AWOVIoJqqfYDFAWg" target="_blank" rel="noopener">문제링크</a></li>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#5097-%ED%9A%8C%EC%A0%84-d2">5097. 회전 <code>D2</code></a></li>
<li><a href="#5105-%EB%AF%B8%EB%A1%9C%EC%9D%98-%EA%B1%B0%EB%A6%AC-d3">5105. 미로의 거리 <code>D3</code></a></li>
<li><a href="#5099-%ED%94%BC%EC%9E%90-%EA%B5%BD%EA%B8%B0-d3">5099. 피자 굽기 <code>D3</code></a></li>
<li><a href="#5102-%EB%85%B8%EB%93%9C%EC%9D%98-%EA%B1%B0%EB%A6%AC-d2">5102. 노드의 거리 <code>D2</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="5097-회전-d2"><a class="markdownIt-Anchor" href="#5097-회전-d2"></a> 5097. 회전 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line">    lst = [i <span class="keyword">for</span> i <span class="keyword">in</span> map(int, input().split())] <span class="comment"># 자연수 리스트</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(M):</span><br><span class="line">        lst.append(lst.pop(<span class="number">0</span>)) <span class="comment"># 회전</span></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, lst[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5105-미로의-거리-d3"><a class="markdownIt-Anchor" href="#5105-미로의-거리-d3"></a> 5105. 미로의 거리 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isSafe</span><span class="params">(Point)</span>:</span> <span class="comment"># 범위 안, 예정 안된 곳</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> &lt;= Point[<span class="number">0</span>] &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= Point[<span class="number">1</span>] &lt; N <span class="keyword">and</span> <span class="keyword">not</span> distance[Point[<span class="number">0</span>]][Point[<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isRoad</span><span class="params">(Point)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> isSafe(Point) <span class="keyword">and</span> my_map[Point[<span class="number">0</span>]][Point[<span class="number">1</span>]] == <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isGoal</span><span class="params">(Point)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> isSafe(Point) <span class="keyword">and</span> my_map[Point[<span class="number">0</span>]][Point[<span class="number">1</span>]] == <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">BFS</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">while</span> Q:</span><br><span class="line">        Start = Q.pop(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">            Next = (Start[<span class="number">0</span>] + Move[i][<span class="number">0</span>], Start[<span class="number">1</span>] + Move[i][<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">if</span> isGoal(Next): <span class="comment"># 도착지점 찾음</span></span><br><span class="line">                <span class="keyword">return</span> distance[Start[<span class="number">0</span>]][Start[<span class="number">1</span>]]</span><br><span class="line">            <span class="keyword">elif</span> isRoad(Next): <span class="comment"># 길 찾음, distance 계산(방문 예정)</span></span><br><span class="line">                Q.append(Next)</span><br><span class="line">                distance[Next[<span class="number">0</span>]][Next[<span class="number">1</span>]] = distance[Start[<span class="number">0</span>]][Start[<span class="number">1</span>]] + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N = int(input())</span><br><span class="line">    <span class="comment"># 2차원 리스트</span></span><br><span class="line">    my_map = [list(map(int, input())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    distance = [[<span class="number">0</span>] * N <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 시작점 찾기</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">if</span> my_map[r][c] == <span class="number">2</span>:</span><br><span class="line">                Start = (r, c)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 상 하 좌 우</span></span><br><span class="line">    Move = ((<span class="number">-1</span>, <span class="number">0</span>), (<span class="number">1</span>, <span class="number">0</span>), (<span class="number">0</span>, <span class="number">-1</span>), (<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    Q = [Start]            </span><br><span class="line">    <span class="comment"># 출력</span></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, BFS()))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5099-피자-굽기-d3"><a class="markdownIt-Anchor" href="#5099-피자-굽기-d3"></a> 5099. 피자 굽기 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">NewPizza</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> Pizza:</span><br><span class="line">        <span class="keyword">return</span> Pizza.pop(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line">    C = list(map(int, input().split()))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 대기중인 피자</span></span><br><span class="line">    Pizza = [[i, C[i<span class="number">-1</span>]] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1</span> + M)]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 오븐</span></span><br><span class="line">    <span class="comment">#Oven = [None for _ in range(N)] # 빈 오븐부터 시작</span></span><br><span class="line">    Oven = [Pizza.pop(<span class="number">0</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)] <span class="comment"># 피자 채우고 시작</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 피자랑 오븐이 비면 종료</span></span><br><span class="line">    <span class="keyword">while</span> Pizza <span class="keyword">or</span> Oven.count(<span class="literal">None</span>) &lt; N:</span><br><span class="line">        plate = Oven.pop(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span> plate == <span class="literal">None</span>: <span class="comment"># 빈 플레이트면 피자 채움</span></span><br><span class="line">            Oven.append(NewPizza())</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            plate[<span class="number">1</span>] //= <span class="number">2</span> <span class="comment"># 치즈 녹음</span></span><br><span class="line">            <span class="keyword">if</span> plate[<span class="number">1</span>] == <span class="number">0</span>: <span class="comment"># 치즈가 다 녹으면 서빙 후 피자 채움</span></span><br><span class="line">                serving = plate[<span class="number">0</span>]</span><br><span class="line">                Oven.append(NewPizza())</span><br><span class="line">            <span class="keyword">else</span>: <span class="comment"># 치즈 안녹으면</span></span><br><span class="line">                Oven.append(plate)  <span class="comment"># 다시 넣음</span></span><br><span class="line">        <span class="comment">#print(Oven, plate) # 중간 과정 확인</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, serving))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="5102-노드의-거리-d2"><a class="markdownIt-Anchor" href="#5102-노드의-거리-d2"></a> 5102. 노드의 거리 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">BFS</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">while</span> Q: <span class="comment"># 큐가 빌 때 까지</span></span><br><span class="line">        Start = Q.pop(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">for</span> Next <span class="keyword">in</span> range(V + <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> node_map[Start][Next] <span class="keyword">and</span> <span class="keyword">not</span> distance[Next]:</span><br><span class="line">                distance[Next] = distance[Start] + <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> Next == G:</span><br><span class="line">                    <span class="keyword">return</span> distance[G]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    Q.append(Next)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> <span class="comment"># 연결 안 됨</span></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    V, E = map(int, input().split())</span><br><span class="line">    node_map = [[<span class="number">0</span>] * (V + <span class="number">1</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(V + <span class="number">1</span>)] <span class="comment"># 0번 노드 안 씀</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(E): <span class="comment"># node_map 입력</span></span><br><span class="line">        n1, n2 = map(int, input().split())</span><br><span class="line">        node_map[n1][n2] = <span class="number">1</span></span><br><span class="line">        node_map[n2][n1] = <span class="number">1</span></span><br><span class="line">    S, G = map(int, input().split())</span><br><span class="line">    Q = [S]</span><br><span class="line">    distance = [<span class="number">0</span>] * (V + <span class="number">1</span>) <span class="comment"># 거리 표시 및 방문 여부 확인</span></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, BFS()))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>Intermediate</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 파이썬 SW문제해결 기본 - Stack2</title>
    <url>/2020/01/23/IM_Stack2/</url>
    <content><![CDATA[<ul>
<li><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDN86AAXw5UW6&amp;subjectId=AWOVIc7KqfQDFAWg" target="_blank" rel="noopener">문제링크</a></li>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#4874-forth-d2">4874. Forth <code>D2</code></a></li>
<li><a href="#4875-%EB%AF%B8%EB%A1%9C-d2">4875. 미로 <code>D2</code></a></li>
<li><a href="#4880-%ED%86%A0%EB%84%88%EB%A8%BC%ED%8A%B8-%EC%B9%B4%EB%93%9C%EA%B2%8C%EC%9E%84-d2">4880. 토너먼트 카드게임 <code>D2</code></a></li>
<li><a href="#4881-%EB%B0%B0%EC%97%B4-%EC%B5%9C%EC%86%8C-%ED%95%A9-d2">4881. 배열 최소 합 <code>D2</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="4874-forth-d2"><a class="markdownIt-Anchor" href="#4874-forth-d2"></a> 4874. Forth <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    inputList = input().split()</span><br><span class="line">    MyList = []</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> inputList:</span><br><span class="line">            <span class="keyword">if</span> i == <span class="string">'.'</span>:</span><br><span class="line">                result = MyList.pop()</span><br><span class="line">                <span class="keyword">if</span> len(MyList) != <span class="number">0</span>:</span><br><span class="line">                    result = <span class="string">'error'</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">elif</span> i == <span class="string">'+'</span>:</span><br><span class="line">                MyList.append(MyList.pop(<span class="number">-2</span>) + MyList.pop())</span><br><span class="line">            <span class="keyword">elif</span> i == <span class="string">'-'</span>:</span><br><span class="line">                MyList.append(MyList.pop(<span class="number">-2</span>) - MyList.pop())</span><br><span class="line">            <span class="keyword">elif</span> i == <span class="string">'*'</span>:</span><br><span class="line">                MyList.append(MyList.pop(<span class="number">-2</span>) * MyList.pop())</span><br><span class="line">            <span class="keyword">elif</span> i == <span class="string">'/'</span>:</span><br><span class="line">                MyList.append(MyList.pop(<span class="number">-2</span>) // MyList.pop())</span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment"># 숫자는 int형으로 변환</span></span><br><span class="line">                MyList.append(int(i))</span><br><span class="line">                </span><br><span class="line">    <span class="keyword">except</span>:  <span class="comment"># 에러</span></span><br><span class="line">        result = <span class="string">'error'</span></span><br><span class="line">        </span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="4875-미로-d2"><a class="markdownIt-Anchor" href="#4875-미로-d2"></a> 4875. 미로 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isRoad</span><span class="params">(Next)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> canIgo(Next) <span class="keyword">and</span> MyMap[Next[<span class="number">0</span>]][Next[<span class="number">1</span>]] == <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isGoal</span><span class="params">(Next)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> canIgo(Next) <span class="keyword">and</span> MyMap[Next[<span class="number">0</span>]][Next[<span class="number">1</span>]] == <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">canIgo</span><span class="params">(Next)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> &lt;= Next[<span class="number">0</span>] &lt; N <span class="keyword">and</span> <span class="number">0</span> &lt;= Next[<span class="number">1</span>] &lt; N <span class="keyword">and</span> Next <span class="keyword">not</span> <span class="keyword">in</span> Visited</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DFS</span><span class="params">(Start)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> result</span><br><span class="line">    Visited.append(Start)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>): <span class="comment"># 상하좌우</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">            Next = (Start[<span class="number">0</span>] + Move[i][<span class="number">0</span>], Start[<span class="number">1</span>] + Move[i][<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">if</span> isGoal(Next):</span><br><span class="line">                result = <span class="number">1</span></span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">elif</span> isRoad(Next):</span><br><span class="line">                DFS(Next)  <span class="comment"># 탐색</span></span><br><span class="line"></span><br><span class="line">                </span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N = int(input())</span><br><span class="line">    <span class="comment"># 2차원 리스트 입력받음</span></span><br><span class="line">    MyMap = [list(map(int, input())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    Visited = []</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 시작지점 찾음</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            <span class="keyword">if</span> MyMap[r][c] == <span class="number">2</span>:</span><br><span class="line">                Start = (r, c)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 상 하 좌 우</span></span><br><span class="line">    Move = ((<span class="number">-1</span>, <span class="number">0</span>), (<span class="number">1</span>, <span class="number">0</span>), (<span class="number">0</span>, <span class="number">-1</span>), (<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">    </span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    DFS(Start)</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="4880-토너먼트-카드게임-d2"><a class="markdownIt-Anchor" href="#4880-토너먼트-카드게임-d2"></a> 4880. 토너먼트 카드게임 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Game</span><span class="params">(start_idx, end_idx)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> start_idx == end_idx:  <span class="comment"># 부전승</span></span><br><span class="line">        <span class="keyword">return</span> start_idx</span><br><span class="line">    </span><br><span class="line">    man1 = Game(start_idx, (start_idx+end_idx)//<span class="number">2</span>)</span><br><span class="line">    man2 = Game((start_idx+end_idx)//<span class="number">2</span>+<span class="number">1</span>, end_idx)</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># 가위바위보</span></span><br><span class="line">    <span class="keyword">if</span> (cards[man2] == <span class="number">1</span> <span class="keyword">and</span> cards[man1] == <span class="number">3</span> <span class="keyword">or</span></span><br><span class="line">        cards[man2] == <span class="number">2</span> <span class="keyword">and</span> cards[man1] == <span class="number">1</span> <span class="keyword">or</span></span><br><span class="line">        cards[man2] == <span class="number">3</span> <span class="keyword">and</span> cards[man1] == <span class="number">2</span></span><br><span class="line">    ): <span class="comment"># 뒷사람이 이김</span></span><br><span class="line">        <span class="keyword">return</span> man2</span><br><span class="line">    <span class="keyword">else</span>: <span class="comment"># 앞사람이 이김</span></span><br><span class="line">        <span class="keyword">return</span> man1</span><br><span class="line">            </span><br><span class="line">        </span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N = int(input())</span><br><span class="line">    cards = list(map(int, ((<span class="string">'0 '</span> + input())).split()))  <span class="comment"># card[0] 안씀</span></span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, Game(<span class="number">1</span>, N)))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="4881-배열-최소-합-d2"><a class="markdownIt-Anchor" href="#4881-배열-최소-합-d2"></a> 4881. 배열 최소 합 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FindMin</span><span class="params">(row)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> my_sum, my_min</span><br><span class="line">    <span class="comment"># sum이 min을 넘을 때 버림</span></span><br><span class="line">    <span class="keyword">if</span> my_sum &gt; my_min:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="comment"># 범위를 벗어나면 최소값 갱신</span></span><br><span class="line">    <span class="keyword">if</span> row == N:</span><br><span class="line">        <span class="keyword">if</span> my_sum &lt; my_min:</span><br><span class="line">            my_min = my_sum</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> col <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> visited[col]:</span><br><span class="line">            <span class="comment"># 확장</span></span><br><span class="line">            visited[col] = <span class="literal">True</span></span><br><span class="line">            my_sum += my_map[row][col]</span><br><span class="line">            FindMin(row + <span class="number">1</span>)</span><br><span class="line">            <span class="comment"># 축소</span></span><br><span class="line">            my_sum -= my_map[row][col]</span><br><span class="line">            visited[col] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N = int(input())</span><br><span class="line">    my_map = [list(map(int, input().split())) <span class="keyword">for</span> _ <span class="keyword">in</span> range(N)]</span><br><span class="line">    visited = [<span class="literal">False</span>] * N</span><br><span class="line">    my_sum, my_min = <span class="number">0</span>, N * <span class="number">9</span></span><br><span class="line">    FindMin(<span class="number">0</span>)</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, my_min))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>Intermediate</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 파이썬 SW문제해결 기본 - Stack1</title>
    <url>/2020/01/22/IM_Stack1/</url>
    <content><![CDATA[<ul>
<li><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDN86AAXw5UW6&amp;subjectId=AWOVHzyqqe8DFAWg&amp;&amp;" target="_blank" rel="noopener">문제링크</a></li>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#4869-%EC%A2%85%EC%9D%B4%EB%B6%99%EC%9D%B4%EA%B8%B0-d2">4869. 종이붙이기 <code>D2</code></a></li>
<li><a href="#4866-%EA%B4%84%ED%98%B8%EA%B2%80%EC%82%AC-d2">4866. 괄호검사 <code>D2</code></a></li>
<li><a href="#4871-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B2%BD%EB%A1%9C-d2">4871. 그래프 경로 <code>D2</code></a></li>
<li><a href="#4873-%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%9E%90-%EC%A7%80%EC%9A%B0%EA%B8%B0-d2">4873. 반복문자 지우기 <code>D2</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="4869-종이붙이기-d2"><a class="markdownIt-Anchor" href="#4869-종이붙이기-d2"></a> 4869. 종이붙이기 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FindCase</span><span class="params">(x)</span>:</span>  <span class="comment"># x == 현재 위치</span></span><br><span class="line">    <span class="keyword">if</span> x &gt; width:  <span class="comment"># 범위를 벗어나면 버림</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> x == width:  <span class="comment"># 끝까지 오면 1 리턴</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> FindCase(x + <span class="number">10</span>) + FindCase(x + <span class="number">20</span>) * <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#테스트 케이스</span></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    width = int(input())</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, FindCase(<span class="number">0</span>)))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="4866-괄호검사-d2"><a class="markdownIt-Anchor" href="#4866-괄호검사-d2"></a> 4866. 괄호검사 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    str1 = input()</span><br><span class="line">    lst = []</span><br><span class="line">    result = <span class="number">1</span>  <span class="comment"># 정상이라 가정</span></span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> str1:</span><br><span class="line">        <span class="keyword">if</span> c == <span class="string">'('</span> <span class="keyword">or</span> c == <span class="string">'&#123;'</span>:</span><br><span class="line">            lst.append(c)</span><br><span class="line">        <span class="keyword">elif</span> c == <span class="string">')'</span> <span class="keyword">or</span> c == <span class="string">'&#125;'</span>:</span><br><span class="line">            <span class="comment"># 닫는 기호가 먼저 나올 때</span></span><br><span class="line">            <span class="keyword">if</span> len(lst) == <span class="number">0</span>:</span><br><span class="line">                result = <span class="number">0</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="comment"># 짝이 안맞을 때</span></span><br><span class="line">            <span class="keyword">elif</span> c == <span class="string">')'</span> <span class="keyword">and</span> lst.pop() != <span class="string">'('</span>:</span><br><span class="line">                result = <span class="number">0</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">elif</span> c == <span class="string">'&#125;'</span> <span class="keyword">and</span> lst.pop() != <span class="string">'&#123;'</span>:</span><br><span class="line">                result = <span class="number">0</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> len(lst):  <span class="comment"># 리스트에 남아있으면</span></span><br><span class="line">        result = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="4871-그래프-경로-d2"><a class="markdownIt-Anchor" href="#4871-그래프-경로-d2"></a> 4871. 그래프 경로 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DFS</span><span class="params">(START)</span>:</span></span><br><span class="line">    visited[START] = <span class="literal">True</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> START <span class="keyword">in</span> my_map: <span class="comment"># NEXT 있으면</span></span><br><span class="line">        <span class="keyword">for</span> NEXT <span class="keyword">in</span> my_map[START]:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> visited[NEXT]:</span><br><span class="line">                <span class="keyword">if</span> NEXT == G:</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span> <span class="comment"># Goal</span></span><br><span class="line">                <span class="keyword">elif</span> <span class="keyword">not</span> result: <span class="comment"># 결과가 안났다면 계속 탐색</span></span><br><span class="line">                    result += DFS(NEXT)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    V, E = map(int, input().split())</span><br><span class="line">    </span><br><span class="line">    my_map = &#123;&#125; <span class="comment"># dictionary</span></span><br><span class="line">    visited = [<span class="literal">False</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(V + <span class="number">1</span>)]</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(E):</span><br><span class="line">        Start, End = map(int, input().split())</span><br><span class="line">        <span class="keyword">if</span> Start <span class="keyword">not</span> <span class="keyword">in</span> my_map:</span><br><span class="line">            my_map[Start] = [End]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            my_map[Start].append(End)</span><br><span class="line">        </span><br><span class="line">    S, G = map(int, input().split())</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, DFS(S)))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="4873-반복문자-지우기-d2"><a class="markdownIt-Anchor" href="#4873-반복문자-지우기-d2"></a> 4873. 반복문자 지우기 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    Str = input()</span><br><span class="line">    List = []</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> Str:</span><br><span class="line">        <span class="keyword">if</span> len(List) == <span class="number">0</span>:</span><br><span class="line">            List.append(c)</span><br><span class="line">        <span class="keyword">elif</span> c != List[<span class="number">-1</span>]:</span><br><span class="line">            List.append(c)</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 중복일 때</span></span><br><span class="line">            List.pop()</span><br><span class="line">            </span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, len(List)))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>Intermediate</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 파이썬 SW문제해결 기본 - String</title>
    <url>/2020/01/21/IM_String/</url>
    <content><![CDATA[<ul>
<li><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDN86AAXw5UW6&amp;subjectId=AWOVGOEKqeoDFAWg" target="_blank" rel="noopener">문제링크</a></li>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#4864-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%B9%84%EA%B5%90-d2">4864. 문자열 비교 <code>D2</code></a></li>
<li><a href="#4861-%ED%9A%8C%EB%AC%B8-d2">4861. 회문 <code>D2</code></a></li>
<li><a href="#4865-%EA%B8%80%EC%9E%90%EC%88%98-d2">4865. 글자수 <code>D2</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="4864-문자열-비교-d2"><a class="markdownIt-Anchor" href="#4864-문자열-비교-d2"></a> 4864. 문자열 비교 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    str1 = input()</span><br><span class="line">    str2 = input()</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span>  range(len(str2) - len(str1) + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> str1 == str2[i : i+len(str1)]:</span><br><span class="line">            result = <span class="number">1</span></span><br><span class="line">            </span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="4861-회문-d2"><a class="markdownIt-Anchor" href="#4861-회문-d2"></a> 4861. 회문 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line">    result = []</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#테이블 입력</span></span><br><span class="line">    str_table = []</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(N):</span><br><span class="line">        str_table.append(input())</span><br><span class="line">        </span><br><span class="line">    <span class="comment">#가로줄 탐색</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N - M + <span class="number">1</span>):</span><br><span class="line">            <span class="comment"># 슬라이싱 활용한 회문검출</span></span><br><span class="line">            <span class="keyword">if</span> str_table[r][c : c + M] == str_table[r][c : c + M][ : : <span class="number">-1</span>]:</span><br><span class="line">                result.append(str_table[r][c : c + M])</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#세로줄 탐색</span></span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> range(N - M + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(N):</span><br><span class="line">            col_lst = []  <span class="comment"># 세로줄</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(M):  <span class="comment"># 세로줄 입력</span></span><br><span class="line">                col_lst.append(str_table[r+i][c])</span><br><span class="line">            <span class="keyword">if</span> col_lst == col_lst[ : : <span class="number">-1</span>]:  <span class="comment"># 세로줄이 회문이면</span></span><br><span class="line">                result.append(<span class="string">''</span>.join(col_lst))</span><br><span class="line">                </span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="4865-글자수-d2"><a class="markdownIt-Anchor" href="#4865-글자수-d2"></a> 4865. 글자수 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    str1 = input()</span><br><span class="line">    str2 = input()</span><br><span class="line">    result = &#123;&#125;  <span class="comment"># 딕셔너리</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> str1:</span><br><span class="line">        result[i] = str2.count(i)</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, max(result.values())))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>Intermediate</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 파이썬 SW문제해결 기본 - LIST2</title>
    <url>/2020/01/21/IM_List2/</url>
    <content><![CDATA[<ul>
<li><a href="https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDN86AAXw5UW6&amp;subjectId=AWOVF-WqqecDFAWg&amp;&amp;" target="_blank" rel="noopener">문제링크</a></li>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#4836-%EC%83%89%EC%B9%A0%ED%95%98%EA%B8%B0-d2">4836. 색칠하기 <code>D2</code></a></li>
<li><a href="#4837-%EB%B6%80%EB%B6%84%EC%A7%91%ED%95%A9%EC%9D%98-%ED%95%A9-d3">4837. 부분집합의 합 <code>D3</code></a></li>
<li><a href="#4839-%EC%9D%B4%EC%A7%84%ED%83%90%EC%83%89-d2">4839. 이진탐색 <code>D2</code></a></li>
<li><a href="#4843-%ED%8A%B9%EB%B3%84%ED%95%9C-%EC%A0%95%EB%A0%AC-d3">4843. 특별한 정렬 <code>D3</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="4836-색칠하기-d2"><a class="markdownIt-Anchor" href="#4836-색칠하기-d2"></a> 4836. 색칠하기 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    <span class="comment">#palette = [[0] * 10] * 10 # 이렇게하면 Error~!! // palette[0]~palette[9]가 같은 객체로 생성</span></span><br><span class="line">    <span class="comment"># 팔레트 초기화 ( 0: 흰색, 1: 빨강, 2: 파랑, 3: 보라 )</span></span><br><span class="line">    palette = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">10</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">10</span>)]  </span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    N = int(input())</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N):</span><br><span class="line">        <span class="comment">#2 2 4 4 1</span></span><br><span class="line">        r1, c1, r2, c2, color = map(int, input().split())</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> range(r1, r2 + <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(c1, c2 + <span class="number">1</span>):</span><br><span class="line">                <span class="keyword">if</span> color == <span class="number">1</span>:  <span class="comment"># 빨강 색칠</span></span><br><span class="line">                    <span class="keyword">if</span> palette[r][c] == <span class="number">0</span>:  <span class="comment"># 흰-&gt;빨</span></span><br><span class="line">                        palette[r][c] = <span class="number">1</span></span><br><span class="line">                    <span class="keyword">elif</span> palette[r][c] == <span class="number">2</span>:  <span class="comment"># 파-&gt;보</span></span><br><span class="line">                        palette[r][c] = <span class="number">3</span></span><br><span class="line">                        result += <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:  <span class="comment"># 파랑 색칠</span></span><br><span class="line">                    <span class="keyword">if</span> palette[r][c] == <span class="number">0</span>:  <span class="comment"># 흰-&gt;파</span></span><br><span class="line">                        palette[r][c] = <span class="number">2</span></span><br><span class="line">                    <span class="keyword">elif</span> palette[r][c] == <span class="number">1</span>:  <span class="comment"># 빨-&gt;보</span></span><br><span class="line">                        palette[r][c] = <span class="number">3</span></span><br><span class="line">                        result += <span class="number">1</span></span><br><span class="line">                    </span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="4837-부분집합의-합-d3"><a class="markdownIt-Anchor" href="#4837-부분집합의-합-d3"></a> 4837. 부분집합의 합 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">nums = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">13</span>)]  <span class="comment"># 1~12 리스트</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 부분집합 리스트 구하기</span></span><br><span class="line">lst = [] </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span> &lt;&lt; len(nums)):  <span class="comment"># 경우의 수 :  2^len(nums)</span></span><br><span class="line">    sub_lst = []  <span class="comment"># 부분집합</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(nums)):</span><br><span class="line">        <span class="keyword">if</span> i &amp; (<span class="number">1</span> &lt;&lt; j):  <span class="comment"># 부분집합 만들기</span></span><br><span class="line">            sub_lst.append(nums[j])</span><br><span class="line">    lst.append(sub_lst)  <span class="comment"># 리스트에 부분집합 추가</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 테스트 케이스</span></span><br><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N, K = map(int, input().split())</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> lst:  <span class="comment"># 모든 부분집합 중</span></span><br><span class="line">        <span class="keyword">if</span> len(m) == N <span class="keyword">and</span> sum(m) == K:  <span class="comment"># 길이 N, 합 K 일 때</span></span><br><span class="line">            result += <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="4839-이진탐색-d2"><a class="markdownIt-Anchor" href="#4839-이진탐색-d2"></a> 4839. 이진탐색 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">BS</span><span class="params">(page, target)</span>:</span>  <span class="comment"># 이진 탐색</span></span><br><span class="line">    l = <span class="number">1</span></span><br><span class="line">    r = page</span><br><span class="line">    cnt = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span>(r - l &gt; <span class="number">1</span>): <span class="comment"># 두 장 이하로 남으면 탈출</span></span><br><span class="line">        c = (l+r)//<span class="number">2</span>  <span class="comment"># int((l+r)/2)와 같음</span></span><br><span class="line">        cnt += <span class="number">1</span>  <span class="comment"># 번째 시도</span></span><br><span class="line">        <span class="keyword">if</span> target &lt; c:</span><br><span class="line">            r = c</span><br><span class="line">        <span class="keyword">elif</span> target &gt; c:</span><br><span class="line">            l = c</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># target == c</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> l + <span class="number">1</span> == r:  <span class="comment"># 두 장 남은 경우</span></span><br><span class="line">        cnt += <span class="number">1</span> <span class="comment"># 찾음</span></span><br><span class="line">    <span class="keyword">return</span> cnt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">T = int(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    P, Pa, Pb = map(int, input().split())</span><br><span class="line">    cnt_a = BS(P, Pa)</span><br><span class="line">    cnt_b = BS(P, Pb)</span><br><span class="line">    </span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> cnt_a &lt; cnt_b:</span><br><span class="line">        result = <span class="string">'A'</span></span><br><span class="line">    <span class="keyword">elif</span> cnt_a &gt; cnt_b:</span><br><span class="line">        result = <span class="string">'B'</span></span><br><span class="line">        </span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, result))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="4843-특별한-정렬-d3"><a class="markdownIt-Anchor" href="#4843-특별한-정렬-d3"></a> 4843. 특별한 정렬 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N = int(input())</span><br><span class="line">    num_lst = list(map(int, input().split()))</span><br><span class="line">    result_lst = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):  <span class="comment"># 10개만 출력</span></span><br><span class="line">        max_num, min_num = num_lst[<span class="number">0</span>], num_lst[<span class="number">0</span>]  <span class="comment"># 첫 항을 최대 최소로 설정</span></span><br><span class="line">        idx = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:  <span class="comment"># 최대값의 index 검출</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(len(num_lst)):</span><br><span class="line">                <span class="keyword">if</span> num_lst[j] &gt;= max_num:</span><br><span class="line">                    max_num = num_lst[j]</span><br><span class="line">                    idx = j</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 최소값값의 index 검출</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(len(num_lst)):</span><br><span class="line">                <span class="keyword">if</span> num_lst[j] &lt;= min_num:</span><br><span class="line">                    min_num = num_lst[j]</span><br><span class="line">                    idx = j</span><br><span class="line">                    </span><br><span class="line">        result_lst.append(num_lst.pop(idx))  <span class="comment"># num_lst.pop -&gt; result_lst</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'#&#123;&#125; '</span>.format(test_case) + <span class="string">' '</span>.join(map(str, result_lst)))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>Intermediate</tag>
      </tags>
  </entry>
  <entry>
    <title>[SWEA] 파이썬 SW문제해결 기본 - LIST1</title>
    <url>/2020/01/21/IM_List1/</url>
    <content><![CDATA[<ul>
<li><a href="https://www.swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDN86AAXw5UW6&amp;subjectId=AWOVFCzaqeUDFAWg#" target="_blank" rel="noopener">문제링크</a></li>
<li>문제의 저작권은 SW Expert Academy에 있습니다.</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#4828-min-max-d2">4828. min max <code>D2</code></a></li>
<li><a href="#4831-%EC%A0%84%EA%B8%B0%EB%B2%84%EC%8A%A4-d3">4831. 전기버스 <code>D3</code></a></li>
<li><a href="#4834-%EC%88%AB%EC%9E%90-%EC%B9%B4%EB%93%9C-d2">4834. 숫자 카드 <code>D2</code></a></li>
<li><a href="#4835-%EA%B5%AC%EA%B0%84%ED%95%A9-d2">4835. 구간합 <code>D2</code></a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<hr />
<h3 id="4828-min-max-d2"><a class="markdownIt-Anchor" href="#4828-min-max-d2"></a> 4828. min max <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    cnt = int(input())</span><br><span class="line">    num_lst = list(map(int, input().split()))</span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, max(num_lst) - min(num_lst)))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="4831-전기버스-d3"><a class="markdownIt-Anchor" href="#4831-전기버스-d3"></a> 4831. 전기버스 <code>D3</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    K, N, M = map(int, input().split())</span><br><span class="line">    </span><br><span class="line">    bus = <span class="number">0</span>  <span class="comment">#버스 시작위치</span></span><br><span class="line">    charge = <span class="number">0</span>  <span class="comment">#충전횟수</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#bus_stop 초기화</span></span><br><span class="line">    bus_stop = [<span class="number">0</span>] * N</span><br><span class="line">    <span class="comment">#bus_stop 입력받기</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> map(int, input().split()):</span><br><span class="line">        bus_stop[i] = <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(bus + K &lt; N):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(K,<span class="number">-1</span>,<span class="number">-1</span>): <span class="comment">#멀리서부터</span></span><br><span class="line">            <span class="keyword">if</span> j == <span class="number">0</span>:  <span class="comment">#경우의 수가 없을 때</span></span><br><span class="line">                charge = <span class="number">0</span></span><br><span class="line">                bus += N <span class="comment">#탈출</span></span><br><span class="line">            <span class="keyword">elif</span> bus_stop[bus + j] == <span class="number">1</span>: <span class="comment">#충전소 찾았을 때</span></span><br><span class="line">                bus += j</span><br><span class="line">                charge += <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">                </span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, charge))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="4834-숫자-카드-d2"><a class="markdownIt-Anchor" href="#4834-숫자-카드-d2"></a> 4834. 숫자 카드 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N = int(input()) <span class="comment"># 쓰이지 않음</span></span><br><span class="line">    num_list = list(map(int,input()))</span><br><span class="line"></span><br><span class="line">    max_num = <span class="number">-1</span></span><br><span class="line">    max_cnt = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">if</span> num_list.count(i) &gt;= max_cnt:</span><br><span class="line">            max_cnt = num_list.count(i)</span><br><span class="line">            max_num = i</span><br><span class="line">            </span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125; &#123;&#125;'</span>.format(test_case, max_num, max_cnt))</span><br></pre></td></tr></table></figure>
<hr />
<h3 id="4835-구간합-d2"><a class="markdownIt-Anchor" href="#4835-구간합-d2"></a> 4835. 구간합 <code>D2</code></h3>
<ul>
<li><strong>내 코드</strong></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">T = int(input())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> test_case <span class="keyword">in</span> range(<span class="number">1</span>, T + <span class="number">1</span>):</span><br><span class="line">    N, M = map(int, input().split())</span><br><span class="line">    num_lst = list(map(int, input().split()))</span><br><span class="line">    </span><br><span class="line">    min_sum = max_sum = sum(num_lst[<span class="number">0</span> : M])  <span class="comment"># 첫 부분집합을 최대/최소로 설정</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N - M + <span class="number">1</span>):</span><br><span class="line">        temp_sum = <span class="number">0</span>  <span class="comment"># 부분합 초기화</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(M):  <span class="comment"># 부분합 계산</span></span><br><span class="line">            temp_sum += num_lst[i + j]</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#최대값 최소값 갱신</span></span><br><span class="line">        <span class="keyword">if</span> min_sum &gt; temp_sum:</span><br><span class="line">            min_sum = temp_sum</span><br><span class="line">        <span class="keyword">if</span> max_sum &lt; temp_sum:</span><br><span class="line">            max_sum = temp_sum</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">'#&#123;&#125; &#123;&#125;'</span>.format(test_case, max_sum - min_sum))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>코딩 테스트 준비</category>
        <category>SW Expert Academy</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>SWEA</tag>
        <tag>Intermediate</tag>
      </tags>
  </entry>
  <entry>
    <title>파이썬 소소한 정리</title>
    <url>/2020/01/21/python_note/</url>
    <content><![CDATA[<ul>
<li>파이썬 소소한 정리</li>
</ul>
<p><ul class="markdownIt-TOC">
<li>
<ul>
<li><a href="#pep-8-style-guide-for-python-code">PEP 8 – Style Guide for Python Code</a></li>
<li><a href="#documentation-strings">Documentation Strings</a></li>
<li><a href="#string-interpolation">String interpolation</a></li>
<li><a href="#%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%97%90%EC%84%9C-%ED%91%9C%ED%98%84%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94-%EA%B0%80%EC%9E%A5-%ED%81%B0-%EC%88%98">파이썬에서 표현할 수 있는 가장 큰 수</a></li>
<li><a href="#%EC%8B%A4%EC%88%98-%EB%B9%84%EA%B5%90-%EC%97%B0%EC%82%B0-%EC%B2%98%EB%A6%AC-3%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95">실수 비교 연산 처리 3가지 방법</a></li>
<li><a href="#%EC%9D%B4%EC%8A%A4%EC%BC%80%EC%9D%B4%ED%94%84-%EC%8B%9C%ED%80%80%EC%8A%A4">이스케이프 시퀀스</a></li>
<li><a href="#%EB%8B%A8%EC%B6%95%ED%8F%89%EA%B0%80">단축평가</a></li>
<li><a href="#%EB%B9%84%EA%B5%90%ED%95%A0%EB%95%8C-is">비교할때 is, ==</a></li>
<li><a href="#%EC%97%B0%EC%82%B0%EC%9E%90-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84">연산자 우선순위</a></li>
<li><a href="#dictionary-set">Dictionary / Set</a></li>
<li><a href="#for~else-%EC%99%80-break">for~else 와 break</a></li>
<li><a href="#sort-%EC%99%80-sorted%EC%9D%98-%EC%B0%A8%EC%9D%B4">.sort() 와 sorted()의 차이</a></li>
<li><a href="#%EC%9C%84%EC%B9%98-%EC%9D%B8%EC%9E%90-%EA%B0%80%EB%B3%80-%EC%9D%B8%EC%9E%90-%ED%82%A4%EC%9B%8C%EB%93%9C-%EA%B0%80%EB%B3%80-%EC%9D%B8%EC%9E%90">위치 인자, 가변 인자, 키워드 가변 인자</a></li>
<li><a href="#python-decorator">Python Decorator</a></li>
<li><a href="#dictsetdefault">Dict.setdefault()</a></li>
</ul>
</li>
</ul>
</p>
<a id="more"></a>
<h3 id="pep-8-style-guide-for-python-code"><a class="markdownIt-Anchor" href="#pep-8-style-guide-for-python-code"></a> PEP 8 – Style Guide for Python Code</h3>
<ul>
<li><a href="https://kongdols-room.tistory.com/18" target="_blank" rel="noopener">PEP8 한글 번역 - 파이썬 기초(0) :: EG공간</a></li>
</ul>
<h3 id="documentation-strings"><a class="markdownIt-Anchor" href="#documentation-strings"></a> <a href="https://www.python.org/dev/peps/pep-0008/#documentation-strings" target="_blank" rel="noopener">Documentation Strings</a></h3>
<ul>
<li>
<p>Module 첫번째 줄, 함수 선언 후 내부 바로 아랫줄 또는 클래스 선언 후 내부 바로 아랫줄에 큰따옴표 3개나 작은 따옴표 3개로 작성하면됩니다. (<code>&quot;&quot;&quot;</code> 추천)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomClass</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">클래스의 문서화 내용을 입력합니다.    </span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">custom_function</span><span class="params">(param)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        함수의 문서화 내용을 입력합니다.</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">      ... 코드  ...</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="string-interpolation"><a class="markdownIt-Anchor" href="#string-interpolation"></a> String interpolation</h3>
<ul>
<li>
<p><code>%-formatting</code></p>
</li>
<li>
<p><a href="https://pyformat.info/" target="_blank" rel="noopener"><code>str.format()</code></a></p>
</li>
<li>
<p><a href="https://www.python.org/dev/peps/pep-0498/" target="_blank" rel="noopener"><code>f-strings</code></a> : 파이썬 3.6 이후 버전에서 지원</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num = <span class="number">1</span>/<span class="number">3</span></span><br><span class="line">print(<span class="string">'1/3 = %0.2f'</span> % num)</span><br><span class="line">print(<span class="string">'1/3 = &#123;:0.2f&#125;'</span>.format(num))</span><br><span class="line">print(<span class="string">f'1/3 = <span class="subst">&#123;num:<span class="number">0.2</span>f&#125;</span>'</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">today = datetime.datetime.now()</span><br><span class="line">print(<span class="string">f'오늘은 <span class="subst">&#123;today:%y&#125;</span>년 <span class="subst">&#123;today:%m&#125;</span>월 <span class="subst">&#123;today:%d&#125;</span>일 <span class="subst">&#123;today:%A&#125;</span>'</span>)</span><br></pre></td></tr></table></figure>
<h3 id="파이썬에서-표현할-수-있는-가장-큰-수"><a class="markdownIt-Anchor" href="#파이썬에서-표현할-수-있는-가장-큰-수"></a> 파이썬에서 표현할 수 있는 가장 큰 수</h3>
<ul>
<li>파이썬에서 가장 큰 숫자를 활용하기 위해 sys 모듈을 불러온다.</li>
<li>파이썬은 기존 C 계열 프로그래밍 언어와 다르게 정수 자료형(integer)에서 오버플로우가 없다.</li>
<li>arbitrary-precision arithmetic를 사용하기 때문이다.</li>
</ul>
<h3 id="실수-비교-연산-처리-3가지-방법"><a class="markdownIt-Anchor" href="#실수-비교-연산-처리-3가지-방법"></a> 실수 비교 연산 처리 3가지 방법</h3>
<ul>
<li>1e-10</li>
<li>sys.float_info.epsilon</li>
<li>math.isclose()</li>
</ul>
<h3 id="이스케이프-시퀀스"><a class="markdownIt-Anchor" href="#이스케이프-시퀀스"></a> 이스케이프 시퀀스</h3>
<p>문자열을 활용하는 경우 특수문자 혹은 조작을 하기 위하여 사용되는 것으로 <code>\</code>를 활용하여 이를 구분합니다.</p>
<table>
<thead>
<tr>
<th style="text-align:center">예약문자</th>
<th style="text-align:center">내용(의미)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">\n</td>
<td style="text-align:center">줄 바꿈</td>
</tr>
<tr>
<td style="text-align:center">\t</td>
<td style="text-align:center">탭</td>
</tr>
<tr>
<td style="text-align:center">\r</td>
<td style="text-align:center">캐리지리턴</td>
</tr>
<tr>
<td style="text-align:center">\0</td>
<td style="text-align:center">널(Null)</td>
</tr>
<tr>
<td style="text-align:center">\\</td>
<td style="text-align:center"><code>\</code></td>
</tr>
<tr>
<td style="text-align:center">\’</td>
<td style="text-align:center">단일인용부호(<code>'</code>)</td>
</tr>
<tr>
<td style="text-align:center">\&quot;</td>
<td style="text-align:center">이중인용부호(<code>&quot;</code>)</td>
</tr>
</tbody>
</table>
<h3 id="단축평가"><a class="markdownIt-Anchor" href="#단축평가"></a> 단축평가</h3>
<ul>
<li>
<p>첫 번째 값이 확실할 때, 두 번째 값은 확인 하지 않음</p>
</li>
<li>
<p>조건문에서 뒷 부분을 판단하지 않아도 되기 때문에 속도 향상</p>
<ul>
<li>파이썬에서 and는 a가 거짓이면 a를 리턴하고, 참이면 b를 리턴한다.</li>
<li>파이썬에서 or은 a가 참이면 a를 리턴하고, 거짓이면 b를 리턴한다.</li>
</ul>
</li>
</ul>
<h3 id="비교할때-is"><a class="markdownIt-Anchor" href="#비교할때-is"></a> 비교할때 is, ==</h3>
<p><code>is</code> 는 레퍼런스 체크<br />
<code>==</code> 는 값 체크</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="number">257</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a <span class="keyword">is</span> <span class="number">257</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a == <span class="number">257</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>
<h3 id="연산자-우선순위"><a class="markdownIt-Anchor" href="#연산자-우선순위"></a> 연산자 우선순위</h3>
<ol start="0">
<li>
<p><code>()</code>을 통한 grouping</p>
</li>
<li>
<p>Slicing</p>
</li>
<li>
<p>Indexing</p>
</li>
<li>
<p>제곱연산자<br />
<code>**</code></p>
</li>
<li>
<p>단항연산자<br />
<code>+</code>, <code>-</code> (음수/양수 부호)</p>
</li>
<li>
<p>산술연산자<br />
<code>*</code>, <code>/</code>, <code>%</code></p>
</li>
<li>
<p>산술연산자<br />
<code>+</code>, <code>-</code></p>
</li>
<li>
<p>비교연산자, <code>in</code>, <code>is</code></p>
</li>
<li>
<p><code>not</code></p>
</li>
<li>
<p><code>and</code></p>
</li>
<li>
<p><code>or</code></p>
</li>
</ol>
<h3 id="dictionary-set"><a class="markdownIt-Anchor" href="#dictionary-set"></a> Dictionary / Set</h3>
<ul>
<li>
<p>파이썬 - 기본을 갈고 닦자! - WikiDocs<br />
<a href="https://wikidocs.net/16043" target="_blank" rel="noopener">17. dictionary(딕셔너리)</a><br />
<a href="https://wikidocs.net/16044" target="_blank" rel="noopener">18. set(집합)</a></p>
</li>
<li>
<p><code>dictionary</code>는 아이템이 삽입되는 순서를 가지고 있습니다.</p>
</li>
</ul>
<h3 id="for~else-와-break"><a class="markdownIt-Anchor" href="#for~else-와-break"></a> for~else 와 break</h3>
<p><code>else</code> 구문은 <code>for</code> 반복문을 빠져나올 때 한번 실행된다.</p>
<p>단, <code>break</code>로 빠져나왔을 땐 실행되지 않는다.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 소수 찾기</span></span><br><span class="line">numbers = [<span class="number">26</span>, <span class="number">39</span>, <span class="number">51</span>, <span class="number">53</span>, <span class="number">57</span>, <span class="number">79</span>, <span class="number">85</span>]</span><br><span class="line"><span class="keyword">for</span> number <span class="keyword">in</span> numbers:</span><br><span class="line">    <span class="keyword">for</span> insu <span class="keyword">in</span> range(<span class="number">2</span>, number): <span class="comment"># 2 ~ number-1</span></span><br><span class="line">        <span class="keyword">if</span> number % insu == <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">f'<span class="subst">&#123;number&#125;</span> 는 소수가 아닙니다. <span class="subst">&#123;insu&#125;</span> 는 <span class="subst">&#123;number&#125;</span> 의 인수입니다.'</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">f'<span class="subst">&#123;number&#125;</span> 는 소수입니다.'</span>)</span><br></pre></td></tr></table></figure>
<h3 id="sort-와-sorted의-차이"><a class="markdownIt-Anchor" href="#sort-와-sorted의-차이"></a> .sort() 와 sorted()의 차이</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#.sort()</span></span><br><span class="line">numbers = [<span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">print(numbers.sort()) <span class="comment"># None</span></span><br><span class="line">print(numbers) <span class="comment"># [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#sorted()</span></span><br><span class="line">numbers = [<span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">print(sorted(numbers)) <span class="comment"># [1, 2, 3, 4, 5]</span></span><br><span class="line">print(numbers) <span class="comment"># [5, 3, 2, 4, 1]</span></span><br></pre></td></tr></table></figure>
<h3 id="위치-인자-가변-인자-키워드-가변-인자"><a class="markdownIt-Anchor" href="#위치-인자-가변-인자-키워드-가변-인자"></a> 위치 인자, 가변 인자, 키워드 가변 인자</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_ranking</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> args, kwargs</span><br><span class="line"></span><br><span class="line">result = save_ranking(<span class="string">'ming'</span>, <span class="string">'alice'</span>, <span class="string">'tom'</span>, fourth=<span class="string">'wilson'</span>, fifth=<span class="string">'roy'</span>)</span><br><span class="line">print(result)</span><br><span class="line"><span class="comment">#(('ming', 'alice', 'tom'), &#123;'fourth': 'wilson', 'fifth': 'roy'&#125;)</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_url</span><span class="params">(itemPerPage = <span class="number">10</span> ,**kwargs)</span>:</span></span><br><span class="line">    base_url = <span class="string">'http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?'</span></span><br><span class="line">    url = base_url + <span class="string">'itemPerPage='</span> + str(itemPerPage) + <span class="string">'&amp;'</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> kwargs:</span><br><span class="line">        url += i + <span class="string">'='</span> + kwargs[i] + <span class="string">'&amp;'</span></span><br><span class="line">    print(url)</span><br><span class="line">    </span><br><span class="line">api = &#123;</span><br><span class="line">    <span class="string">'key'</span>: <span class="string">'abc'</span>,</span><br><span class="line">    <span class="string">'targetDt'</span>: <span class="string">'yyyymmdd'</span>,</span><br><span class="line">    <span class="string">'itemPerPage'</span> : <span class="number">8</span></span><br><span class="line">&#125;</span><br><span class="line">my_url(**api)</span><br></pre></td></tr></table></figure>
<h3 id="python-decorator"><a class="markdownIt-Anchor" href="#python-decorator"></a> Python Decorator</h3>
<p><a href="https://bluese05.tistory.com/30" target="_blank" rel="noopener">https://bluese05.tistory.com/30</a></p>
<h3 id="dictsetdefault"><a class="markdownIt-Anchor" href="#dictsetdefault"></a> Dict.setdefault()</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dust = &#123;<span class="string">'서울'</span> : <span class="number">60</span>, <span class="string">'부산'</span> : <span class="number">20</span>&#125;</span><br><span class="line"></span><br><span class="line">dust.setdefault(<span class="string">'구미'</span>, <span class="number">40</span>) <span class="comment"># 초기값 설정에 많이 활용함</span></span><br><span class="line">dust[<span class="string">'구미'</span>] = dust.get(<span class="string">'구미'</span>, <span class="number">90</span>) <span class="comment"># 윗줄과 같은 동작</span></span><br></pre></td></tr></table></figure>
<p>참고 : <a href="https://withcoding.com/78" target="_blank" rel="noopener">파이썬 dict 딕셔너리 사전 사용법 정리 (keys, values, items)</a></p>
]]></content>
      <categories>
        <category>SSAFY</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>첫 글</title>
    <url>/2020/01/20/first_post/</url>
    <content><![CDATA[<h2 id="다짐"><a class="markdownIt-Anchor" href="#다짐"></a> 다짐</h2>
<blockquote>
<p>꾸준하게 목표를 잃지 말고 나아가자</p>
</blockquote>
<h2 id="목표"><a class="markdownIt-Anchor" href="#목표"></a> 목표</h2>
<ol>
<li>코드는 남이 봐도 한번에 알아볼 수 있게 이쁘게</li>
<li>잘 짜여진 코드를 내것으로 만들기</li>
</ol>
]]></content>
      <categories>
        <category>SSAFY</category>
      </categories>
  </entry>
</search>
